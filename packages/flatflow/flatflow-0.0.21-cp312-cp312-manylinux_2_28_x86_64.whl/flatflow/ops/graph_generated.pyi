from __future__ import annotations

import flatbuffers
import numpy as np

import flatbuffers
import typing
from flatflow.ops.node_generated import Node

uoffset: typing.TypeAlias = flatbuffers.number_types.UOffsetTFlags.py_type

class Graph(object):
  @classmethod
  def GetRootAs(cls, buf: bytes, offset: int) -> Graph: ...
  @classmethod
  def GetRootAsGraph(cls, buf: bytes, offset: int) -> Graph: ...
  def Init(self, buf: bytes, pos: int) -> None: ...
  def Nodes(self, i: int) -> Node | None: ...
  def NodesLength(self) -> int: ...
  def NodesIsNone(self) -> bool: ...
def GraphStart(builder: flatbuffers.Builder) -> None: ...
def GraphAddNodes(builder: flatbuffers.Builder, nodes: uoffset) -> None: ...
def GraphStartNodesVector(builder: flatbuffers.Builder, num_elems: int) -> uoffset: ...
def GraphEnd(builder: flatbuffers.Builder) -> uoffset: ...

