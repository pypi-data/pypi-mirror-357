[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ninjapy"
version = "0.1.2"
description = "Python API client for NinjaRMM (NinjaOne)"
readme = "README.md"
license = "MIT"
authors = [
    {name = "John Stringer", email = "john.stringer@gmail.com"}
]
maintainers = [
    {name = "John Stringer", email = "john.stringer@gmail.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",

    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Typing :: Typed"
]
keywords = [
    "ninjaone",
    "ninjarmm", 
    "rmm",
    "api",
    "client",
    "remote monitoring",
    "device management",
    "msp"
]
requires-python = ">=3.11"
dependencies = [
    "requests>=2.25.0"
]

[project.urls]
Homepage = "https://github.com/jstrn/ninjapy"
Documentation = "https://github.com/jstrn/ninjapy#readme"
Repository = "https://github.com/jstrn/ninjapy.git"
"Bug Tracker" = "https://github.com/jstrn/ninjapy/issues"
Changelog = "https://github.com/jstrn/ninjapy/blob/main/CHANGELOG.md"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "isort>=5.12.0",
    "pre-commit>=3.0.0",
    "build>=0.10.0",
    "twine>=4.0.0"
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "responses>=0.23.0"
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0"
]

[tool.setuptools.packages.find]
include = ["ninjapy*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
ninjapy = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["ninjapy"]

[tool.mypy]
python_version = "3.11"
warn_unused_configs = true
# Disable all type checking for now - codebase needs significant typing work
ignore_errors = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=ninjapy --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "integration: marks tests as integration tests"
]

[tool.coverage.run]
source = ["ninjapy"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/.*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@abstract"
] 