import{_ as a,l as i,I as s,d as n,K as p}from"./mermaid-BgCxVw2J.js";import{p as m}from"./radar-MK3ICKWK-FyfW4UKQ.js";import"./index-DlQKt39j.js";import"./transform-C5148Z0S.js";import"./_baseEach-DtUk7cBy.js";import"./_baseUniq-BuhsH2Gw.js";import"./min-DTkssK90.js";import"./_baseMap-zXgLfXUO.js";import"./clone-Cho8ekmu.js";import"./_createAggregator-CCTzDuxr.js";var d={parse:a(async r=>{const t=await m("info",r);i.debug(t)},"parse")},g={version:p.version},v={parser:d,db:{getVersion:a(()=>g.version,"getVersion")},renderer:{draw:a((r,t,o)=>{i.debug(`rendering info diagram
`+r);const e=s(t);n(e,100,400,!0),e.append("g").append("text").attr("x",100).attr("y",40).attr("class","version").attr("font-size",32).style("text-anchor","middle").text(`v${o}`)},"draw")}};export{v as diagram};
