name: Build

on:
  push:
    branches: [ 'master' ]
  pull_request:

# one running workflow per branch, others will wait
concurrency: ${{ github.ref }}

env:
  MIN_PYTHON_VERSION: "3.10"

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.MIN_PYTHON_VERSION }}
      - uses: pre-commit/action@v3.0.1

  mypy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.10', '3.11', '3.12', '3.13' ]
    steps:
      - uses: actions/checkout@v4
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: uv sync --all-extras
      - name: Run mypy
        run: uv run mypy .

  test:
    runs-on: ubuntu-latest
    needs:
      - pre-commit
      - mypy
    strategy:
      matrix:
        python-version: [ '3.10', '3.11', '3.12', '3.13' ]
    steps:
      - uses: actions/checkout@v4
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: uv sync --all-extras
      - name: Run test
        run: uv run pytest --cov=aiohttp_apigami --cov-report=xml --junitxml=junit.xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          flags: >-
            Py-${{
              matrix.python-version
            }}
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}


  # https://github.com/marketplace/actions/alls-green#why
  check: # This job does nothing and is only used for the branch protection
    if: always()
    needs:
      - pre-commit
      - mypy
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
