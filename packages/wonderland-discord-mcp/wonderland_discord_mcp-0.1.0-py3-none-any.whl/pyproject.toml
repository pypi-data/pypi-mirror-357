[project]
name = "wonderland-discord-mcp"
version = "0.1.0"
description = "Discord MCP Server - Model Context Protocol server for Discord API integration"
readme = "README.md"
requires-python = ">=3.10"
authors = [{ name = "Wonderland", email = "security@wonderland.xyz" }]
license = { text = "MIT" }
keywords = ["discord", "mcp", "model-context-protocol", "ai", "chatbot"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Communications :: Chat",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = ["httpx>=0.28.1", "mcp>=1.9.4", "python-dotenv>=1.1.0"]

[project.scripts]
wonderland-discord-mcp = "main:main"

[project.urls]
Homepage = "https://github.com/defi-wonderland/discord-mcp"
Repository = "https://github.com/defi-wonderland/discord-mcp"
Issues = "https://github.com/defi-wonderland/discord-mcp/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["."]

[dependency-groups]
dev = [
    "black>=25.1.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "respx>=0.22.0",
    "ruff>=0.12.0",
    "twine>=6.1.0",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = ["-v", "--tb=short"]

[tool.black]
line-length = 88
target-version = ["py310"]

[tool.ruff]
target-version = "py310"
line-length = 88

