[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "les-audits-affaires-eval-harness"
version = "1.3.2"
description = "Evaluation harness for Les Audits-Affaires LLM benchmark"
authors = [{ name = "LegML Team", email = "contact@legml.ai" }]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.9"
keywords = ["llm", "evaluation", "legal", "french", "benchmark", "nlp"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "aiohttp>=3.9",
    "requests>=2.31",
    "openai>=1.18",
    "tenacity>=8.2",
    "python-dotenv>=1.0",
    "datasets>=2.18",
    "tqdm>=4.66",
    "jsonlines>=4.0",
    "pandas>=2.2",
    "matplotlib>=3.8",
    "seaborn>=0.13",
    "openpyxl>=3.1",
    "numpy>=1.24",
    "scipy>=1.11",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=8.0",
    "pytest-cov>=4.0",
    "pytest-asyncio>=0.23",
    "pytest-mock>=3.12",
    
    # Code Quality
    "black>=24.0",
    "isort>=5.13",
    "flake8>=7.0",
    "mypy>=1.8",
    "pre-commit>=3.6",
    
    # Security
    "bandit>=1.7",
    "safety>=3.0",
    
    # Documentation
    "mkdocs>=1.5",
    "mkdocs-material>=9.5",
    "mkdocstrings[python]>=0.24",
    
    # Build and Release
    "build>=1.0",
    "twine>=4.0",
    "bump2version>=1.0",
]

visualization = [
    "plotly>=5.17",
    "dash>=2.16",
    "streamlit>=1.29",
]

all = [
    "les-audits-affaires-eval-harness[dev,visualization]"
]

[project.urls]
Homepage = "https://github.com/legmlai/les-audits-affaires-eval-harness"
Documentation = "https://les-audits-affaires-eval-harness.readthedocs.io"
Repository = "https://github.com/legmlai/les-audits-affaires-eval-harness.git"
Issues = "https://github.com/legmlai/les-audits-affaires-eval-harness/issues"
Changelog = "https://github.com/legmlai/les-audits-affaires-eval-harness/blob/main/CHANGELOG.md"

[project.scripts]
lae-eval = "les_audits_affaires_eval.cli:main"

[project.entry-points."console_scripts"]
les-audits-affaires-eval = "les_audits_affaires_eval.cli:main"

# Tool configurations
[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"les_audits_affaires_eval" = ["py.typed"]

[tool.black]
line-length = 100
target-version = ["py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true
ignore_errors = true
follow_imports = "skip"

[[tool.mypy.overrides]]
module = [
    "datasets.*",
    "jsonlines.*",
    "matplotlib.*",
    "seaborn.*",
    "openpyxl.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=les_audits_affaires_eval",
    "--cov-report=term-missing",
    "--cov-report=html",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "scripts"]
skips = ["B101", "B601"]

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503", "E501", "F403", "F405"]
per-file-ignores = [
    "__init__.py:F401",
    "scripts/*:E402,F401,E501,F841,F541,W291",
    "tests/*:E402,F401,E501,F541,W291",
] 