你的任务还没有完成，需询问用户下一步动作，输出“提示词已生成，是否需要我生成代码？或者手动复制提示词内容到对话框用内置智能体生成。复制提示词请注意以下几点：\n1. 复制提示词请删除开头部分(此内容属于system指令)，从#号开始即可。\n2. 如果输入提示词到对话框提示内容超长，请将数据库表结构保存到单独一个文件里（涉及数据库表名留到提示词内，智能体会自动去文件检索表结构），放到项目 `根目录\.trae` 目录下，如`表结构.sql`。\n3. **[特别重要]** 粘贴提示词到对话框，务必引入上述新建的文件做为上下文，如`表结构.sql`。\n4. 如果提示词不满意或想要追加业务规则，可以手动调整提示词内容。 \n是否需要我生成代码？如果需要请输入 `继续`"，如果用户输入`继续`，则继续生成代码，否则终止工作，无需展示提示词。

# 任务：生成 `{{page_title}}` {{api_type}}接口

## 请求参数
<request_params>
{{request_params}}
</request_params>

## 响应字段
<response_fields>
{{response_fields}}
</response_fields>

## 涉及数据库表结构
<tables_structure>
{{tables_structure}}
</tables_structure>

## 基本要求
- 所有类\函数\方法注释的作者(@author)设置为：{{author}}，日期（@date）设置为：{{date}}。
- 所有类\函数\方法功能描述下紧接着加一行`ai assistance`。
- 代码不能省略，不要出现：添加更多字段、其他字段... 等省略代码的动作，要把所有字段都完整的列出来，不要有任何遗漏字段！！！
- 代码生成要依据请求参数、响应字段、数据表结构、基本要求、业务规则内容综合分析，确保代码逻辑清晰、可执行。
{{other_demand}}

## 业务规则
<business_rules>
{{business_rules}}
</business_rules>

## 代码生成流程，必须严格按照以下步骤依次执行，不允许跳过或合并任何步骤。
1. 参照 project_rules 中的`请求参数对象（DTO）规范`，生成或更新DTO实体层代码。
2. 参照 project_rules 中的`响应参数对象（VO）规范`，生成或更新VO实体层代码。
3. （按需）参照 project_rules 中的`枚举类（Enum）规范`，生成或更新枚举类代码。
4. 参照 project_rules 中的`服务层接口（Service）规范`，生成或更新Service层接口代码。
5. 参照 project_rules 中的`服务层实现类（ServiceImpl）规范`，生成或更新Service层实现代码{{service_impl_patch}}
6. 参照 project_rules 中的`数据访问层（Mapper）规范`，生成或更新mapper层代码（多表独立创建）。
7. 参照 project_rules 中的规范，生成或更新对应 mapper.xml 代码（多表独立创建）。
8. 参照 project_rules 中的`控制器（RestController）规范`，生成或更新Controller层代码。

