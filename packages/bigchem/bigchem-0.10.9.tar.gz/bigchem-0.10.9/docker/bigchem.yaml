# A union of the docker-compose.yaml and terachem.swarm.yaml files for a single file
# deployment of BigChem to any Docker Swarm.

# Deploy BigChem (with TeraChem) across nodes. If you do not want
# to deploy TeraChem remove the :latest-terachem tag from the worker image.

# If you want workers to connect to a BigChem broker/backend running elsewhere, comment
# out the broker and backend services and set set bigchem_broker_url and
# bigchem_backend_url in this file or as environment variables using a .env file. See
# docker/xstream.yaml for an example.

# To run TeraChem in licensed mode copy a license.key file to the Swarm Manager node
# and run "docker secret create terachem_license /path/to/license.key", the uncomment
# the "secrets" yaml blocks in the code below.

services:
  broker:
    image: rabbitmq:3.11-management-alpine
    hostname: rmq-host1
    ports:
      - 5672:5672
      - 15672:15672
    deploy:
      placement:
        constraints:
          - "node.role==manager"
    volumes:
      - broker:/var/lib/rabbitmq

  backend:
    image: redis:7-alpine
    ports:
      - 6379:6379
    volumes:
      - backend:/data
    deploy:
      placement:
        constraints:
          - "node.role==manager"

  worker:
    image: mtzgroup/bigchem-worker:latest-terachem
    environment:
      - bigchem_broker_url=amqp://broker
      - bigchem_backend_url=redis://backend/0
      # Set concurrency to modify number of worker processes on each node
      # Set to 0 to default to the number of CPUs on your machine. Default value is 1.
      # - bigchem_worker_concurrency=1
      # Workers will grab this many tasks at once. Increase prefetch if tasks are small
      # relative to network overhead time.
      # https://docs.celeryproject.org/en/stable/userguide/optimizing.html#prefetch-limits
      # - bigchem_prefetch_multiplier: int = 1
    volumes:
      - worker:/tmp
    # secrets:
    #   - source: terachem_license
    #     target: /opt/terachem/license.key
    deploy:
      mode: global

# secrets:
#   terachem_license:
#     external: true

volumes:
  broker:
  backend:
  worker:
