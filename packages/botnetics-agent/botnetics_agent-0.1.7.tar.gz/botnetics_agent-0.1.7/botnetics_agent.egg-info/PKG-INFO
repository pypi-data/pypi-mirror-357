Metadata-Version: 2.4
Name: botnetics-agent
Version: 0.1.7
Summary: Simple framework for building Telegram agents with Django
Home-page: https://github.com/Behokus/botnetics-agent
Author: Behokus
Author-email: behokus@proton.me
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: Django<5.0,>=4.0
Requires-Dist: django-cors-headers>=4.0.0
Requires-Dist: requests>=2.28.0
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# Botnetics Agent

A simple framework for building Telegram agents with Django.

## Installation

```bash
pip install botnetics-agent
```

## Quick Start

```bash
botnetics init my-agent
cd my-agent
python agent.py
```

Test your agent:
```bash
curl -X POST http://localhost:8000/message/ \
  -H "Content-Type: application/json" \
  -d '{"text": "Hello", "chat_id": "123", "user_id": "456"}'
```

## Features

- Simple message handling with decorators
- Built-in Django web server
- REST API endpoint for message processing
- Easy project scaffolding
- Docker support

## Usage

Create a new agent:
```python
from botnetics import BotneticsApp, Message

app = BotneticsApp(api_key="your-key")

@app.on_message
def handle_message(message: Message):
    return Message(
        text=f"You said: {message.text}",
        chat_id=message.chat_id,
        user_id=message.user_id
    )

app.run()
```

## License

MIT License
