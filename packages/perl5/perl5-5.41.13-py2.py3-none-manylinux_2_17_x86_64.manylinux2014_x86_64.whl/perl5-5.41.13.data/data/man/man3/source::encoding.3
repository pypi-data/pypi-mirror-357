.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man v6.0.2 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Required to disable full justification in groff 1.23.0.
.if n .ds AD l
.\" ========================================================================
.\"
.IX Title "source::encoding 3"
.TH source::encoding 3 2025-05-28 "perl v5.41.13" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
source::encoding \-\- Declare Perl source code encoding
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 3
\& use source::encoding \*(Aqascii\*(Aq;
\& use source::encoding \*(Aqutf8\*(Aq;
\& no source::encoding;
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
These days, Perl code either generally contains only ASCII characters with
\&\f(CW\*(C`\ex{}\*(C'\fR and similar escapes to represent non\-ASCII, or \f(CW\*(C`use\ utf8\*(C'\fR is used
to indicate that the source code itself contains characters encoded as UTF\-8.
.PP
That means that a character in the source code not meeting these criteria is
often a typographical error.  This pragma is used to tell Perl to raise an
error when this happens.
.PP
\&\f(CW\*(C`use\ source::encoding\ \*(Aqutf8\*(Aq\*(C'\fR is a synonym for \f(CW\*(C`use\ utf8\*(C'\fR.  They may
be used interchangeably.
.PP
\&\f(CW\*(C`use\ source::encoding\ \*(Aqascii\*(Aq\*(C'\fR turns off any UTF\-8 expectations, and
raises a fatal error if any character within its scope in the input source
code is not ASCII (or ASCII\-equivalent on EBCDIC systems).
.PP
\&\f(CW\*(C`no\ source::encoding\*(C'\fR turns off any UTF\-8/ASCII expectations for the
remainder of its scope.  The meaning of non\-ASCII characters is then
undefined.
.PP
\&\f(CW\*(C`use\ source::encoding\ \*(Aqascii\*(Aq\*(C'\fR is automatically enabled within the
lexical scope of a \f(CW\*(C`use\ v5.41.0\*(C'\fR or higher.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
utf8
