.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man v6.0.2 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Required to disable full justification in groff 1.23.0.
.if n .ds AD l
.\" ========================================================================
.\"
.IX Title "PERL5414DELTA 1"
.TH PERL5414DELTA 1 2025-05-28 "perl v5.41.13" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
perl5414delta \- what is new for perl v5.41.4
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This document describes differences between the 5.41.3 release and the 5.41.4
release.
.PP
If you are upgrading from an earlier release such as 5.41.2, first read
perl5413delta, which describes differences between 5.41.2 and 5.41.3.
.SH "Modules and Pragmata"
.IX Header "Modules and Pragmata"
.SS "Updated Modules and Pragmata"
.IX Subsection "Updated Modules and Pragmata"
.IP \(bu 4
CPAN has been upgraded from version 2.36 to 2.37.
.IP \(bu 4
Devel::Peek has been upgraded from version 1.34 to 1.36.
.IP \(bu 4
ExtUtils::ParseXS has been upgraded from version 3.53 to 3.54.
.IP \(bu 4
ExtUtils::Typemaps has been upgraded from version 3.53 to 3.54.
.IP \(bu 4
Module::CoreList has been upgraded from version 5.20240829 to 5.20240920.
.IP \(bu 4
overload has been upgraded from version 1.38 to 1.39.
.IP \(bu 4
Scalar::Util has been upgraded from version 1.65 to 1.66.
.IP \(bu 4
Storable has been upgraded from version 3.34 to 3.35.
.IP \(bu 4
Test::Simple has been upgraded from version 1.302201 to 1.302204.
.IP \(bu 4
version has been upgraded from version 0.9930 to 0.9933.
.IP \(bu 4
XS::APItest has been upgraded from version 1.37 to 1.38.
.SH Diagnostics
.IX Header "Diagnostics"
The following additions or changes have been made to diagnostic output,
including warnings and fatal error messages. For the complete list of
diagnostic messages, see perldiag.
.PP
\fINew Warnings\fR
.IX Subsection "New Warnings"
.IP \(bu 4
Possible precedence problem between ! and \f(CW%s\fR
.Sp
(W precedence) You wrote something like
.Sp
.Vb 4
\&    !$x < $y               # parsed as: (!$x) < $y
\&    !$x eq $y              # parsed as: (!$x) eq $y
\&    !$x =~ /regex/         # parsed as: (!$x) =~ /regex/
\&    !$obj isa Some::Class  # parsed as: (!$obj) isa Some::Class
.Ve
.Sp
but because \f(CW\*(C`!\*(C'\fR has higher precedence than comparison operators, \f(CW\*(C`=~\*(C'\fR, and
\&\f(CW\*(C`isa\*(C'\fR, this is interpreted as comparing/matching the logical negation of the
first operand, instead of negating the result of the comparison/match.
.Sp
To disambiguate, either use a negated comparison/binding operator:
.Sp
.Vb 3
\&    $x >= $y
\&    $x ne $y
\&    $x !~ /regex/
.Ve
.Sp
\&... or parentheses:
.Sp
.Vb 4
\&    !($x < $y)
\&    !($x eq $y)
\&    !($x =~ /regex/)
\&    !($obj isa Some::Class)
.Ve
.Sp
\&... or the low\-precedence \f(CW\*(C`not\*(C'\fR operator:
.Sp
.Vb 4
\&    not $x < $y
\&    not $x eq $y
\&    not $x =~ /regex/
\&    not $obj isa Some::Class
.Ve
.Sp
(If you did mean to compare the boolean result of negating the first operand,
parenthesize as \f(CW\*(C`(!$x) < $y\*(C'\fR, \f(CW\*(C`(!$x) eq $y\*(C'\fR, etc.)
.Sp
(This warning subsumes the \f(CW\*(C`Possible precedence problem on isa operator\*(C'\fR
warning from the previous perl release.)
.SH "Configuration and Compilation"
.IX Header "Configuration and Compilation"
.IP \(bu 4
Fix compilation on platforms (e.g. "Gentoo Prefix") with only a C locale [GH #22569 <https://github.com/Perl/perl5/issues/22569>]
Bug first reported downstream bugs.gentoo.org/939014 <https://bugs.gentoo.org/939014>
.SH "Internal Changes"
.IX Header "Internal Changes"
.IP \(bu 4
The \f(CWop_dump()\fR function has been expanded to include additional information
about the recent \f(CW\*(C`OP_METHSTART\*(C'\fR and \f(CW\*(C`OP_INITFIELD\*(C'\fR ops, as well as for
\&\f(CW\*(C`OP_ARGCHECK\*(C'\fR and \f(CW\*(C`OP_ARGELEM\*(C'\fR which had not been done previously.
.IP \(bu 4
\&\f(CWop_dump()\fR now also has the facility to print extra debugging information
about custom operators, if those operators register a helper function via the
new \f(CW\*(C`xop_dump\*(C'\fR element of the \f(CW\*(C`XOP\*(C'\fR structure. For more information, see the
relevant additions to perlguts.
.SH "Selected Bug Fixes"
.IX Header "Selected Bug Fixes"
.IP \(bu 4
\&\f(CW\*(C`pack("p", ...)\*(C'\fR and \f(CW\*(C`pack("P", ...)\*(C'\fR now \fBSvPV_force()\fR the supplied
SV unless it is read only.  This will remove CoW from the SV and
prevents code that writes through the generated pointer from modifying
the value of other SVs that happen the share the same CoWed string
buffer.
.Sp
Note: this does not make \f(CW\*(C`pack("p",... )\*(C'\fR safe, if the SV is magical
then any writes to the buffer will likely be discarded on the next
read.  [GH #22380 <https://github.com/Perl/perl5/issues/22380>]
.IP \(bu 4
Enforce \f(CW\*(C`no feature "bareword_filehandles"\*(C'\fR for bareword file handles
that have strictness removed because they are used in \fBopen()\fR with a
"dup" mode, such as in \f(CW\*(C`open my $fh, ">&", THISHANDLE\*(C'\fR. [GH #22568 <https://github.com/Perl/perl5/issues/22568>]
.IP \(bu 4
Using \f(CW\*(C`goto\*(C'\fR to tail call, or using the \fBcall_sv()\fR and related APIs to
call, any of \fBtrim()\fR, \fBrefaddr()\fR, \fBreftype()\fR, \fBceil()\fR, \fBfloor()\fR or
\&\fBstringify()\fR in the \f(CW\*(C`builtin::\*(C'\fR package would crash or assert due to a
\&\f(CW\*(C`TARG\*(C'\fR handling bug. [GH #22542 <https://github.com/Perl/perl5/issues/22542>]
.IP \(bu 4
Fix \fBsv_gets()\fR to accept a \f(CW\*(C`SSize_t\*(C'\fR append offset instead of \f(CW\*(C`I32\*(C'\fR.
This prevents integer overflows when appending to a large \f(CW\*(C`SV\*(C'\fR for
\&\f(CW\*(C`readpipe\*(C'\fR aka \f(CW\*(C`qx//\*(C'\fR and \f(CW\*(C`readline\*(C'\fR.
<https://www.perlmonks.org/?node_id=11161665>
.IP \(bu 4
Fixed an issue where \f(CW\*(C`utf8n_to_uvchr\*(C'\fR failed to correctly identify
certain invalid UTF\-8 sequences as invalid. Specifically, sequences
that start with continuation bytes or unassigned bytes could cause
unexpected behavior or a panic. This fix ensures that such invalid
sequences are now properly detected and handled. This correction
also resolves related issues in modules that handle UTF\-8 processing,
such as \f(CW\*(C`Encode.pm\*(C'\fR.
.SH Acknowledgements
.IX Header "Acknowledgements"
Perl 5.41.4 represents approximately 3 weeks of development since Perl
5.41.3 and contains approximately 5,800 lines of changes across 400 files
from 20 authors.
.PP
Excluding auto\-generated files, documentation and release tools, there were
approximately 3,700 lines of changes to 290 .pm, .t, .c and .h files.
.PP
Perl continues to flourish into its fourth decade thanks to a vibrant
community of users and developers. The following people are known to have
contributed the improvements that became Perl 5.41.4:
.PP
Andrei Horodniceanu, Antanas Vaitkus, Aristotle Pagaltzis, Craig A. Berry,
David Cantrell, David Mitchell, E. Choroba, Ed J, Eric Herman, Graham Knop,
James E Keenan, Karl Williamson, Leon Timmermans, Lukas Mai, Masahiro Honma,
Paul Evans, Philippe Bruhat (BooK), Sisyphus, Thibault Duponchelle, Tony
Cook.
.PP
The list above is almost certainly incomplete as it is automatically
generated from version control history. In particular, it does not include
the names of the (very much appreciated) contributors who reported issues to
the Perl bug tracker.
.PP
Many of the changes included in this version originated in the CPAN modules
included in Perl\*(Aqs core. We\*(Aqre grateful to the entire CPAN community for
helping Perl to flourish.
.PP
For a more complete list of all of Perl\*(Aqs historical contributors, please
see the \fIAUTHORS\fR file in the Perl source distribution.
.SH "Reporting Bugs"
.IX Header "Reporting Bugs"
If you find what you think is a bug, you might check the perl bug database
at <https://github.com/Perl/perl5/issues>. There may also be information at
<https://www.perl.org/>, the Perl Home Page.
.PP
If you believe you have an unreported bug, please open an issue at
<https://github.com/Perl/perl5/issues>. Be sure to trim your bug down to a
tiny but sufficient test case.
.PP
If the bug you are reporting has security implications which make it
inappropriate to send to a public issue tracker, then see
"SECURITY VULNERABILITY CONTACT INFORMATION" in perlsec
for details of how to report the issue.
.SH "Give Thanks"
.IX Header "Give Thanks"
If you wish to thank the Perl 5 Porters for the work we had done in Perl 5,
you can do so by running the \f(CW\*(C`perlthanks\*(C'\fR program:
.PP
.Vb 1
\&    perlthanks
.Ve
.PP
This will send an email to the Perl 5 Porters list with your show of thanks.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
The \fIChanges\fR file for an explanation of how to view exhaustive details on
what changed.
.PP
The \fIINSTALL\fR file for how to build Perl.
.PP
The \fIREADME\fR file for general stuff.
.PP
The \fIArtistic\fR and \fICopying\fR files for copyright information.
