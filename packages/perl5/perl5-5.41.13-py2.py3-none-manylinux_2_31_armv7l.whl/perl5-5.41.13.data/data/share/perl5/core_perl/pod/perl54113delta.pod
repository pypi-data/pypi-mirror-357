=encoding utf8

=head1 NAME

perldelta - what is new for perl v5.41.13

=head1 DESCRIPTION

This document describes differences between the 5.41.12 release and the 5.41.13
release.

If you are upgrading from an earlier release such as 5.41.11, first read
L<perl54112delta>, which describes differences between 5.41.11 and 5.41.12.

=head1 Core Enhancements

=head2 Assigning logical xor C<^^=> operator

Perl 5.40.0 introduced the logical medium-precedence exclusive-or operator
C<^^>.  It was not noticed at the time that the assigning variant C<^^=> was
also missing.  This is now added.

=head1 Modules and Pragmata

=head2 Updated Modules and Pragmata

=over 4

=item *

L<B::Deparse> has been upgraded from version 1.83 to 1.85.

=item *

L<builtin> has been upgraded from version 0.018 to 0.019.

=item *

L<experimental> has been upgraded from version 0.034 to 0.035.

=item *

L<ExtUtils::CBuilder> has been upgraded from version 0.280240 to 0.280241.

=item *

L<ExtUtils::MakeMaker> has been upgraded from version 7.74 to 7.76.

=item *

L<feature> has been upgraded from version 1.95 to 1.96.

=item *

L<Module::CoreList> has been upgraded from version 5.20250420 to 5.20250528.

=item *

L<re> has been upgraded from version 0.47 to 0.48.

=item *

L<SelfLoader> has been upgraded from version 1.27 to 1.28.

=item *

L<strict> has been upgraded from version 1.13 to 1.14.

=item *

L<Thread> has been upgraded from version 3.05 to 3.06.

=item *

L<Tie::File> has been upgraded from version 1.09 to 1.10.

=item *

L<Unicode::UCD> has been upgraded from version 0.80 to 0.81.

=back

=head1 Platform Support

=head2 Platform-Specific Notes

=over 4

=item Cygwin

Supply an explicit base address for C<cygperl*.dll> that cannot
conflict with those generated by C<--enable-auto-image-base>.  [L<GH #22695|https://github.com/Perl/perl5/issues/22695>][L<GH #22104|https://github.com/Perl/perl5/issues/22104>]

=back

=head1 Selected Bug Fixes

=over 4

=item *

Exceptions thrown and caught entirely within a C<defer {}> or C<finally {}>
block no longer stop the outer run-loop.

Code such as the following would stop running the contents of the C<defer>
block once the inner exception in the inner C<try>/C<catch> block was caught.
This has now been fixed, and runs as expected. ([L<GH #23064|https://github.com/Perl/perl5/issues/23064>]).

    defer {
        try { die "It breaks\n"; }
        catch ($e) { warn $e }

        say "This line would never run";
    }

=item *

L<perlfunc/readline> now clears the error flag if an error occurs when
reading and that error is C<EAGAIN> or C<EWOULDBLOCK>.  This allows
old code that depended on C<readline> to clear all errors to ignore
these relatively harmless errors.  [L<GH #22883|https://github.com/Perl/perl5/issues/22883>]

=item *

L<C<open>|perlfunc/open> automatically creates an anonymous temporary file
when passed C<undef> as a filename:

    open(my $fh, "+>", undef) or die ...

This is supposed to work only when the undefined value is the one returned by
the C<undef> function.

In perls before 5.41.3, this caused a problem due to the fact that the same
undefined value can be generated by lookups of non-existent hash keys or array
elements, which can lead to bugs in user-level code (reported as [L<GH #22385|https://github.com/Perl/perl5/issues/22385>]).

In 5.41.3, additional checks based on the syntax tree of the call site were
added, which fixed this issue for some number of common cases, though not all
of them, at the cost of breaking the ability of APIs that wrap C<open> to
expose its anonymous file mode. A notable example of such an API is autodie.

This release reverts to the old problem in preference to the new one for the
time being.

=back

=head1 Acknowledgements

Perl 5.41.13 represents approximately 5 weeks of development since Perl
5.41.12 and contains approximately 5,200 lines of changes across 180 files
from 20 authors.

Excluding auto-generated files, documentation and release tools, there were
approximately 1,200 lines of changes to 92 .pm, .t, .c and .h files.

Perl continues to flourish into its fourth decade thanks to a vibrant
community of users and developers. The following people are known to have
contributed the improvements that became Perl 5.41.13:

Aristotle Pagaltzis, Chris 'BinGOs' Williams, Dagfinn Ilmari Manns√•ker, Dan
Book, David Mitchell, Graham Knop, H.Merijn Brand, James E Keenan, Karen
Etheridge, Karl Williamson, Leon Timmermans, Lukas Mai, Paul Evans, Paul
Johnson, Philippe Bruhat (BooK), Richard Leach, Sisyphus, Thibault
Duponchelle, Todd Rinaldo, Tony Cook.

The list above is almost certainly incomplete as it is automatically
generated from version control history. In particular, it does not include
the names of the (very much appreciated) contributors who reported issues to
the Perl bug tracker.

Many of the changes included in this version originated in the CPAN modules
included in Perl's core. We're grateful to the entire CPAN community for
helping Perl to flourish.

For a more complete list of all of Perl's historical contributors, please
see the F<AUTHORS> file in the Perl source distribution.

=head1 Reporting Bugs

If you find what you think is a bug, you might check the perl bug database
at L<https://github.com/Perl/perl5/issues>. There may also be information at
L<https://www.perl.org/>, the Perl Home Page.

If you believe you have an unreported bug, please open an issue at
L<https://github.com/Perl/perl5/issues>. Be sure to trim your bug down to a
tiny but sufficient test case.

If the bug you are reporting has security implications which make it
inappropriate to send to a public issue tracker, then see
L<perlsec/SECURITY VULNERABILITY CONTACT INFORMATION>
for details of how to report the issue.

=head1 Give Thanks

If you wish to thank the Perl 5 Porters for the work we had done in Perl 5,
you can do so by running the C<perlthanks> program:

    perlthanks

This will send an email to the Perl 5 Porters list with your show of thanks.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details on
what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut
