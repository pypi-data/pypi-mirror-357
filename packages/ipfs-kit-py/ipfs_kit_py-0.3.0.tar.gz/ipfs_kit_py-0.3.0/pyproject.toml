[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ipfs_kit_py"
version = "0.3.0"
authors = [
  { name="Benjamin Barber", email="starworks5@gmail.com" },
]
description = "Python toolkit for IPFS with high-level API, cluster management, tiered storage, and AI/ML integration"
readme = "README.md"
requires-python = ">=3.8"
license = "AGPL-3.0-or-later"
keywords = ["ipfs", "distributed", "storage", "content-addressed", "cluster", "arrow", "fsspec", "ai", "ml"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries",
    "Topic :: System :: Distributed Computing",
    "Topic :: Database",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "requests>=2.28.0",
    "psutil>=5.9.0",
    "pyyaml>=6.0",
    "base58>=2.1.1",
    "multiaddr>=0.0.9",  # For libp2p multiaddress support
    "importlib-metadata>=4.12.0; python_version < '3.10'",
    "python-magic>=0.4.27", # For file type detection
    "anyio>=3.7.0", # For async operations with backend flexibility
    "trio>=0.22.0", # Optional backend for anyio
    "cryptography>=38.0.0", # Required for libp2p
]

[project.optional-dependencies]
transformers = [
    "transformers>=4.20.0",
    "huggingface-hub>=0.10.0"
]
fsspec = [
    "fsspec>=2023.3.0",
    "requests-unixsocket>=0.3.0",
]
arrow = [
    "pyarrow>=11.0.0",  # Updated minimum version to be more compatible
    "pandas>=1.3.0",
]
libp2p = [
    "libp2p>=0.1.5",  # Core libp2p functionality
    "multiaddr>=0.0.9",  # For peer addressing
    "multiformats>=0.2.0",  # For content addressing
    "base58>=2.1.1",  # Used by CIDs and peer IDs
    "cryptography>=38.0.0",  # For key generation and encryption
    "google-protobuf>=4.21.0",  # For protocol buffer support
    "eth-hash>=0.3.3",  # Optional for ETH integration
    "eth-keys>=0.4.0",  # Optional for ETH integration
]
ai_ml = [
    "torch>=2.0.0",
    "numpy>=1.20.0",
    "scikit-learn>=1.0.0",
    "mmh3>=0.7.1", # Added for probabilistic data structures
]
huggingface = [
    "huggingface_hub>=0.19.0",
]
ipld = [
    "py-ipld-car>=0.1.0",
    "py-ipld-dag-pb>=0.1.0",
    "py-ipld-unixfs>=0.1.0",
]
api = [
    "fastapi>=0.100.0",
    "uvicorn>=0.22.0",
    "python-multipart>=0.0.6",
]
webrtc = [
    "aiortc>=1.5.0",
    "av>=10.0.0",  # Required by aiortc for media handling
    "opencv-python>=4.7.0.72",  # For video processing
    "websockets>=10.4",  # For WebSocket signaling
]
graphql = [
    "graphene>=3.4.0",
]
s3 = [
    "boto3>=1.26.0",
]
performance = [
    "matplotlib>=3.5.0",
    "numpy>=1.20.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.1.0",
    "black>=23.3.0",
    "isort>=5.12.0",
    "mypy>=1.3.0",
    "pylint>=2.17.0",
    "build>=0.10.0",
    "twine>=4.0.2",
    "pytest-asyncio", # Added for async test support
    # "pytest-anyio>=1.0.0", # Removed - anyio plugin is included in the core anyio package
]
full = [
    "fsspec>=2023.3.0",
    "requests-unixsocket>=0.3.0",
    "pyarrow>=11.0.0",  # Updated minimum version to be more compatible
    "pandas>=1.3.0",
    "multiformats>=0.2.0",
    "multiaddr>=0.0.9",  # Added for libp2p multiaddress support
    "aiohttp>=3.8.4",
    "pyyaml>=6.0",
    "numpy>=1.20.0",
    "scikit-learn>=1.0.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.22.0",
    "python-multipart>=0.0.6",
    "graphene>=3.4.0",
    "faiss-cpu>=1.7.4",
    "networkx>=3.0",
    "matplotlib>=3.5.0",
    "boto3>=1.26.0",
    "huggingface_hub>=0.19.0",
    "aiortc>=1.5.0",
    "av>=10.0.0",
    "opencv-python>=4.7.0.72",
    "websockets>=10.4",
    "py-ipld-car>=0.1.0",
    "py-ipld-dag-pb>=0.1.0",
    "py-ipld-unixfs>=0.1.0",
]

[project.scripts]
ipfs-kit = "ipfs_kit_py.cli:main"

[project.urls]
Homepage = "https://github.com/endomorphosis/ipfs_kit_py/"
Documentation = "https://github.com/endomorphosis/ipfs_kit_py/blob/main/README.md"
Source = "https://github.com/endomorphosis/ipfs_kit_py/"
Issues = "https://github.com/endomorphosis/ipfs_kit_py/issues"
Changelog = "https://github.com/endomorphosis/ipfs_kit_py/blob/main/CHANGELOG.md"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ["ipfs_kit_py*", "external*"]

[tool.setuptools.package-data]
"ipfs_kit_py" = ["**/*"]
"external" = ["**/*"]

[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310", "py311"]

[tool.isort]
profile = "black"
line_length = 100

[tool.ruff]
line-length = 100
target-version = "py38"
exclude = [".git", "__pycache__", "build", "dist"]
ignore = ["E203", "E501"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401", "F403"]  # Allow unused imports in __init__.py files

[tool.pytest.ini_options]
testpaths = ["test"]
python_files = "test_*.py"
python_functions = "test_*"
