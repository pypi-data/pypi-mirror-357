Metadata-Version: 2.3
Name: pyetp
Version: 0.0.38
Summary: Interface with OSDU RDDMS using ETP protocol
Author: Adam Cheng
Author-email: 52572642+adamchengtkc@users.noreply.github.com
Requires-Python: >=3.10,<3.13
Classifier: Development Status :: 3 - Alpha
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: async-lru (>=2.0.4,<3.0.0)
Requires-Dist: async-timeout (>=5.0,<6.0) ; python_version < "3.11"
Requires-Dist: etpproto (>=1.0.7,<2.0.0)
Requires-Dist: lxml (>=4.9.4,<6.0)
Requires-Dist: numpy (>=1.26.3,<2.0.0)
Requires-Dist: pyarrow (>=15.0.0,<16.0.0)
Requires-Dist: pydantic (>=1.10,<2.0)
Requires-Dist: redis (>=5.0.1,<6.0.0)
Requires-Dist: resqpy (>=5.1.10,<6.0.0)
Requires-Dist: websockets (>=12.0,<13.0)
Requires-Dist: xsdata (>=24.3.1,<25.0.0)
Requires-Dist: xtgeo (>=3.8.0,<4.0.0)
Project-URL: Homepage, https://github.com/equinor/pyetp
Description-Content-Type: text/markdown

![Build Status](https://github.com/equinor/pyetp/actions/workflows/ci.yml/badge.svg?branch=main)
![Build Status](https://github.com/equinor/pyetp/actions/workflows/snyk.yml/badge.svg?branch=main)
![codecov](https://codecov.io/gh/equinor/pyetp/graph/badge.svg?token=S2XDDKKI8U)
![Python](https://img.shields.io/pypi/pyversions/pyetp)
[![PyPI version](https://badge.fury.io/py/pyetp.svg)](https://badge.fury.io/py/pyetp)
![License](https://img.shields.io/github/license/equinor/pyetp)
# Install
 `pip install pyetp`

# RESQML versions
The library is build and tested against RESQML v2.2. Spec can be downloaded [here](https://publications.opengroup.org/standards/energistics-standards/v231)

# Generated Python objects from RESQML spec
Under `resqml_objects` you will find Pythons objects generated from RESQML xml spec. It is used to ensure consistence data type is used in RESQML.

# Documentation
See `/examples` for 2D grid usage

`tests/test_mesh.py` for Unstructured/structured mesh

# Tests
### Starting etp-test server
`docker compose -f tests/compose.yml up --detach`
### Running pytest from root folder
`poetry run python -m pytest -rs -v`

# This library is under active development and subject to breaking changes

