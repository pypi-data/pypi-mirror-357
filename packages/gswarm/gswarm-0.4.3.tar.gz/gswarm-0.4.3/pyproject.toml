[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "gswarm"
version = "0.4.3"
description = "Distributed GPU cluster management system with profiling and model orchestration"
authors = [
    {name = "Chivier Humber", email = "chivier.humber@outlook.com"},
    {name = "cydia2001", email = "cydia2001@duck.com"},
]
readme="README.md"
requires-python = ">=3.9"
dependencies = [
    "aiohttp>=3.9.0,<4.0.0",
    "typer>=0.9.0,<1.0.0",
    "nvitop>=1.3.0",
    "loguru>=0.7.0",
    "aiofiles>=23.1.0",
    "requests>=2.31.0,<3.0.0",
    "rich>=13.0.0,<15.0.0",
    "matplotlib>=3.7.0,<4.0.0",
    "numpy>=1.24.0,<2.0.0",
    "grpcio>=1.60.0,<2.0.0",
    "grpcio-tools>=1.60.0,<2.0.0",
    "protobuf>=5.0.0,<6.0.0",
    "fastapi>=0.100.0,<1.0.0",
    "uvicorn[standard]>=0.23.0,<1.0.0",
    "pydantic>=2.0.0,<3.0.0",
    "pyyaml>=6.0.0",
    "python-multipart>=0.0.18",
    "aioredis>=2.0.0,<3.0.0",
    "psutil>=5.9.0",
    "httpx>=0.24.0,<1.0.0",
    "seaborn>=0.13.2",
    "rich>=13.0.0,<15.0.0",
    "torch>=2.7.0",
    "transformers>=4.52.4",
]

[project.scripts]
gswarm = "gswarm.cli:app"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0,<8.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "black>=23.0.0,<25.0.0",
    "ruff>=0.1.0,<1.0.0",
    "mypy>=1.0.0,<2.0.0",
]
vllm = [
    "vllm>=0.9.0,<0.10.0",
    "transformers>=4.44.0",
    "accelerate>=0.24.0",
    "torch>=2.1.0",
    "torchvision>=0.16.0",
]

[tool.hatch.build.targets.wheel]
sources = ["src"]

[tool.ruff]
line-length = 120
extend-exclude = ["src/gswarm/profiler/profiler_pb2.py", "src/gswarm/profiler/profiler_pb2_grpc.py"]

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = ["F401", "I001", "E501", "F541", "E722"]

[tool.black]
line-length = 120
target-version = ["py39", "py310", "py311", "py312"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-ra -q --strict-markers"

[tool.coverage.run]
source = ["src/gswarm"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
] 

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
]
