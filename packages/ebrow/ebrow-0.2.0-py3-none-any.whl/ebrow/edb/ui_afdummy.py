# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'afDummy.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_afDummy(object):
    def setupUi(self, afDummy):
        afDummy.setObjectName("afDummy")
        afDummy.setWindowModality(QtCore.Qt.WindowModal)
        afDummy.resize(400, 300)
        afDummy.setMinimumSize(QtCore.QSize(400, 300))
        afDummy.setStyleSheet("/******************************************************************************\n"
"\n"
"    Echoes Data Browser (Ebrow) is a data navigation and report generation\n"
"    tool for Echoes.\n"
"    Echoes is a RF spectrograph for SDR devices designed for meteor scatter.\n"
"    \n"
"    Both copyright (C) 2018-2025\n"
"    Giuseppe Massimo Bertani gm_bertani(a)yahoo.it\n"
"\n"
"    This program is free software: you can redistribute it and/or modify\n"
"    it under the terms of the GNU General Public License as published by\n"
"    the Free Software Foundation, version 3 of the License.\n"
"\n"
"    This program is distributed in the hope that it will be useful,\n"
"    but WITHOUT ANY WARRANTY; without even the implied warranty of\n"
"    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n"
"    GNU General Public License for more details.\n"
"\n"
"    You should have received a copy of the GNU General Public License\n"
"    along with this program.  If not, http://www.gnu.org/copyleft/gpl.html\n"
"\n"
"\n"
"********************************************************************************/\n"
"\n"
"/* default colors and font for all the widgets */\n"
"QWindow {\n"
"\n"
"    border-radius: 6px; \n"
"    border: 1px solid rgb(127, 127, 127);\n"
"} \n"
"\n"
"QMessageBox {\n"
"\n"
"    border-radius: 6px; \n"
"    border: 0px solid rgb(127, 127, 127);\n"
"} \n"
"\n"
"QWidget, QWidget * {\n"
"    background-color: rgb(40, 40, 40);\n"
"    font: 87 8pt \"Gauge\";\n"
"    color:rgb(255, 255, 127);\n"
"    border-radius: 6px; \n"
"    border: 0px solid rgb(40, 40, 40); /* invisible border */\n"
"} \n"
"\n"
"QWidget::disabled {\n"
"    background-color: rgb(40, 40, 40);\n"
"    font: 8pt \"Gauge\";\n"
"    color:rgb(127, 127, 127);\n"
"    border-radius: 6px;\n"
"    border: 1px solid rgb(127, 127, 127); /* visible border */\n"
"}\n"
"\n"
"\n"
"QTabWidget, QGroupBox {\n"
"    background-color: rgb(40, 40, 40);\n"
"    color:rgb(255, 255, 127);\n"
"    border-radius: 6px; \n"
"    border: 1px solid rgb(148, 148, 0);  /* yellow border */\n"
"    margin: 3px;\n"
"}\n"
"\n"
"QListWidget, QListView, QTableView, QTableWidget, QScrollArea {\n"
"    border: 1px solid rgb(148, 148, 0);  /* yellow border */\n"
"     show-decoration-selected: 1;          /* make the selection span the entire width of the view */\n"
"\n"
"}\n"
"\n"
"QCheckBox:disabled {\n"
"    border: none;\n"
"}\n"
"\n"
"QCheckBox:enabled {\n"
"    border: yellow;\n"
"}\n"
"\n"
"QLabel {\n"
"    margin: 0 0;\n"
"}\n"
"\n"
"QLabel:disabled {\n"
"    border: none;\n"
"}\n"
"\n"
"\n"
"QListWidget::item:selected:active {\n"
"    color: black;\n"
"    font-weight: bold;\n"
"    background-color: yellow;\n"
"}\n"
"\n"
"QListWidget::item:selected:!active  {\n"
"    color:rgb(255, 255, 127);\n"
"    background-color: green; /*rgb(40, 40, 40);*/\n"
"    font-weight: normal;\n"
"}\n"
"\n"
"QListWidget::item:normal  {\n"
"    color:rgb(255, 255, 127);\n"
"    background-color: rgb(40, 40, 40);\n"
"    font-weight: normal;\n"
"}\n"
"\n"
"\n"
"QTableView, QTableWidget {\n"
"    alternate-background-color: rgb(60, 60, 60);\n"
"    color:rgb(255, 255, 127);\n"
"    gridline-color:  rgb(156, 156, 156);\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QGroupBox, QLabel {\n"
"    margin-top: 10px;\n"
"    \n"
"}\n"
"\n"
"QTabBar::tab {\n"
"    background: rgb(0, 96, 100);\n"
"    min-width: 120px;\n"
"}\n"
"\n"
"QTabBar::tab:disabled {\n"
"    color: grey;\n"
"    background: rgb(34, 34, 51);\n"
"}\n"
"\n"
"QTabBar::tab:enabled {\n"
"    background: rgb(34, 34, 51);\n"
"}\n"
"\n"
"QTabBar::tab:selected {\n"
"    background: rgb(0, 96, 250);\n"
"}\n"
"\n"
"QHeaderView::section {\n"
"     background-color:  rgb(230, 230, 230);\n"
"     color: rgb(20, 20, 20);\n"
"} \n"
"\n"
"QGroupBox::title {\n"
"    subcontrol-origin: margin;\n"
"    subcontrol-position: top center; /* position at the top center */\n"
"    padding: 0 3px;\n"
"}\n"
"\n"
"/* personalization for input widgets */\n"
"QLineEdit, QPlainTextEdit, QDateTimeEdit, QAbstractSpinBox, QComboBox, QLCDNumber {\n"
"    background-color: rgb(10, 10, 10); \n"
"    color: rgb(0, 255, 0);\n"
"    selection-background-color: rgb(85, 85, 255);\n"
"    selection-color: rgb(0, 255, 255);\n"
"    border-radius: 6px; \n"
"\n"
"}\n"
"\n"
"/* tooltips cannot be tuned by QtDesigner, it must be done explicitly by application */\n"
"QToolTip {\n"
"    background: blue;\n"
"    color: yellow;\n"
"    border: 1px;\n"
"    font: 8pt \"Arial\";\n"
"}\n"
"\n"
"QPushButton {\n"
"    background-color:  rgb(0, 96, 100);\n"
"    min-height: 20px;\n"
"    min-width: 60px;\n"
"    text-align: center;\n"
"}\n"
"\n"
"QToolButton {\n"
"    background-color:  rgb(0, 96, 100);\n"
"    min-height: 24px;\n"
"    min-width: 32px\n"
"}\n"
"\n"
"QPushButton::pressed {\n"
"    background-color:  red;\n"
"    min-height: 24px;\n"
"    min-width: 32px\n"
"}\n"
"\n"
"QToolButton::pressed {\n"
"    background-color:  red;\n"
"    min-height: 24px;\n"
"    min-width: 32px\n"
"}\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"/*\n"
"QSlider::groove:vertical {\n"
"    background: black;\n"
"    position: absolute;\n"
"    left: 2px; right: 2px;\n"
"}\n"
"\n"
"\n"
"\n"
"QSlider::handle:vertical {\n"
"    height: 20px;\n"
"    width: 30px;\n"
"    background: qlineargradient(x1:0, y1:0, x2:3, y2:1, stop:0 grey, stop:1 white);\n"
"    margin: 0 -20px; \n"
"    border: 2px  qlineargradient(x1:0, y1:0, x2:3, y2:1, stop:0 white, stop:1 grey);\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QSlider::groove:horizontal {\n"
"    background: black;\n"
"    position: absolute;\n"
"    top: 1px; bottom: 1px;\n"
"}\n"
"*/\n"
"QSlider::handle:horizontal {\n"
"    height: 30px;\n"
"    width: 20px;\n"
"    background: qlineargradient(x1:0, y1:0, x2:3, y2:1, stop:0 grey, stop:1 white);\n"
"    margin: 0 -20px; /* expand outside the groove */\n"
"    border: 2px  qlineargradient(x1:0, y1:0, x2:3, y2:1,  stop:0 white, stop:1 grey);\n"
"    border-radius: 4px;\n"
"}\n"
"")
        afDummy.setSizeGripEnabled(True)
        afDummy.setModal(True)
        self.verticalLayout = QtWidgets.QVBoxLayout(afDummy)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(afDummy)
        font = QtGui.QFont()
        font.setFamily("Gauge Heavy")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(10)
        self.label.setFont(font)
        self.label.setStyleSheet("font: 87 12pt \"Gauge Heavy\";")
        self.label.setScaledContents(False)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem)
        self.chkEnabled = QtWidgets.QCheckBox(afDummy)
        self.chkEnabled.setObjectName("chkEnabled")
        self.horizontalLayout_2.addWidget(self.chkEnabled)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem1)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.pbOk = QtWidgets.QPushButton(afDummy)
        self.pbOk.setMinimumSize(QtCore.QSize(60, 20))
        self.pbOk.setMaximumSize(QtCore.QSize(200, 32))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("resources/icons/mail-filters-apply.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pbOk.setIcon(icon)
        self.pbOk.setObjectName("pbOk")
        self.horizontalLayout.addWidget(self.pbOk)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.verticalLayout.setStretch(0, 1)
        self.verticalLayout.setStretch(1, 5)
        self.verticalLayout.setStretch(2, 5)

        self.retranslateUi(afDummy)
        QtCore.QMetaObject.connectSlotsByName(afDummy)

    def retranslateUi(self, afDummy):
        _translate = QtCore.QCoreApplication.translate
        afDummy.setWindowTitle(_translate("afDummy", "Dialog"))
        self.label.setText(_translate("afDummy", "This is a prototype filter doing nothing"))
        self.chkEnabled.setToolTip(_translate("afDummy", "Enbling this filter will be uneffective"))
        self.chkEnabled.setText(_translate("afDummy", "Enabled"))
        self.pbOk.setToolTip(_translate("afDummy", "Press here to close the dialog"))
        self.pbOk.setText(_translate("afDummy", "&Ok"))
