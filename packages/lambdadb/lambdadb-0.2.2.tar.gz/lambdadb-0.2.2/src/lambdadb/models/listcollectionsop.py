"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .collectionresponse import CollectionResponse, CollectionResponseTypedDict
from lambdadb.types import BaseModel
from lambdadb.utils import FieldMetadata, PathParamMetadata
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ListcollectionsRequestTypedDict(TypedDict):
    project_name: str
    r"""Project name."""


class ListcollectionsRequest(BaseModel):
    project_name: Annotated[
        str,
        pydantic.Field(alias="projectName"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Project name."""


class ListcollectionsResponseTypedDict(TypedDict):
    r"""A list of collections matched with a projectName."""

    collections: NotRequired[List[CollectionResponseTypedDict]]


class ListcollectionsResponse(BaseModel):
    r"""A list of collections matched with a projectName."""

    collections: Optional[List[CollectionResponse]] = None
