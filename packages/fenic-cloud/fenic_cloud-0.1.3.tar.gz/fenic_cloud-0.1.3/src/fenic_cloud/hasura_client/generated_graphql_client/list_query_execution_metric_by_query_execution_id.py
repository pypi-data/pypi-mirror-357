# Generated by ariadne-codegen
# Source: ../../../graphql/operations/

from datetime import datetime
from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel


class ListQueryExecutionMetricByQueryExecutionId(BaseModel):
    typedef_query_execution_by_pk: Optional[
        "ListQueryExecutionMetricByQueryExecutionIdTypedefQueryExecutionByPk"
    ] = Field(alias="typedefQueryExecutionByPk")


class ListQueryExecutionMetricByQueryExecutionIdTypedefQueryExecutionByPk(BaseModel):
    query_execution_metrics: List[
        "ListQueryExecutionMetricByQueryExecutionIdTypedefQueryExecutionByPkQueryExecutionMetrics"
    ] = Field(alias="queryExecutionMetrics")


class ListQueryExecutionMetricByQueryExecutionIdTypedefQueryExecutionByPkQueryExecutionMetrics(
    BaseModel
):
    metric_name: str = Field(alias="metricName")
    metric_timestamp: datetime = Field(alias="metricTimestamp")
    metric_value: Any = Field(alias="metricValue")


ListQueryExecutionMetricByQueryExecutionId.model_rebuild()
ListQueryExecutionMetricByQueryExecutionIdTypedefQueryExecutionByPk.model_rebuild()
