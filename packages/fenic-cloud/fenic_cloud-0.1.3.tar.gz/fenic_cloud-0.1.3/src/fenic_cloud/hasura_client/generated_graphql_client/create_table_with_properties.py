# Generated by ariadne-codegen
# Source: ../../../graphql/operations/

from typing import Optional
from uuid import UUID

from pydantic import Field

from .base_model import BaseModel


class CreateTableWithProperties(BaseModel):
    insert_catalog_dataset_one: Optional[
        "CreateTableWithPropertiesInsertCatalogDatasetOne"
    ] = Field(alias="insertCatalogDatasetOne")
    insert_catalog_table_one: Optional[
        "CreateTableWithPropertiesInsertCatalogTableOne"
    ] = Field(alias="insertCatalogTableOne")
    insert_catalog_dataset_property: Optional[
        "CreateTableWithPropertiesInsertCatalogDatasetProperty"
    ] = Field(alias="insertCatalogDatasetProperty")


class CreateTableWithPropertiesInsertCatalogDatasetOne(BaseModel):
    dataset_id: UUID = Field(alias="datasetId")


class CreateTableWithPropertiesInsertCatalogTableOne(BaseModel):
    table_id: UUID = Field(alias="tableId")


class CreateTableWithPropertiesInsertCatalogDatasetProperty(BaseModel):
    affected_rows: int = Field(alias="affectedRows")


CreateTableWithProperties.model_rebuild()
