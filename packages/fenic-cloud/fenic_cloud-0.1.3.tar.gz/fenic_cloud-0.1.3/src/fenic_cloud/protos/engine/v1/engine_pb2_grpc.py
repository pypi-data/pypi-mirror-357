# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
from fenic_cloud.protos.engine.v1 import engine_pb2 as engine_dot_v1_dot_engine__pb2


class EngineServiceStub(object):
    """gRPC Service"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ConfigSession = channel.unary_unary(
            "/engine.v1.EngineService/ConfigSession",
            request_serializer=engine_dot_v1_dot_engine__pb2.ConfigSessionRequest.SerializeToString,
            response_deserializer=engine_dot_v1_dot_engine__pb2.ConfigSessionResponse.FromString,
            _registered_method=True,
        )
        self.StartExecution = channel.unary_unary(
            "/engine.v1.EngineService/StartExecution",
            request_serializer=engine_dot_v1_dot_engine__pb2.StartExecutionRequest.SerializeToString,
            response_deserializer=engine_dot_v1_dot_engine__pb2.StartExecutionResponse.FromString,
            _registered_method=True,
        )
        self.GetExecutionResult = channel.unary_unary(
            "/engine.v1.EngineService/GetExecutionResult",
            request_serializer=engine_dot_v1_dot_engine__pb2.GetExecutionResultRequest.SerializeToString,
            response_deserializer=engine_dot_v1_dot_engine__pb2.GetExecutionResultResponse.FromString,
            _registered_method=True,
        )
        self.CancelExecution = channel.unary_unary(
            "/engine.v1.EngineService/CancelExecution",
            request_serializer=engine_dot_v1_dot_engine__pb2.CancelExecutionRequest.SerializeToString,
            response_deserializer=engine_dot_v1_dot_engine__pb2.CancelExecutionResponse.FromString,
            _registered_method=True,
        )
        self.InferSchema = channel.unary_unary(
            "/engine.v1.EngineService/InferSchema",
            request_serializer=engine_dot_v1_dot_engine__pb2.InferSchemaRequest.SerializeToString,
            response_deserializer=engine_dot_v1_dot_engine__pb2.InferSchemaResponse.FromString,
            _registered_method=True,
        )


class EngineServiceServicer(object):
    """gRPC Service"""

    def ConfigSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def StartExecution(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetExecutionResult(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CancelExecution(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def InferSchema(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_EngineServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "ConfigSession": grpc.unary_unary_rpc_method_handler(
            servicer.ConfigSession,
            request_deserializer=engine_dot_v1_dot_engine__pb2.ConfigSessionRequest.FromString,
            response_serializer=engine_dot_v1_dot_engine__pb2.ConfigSessionResponse.SerializeToString,
        ),
        "StartExecution": grpc.unary_unary_rpc_method_handler(
            servicer.StartExecution,
            request_deserializer=engine_dot_v1_dot_engine__pb2.StartExecutionRequest.FromString,
            response_serializer=engine_dot_v1_dot_engine__pb2.StartExecutionResponse.SerializeToString,
        ),
        "GetExecutionResult": grpc.unary_unary_rpc_method_handler(
            servicer.GetExecutionResult,
            request_deserializer=engine_dot_v1_dot_engine__pb2.GetExecutionResultRequest.FromString,
            response_serializer=engine_dot_v1_dot_engine__pb2.GetExecutionResultResponse.SerializeToString,
        ),
        "CancelExecution": grpc.unary_unary_rpc_method_handler(
            servicer.CancelExecution,
            request_deserializer=engine_dot_v1_dot_engine__pb2.CancelExecutionRequest.FromString,
            response_serializer=engine_dot_v1_dot_engine__pb2.CancelExecutionResponse.SerializeToString,
        ),
        "InferSchema": grpc.unary_unary_rpc_method_handler(
            servicer.InferSchema,
            request_deserializer=engine_dot_v1_dot_engine__pb2.InferSchemaRequest.FromString,
            response_serializer=engine_dot_v1_dot_engine__pb2.InferSchemaResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "engine.v1.EngineService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers(
        "engine.v1.EngineService", rpc_method_handlers
    )


# This class is part of an EXPERIMENTAL API.
class EngineService(object):
    """gRPC Service"""

    @staticmethod
    def ConfigSession(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/engine.v1.EngineService/ConfigSession",
            engine_dot_v1_dot_engine__pb2.ConfigSessionRequest.SerializeToString,
            engine_dot_v1_dot_engine__pb2.ConfigSessionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def StartExecution(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/engine.v1.EngineService/StartExecution",
            engine_dot_v1_dot_engine__pb2.StartExecutionRequest.SerializeToString,
            engine_dot_v1_dot_engine__pb2.StartExecutionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetExecutionResult(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/engine.v1.EngineService/GetExecutionResult",
            engine_dot_v1_dot_engine__pb2.GetExecutionResultRequest.SerializeToString,
            engine_dot_v1_dot_engine__pb2.GetExecutionResultResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def CancelExecution(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/engine.v1.EngineService/CancelExecution",
            engine_dot_v1_dot_engine__pb2.CancelExecutionRequest.SerializeToString,
            engine_dot_v1_dot_engine__pb2.CancelExecutionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def InferSchema(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/engine.v1.EngineService/InferSchema",
            engine_dot_v1_dot_engine__pb2.InferSchemaRequest.SerializeToString,
            engine_dot_v1_dot_engine__pb2.InferSchemaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )
