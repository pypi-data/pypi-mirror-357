# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
from fenic_cloud.protos.omnitype.v1 import (
    entrypoint_pb2 as omnitype_dot_v1_dot_entrypoint__pb2,
)


class EntrypointServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterApp = channel.unary_unary(
            "/omnitype.v1.EntrypointService/RegisterApp",
            request_serializer=omnitype_dot_v1_dot_entrypoint__pb2.RegisterAppRequest.SerializeToString,
            response_deserializer=omnitype_dot_v1_dot_entrypoint__pb2.RegisterAppResponse.FromString,
            _registered_method=True,
        )
        self.GetOrCreateSession = channel.unary_unary(
            "/omnitype.v1.EntrypointService/GetOrCreateSession",
            request_serializer=omnitype_dot_v1_dot_entrypoint__pb2.GetOrCreateSessionRequest.SerializeToString,
            response_deserializer=omnitype_dot_v1_dot_entrypoint__pb2.GetOrCreateSessionResponse.FromString,
            _registered_method=True,
        )
        self.TerminateSession = channel.unary_unary(
            "/omnitype.v1.EntrypointService/TerminateSession",
            request_serializer=omnitype_dot_v1_dot_entrypoint__pb2.TerminateSessionRequest.SerializeToString,
            response_deserializer=omnitype_dot_v1_dot_entrypoint__pb2.TerminateSessionResponse.FromString,
            _registered_method=True,
        )


class EntrypointServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RegisterApp(self, request, context):
        """RegisterApp takes a name and optional canonical name for an application.
        If the application is already present in the DB, the existing UUID will be returned, otherwise
        the UUID of the newly added application will be returned.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetOrCreateSession(self, request, context):
        """GetOrCreateSession creates a new execution_session for the application in the specified environment.
        If the session already exists, the existing UUID will be returned.
        If the session does not exist, Entrypoint will create a new execution_session with engine_status REQUESTED and
        make a request to the Coordinator to start an Engine Instance.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def TerminateSession(self, request, context):
        """TerminateSession terminates a session for the application. It will mark the execution_session
        engine_state as TERMINATING and make a request to the Coordinator to terminate the Engine Instance.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_EntrypointServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "RegisterApp": grpc.unary_unary_rpc_method_handler(
            servicer.RegisterApp,
            request_deserializer=omnitype_dot_v1_dot_entrypoint__pb2.RegisterAppRequest.FromString,
            response_serializer=omnitype_dot_v1_dot_entrypoint__pb2.RegisterAppResponse.SerializeToString,
        ),
        "GetOrCreateSession": grpc.unary_unary_rpc_method_handler(
            servicer.GetOrCreateSession,
            request_deserializer=omnitype_dot_v1_dot_entrypoint__pb2.GetOrCreateSessionRequest.FromString,
            response_serializer=omnitype_dot_v1_dot_entrypoint__pb2.GetOrCreateSessionResponse.SerializeToString,
        ),
        "TerminateSession": grpc.unary_unary_rpc_method_handler(
            servicer.TerminateSession,
            request_deserializer=omnitype_dot_v1_dot_entrypoint__pb2.TerminateSessionRequest.FromString,
            response_serializer=omnitype_dot_v1_dot_entrypoint__pb2.TerminateSessionResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "omnitype.v1.EntrypointService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers(
        "omnitype.v1.EntrypointService", rpc_method_handlers
    )


# This class is part of an EXPERIMENTAL API.
class EntrypointService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RegisterApp(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/omnitype.v1.EntrypointService/RegisterApp",
            omnitype_dot_v1_dot_entrypoint__pb2.RegisterAppRequest.SerializeToString,
            omnitype_dot_v1_dot_entrypoint__pb2.RegisterAppResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetOrCreateSession(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/omnitype.v1.EntrypointService/GetOrCreateSession",
            omnitype_dot_v1_dot_entrypoint__pb2.GetOrCreateSessionRequest.SerializeToString,
            omnitype_dot_v1_dot_entrypoint__pb2.GetOrCreateSessionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def TerminateSession(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/omnitype.v1.EntrypointService/TerminateSession",
            omnitype_dot_v1_dot_entrypoint__pb2.TerminateSessionRequest.SerializeToString,
            omnitype_dot_v1_dot_entrypoint__pb2.TerminateSessionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )
