# Generated by ariadne-codegen
# Source: ../../../graphql/schema.graphql

from enum import Enum


class BucketOperation(str, Enum):
    DELETE = "DELETE"
    READ = "READ"
    WRITE = "WRITE"


class CatalogActiveTablesSelectColumn(str, Enum):
    canonicalName = "canonicalName"
    catalogId = "catalogId"
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    description = "description"
    externallyManaged = "externallyManaged"
    fileFormat = "fileFormat"
    location = "location"
    namespaceId = "namespaceId"
    namespaceName = "namespaceName"
    objectVersion = "objectVersion"
    parentOrganizationId = "parentOrganizationId"
    partitionFieldNames = "partitionFieldNames"
    schema = "schema"
    tableId = "tableId"
    tableName = "tableName"
    updatedAt = "updatedAt"


class CatalogActiveViewsSelectColumn(str, Enum):
    canonicalName = "canonicalName"
    catalogId = "catalogId"
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    description = "description"
    dialect = "dialect"
    namespaceId = "namespaceId"
    namespaceName = "namespaceName"
    objectVersion = "objectVersion"
    parentOrganizationId = "parentOrganizationId"
    schema = "schema"
    sql = "sql"
    updatedAt = "updatedAt"
    viewId = "viewId"
    viewName = "viewName"


class CatalogDatasetConstraint(str, Enum):
    dataset_pkey = "dataset_pkey"
    unique_name_per_namespace_id = "unique_name_per_namespace_id"


class CatalogDatasetPropertyConstraint(str, Enum):
    dataset_property_pkey = "dataset_property_pkey"
    unique_dataset_property_key = "unique_dataset_property_key"


class CatalogDatasetPropertySelectColumn(str, Enum):
    createdAt = "createdAt"
    datasetId = "datasetId"
    deletedAt = "deletedAt"
    key = "key"
    objectState = "objectState"
    objectVersion = "objectVersion"
    updatedAt = "updatedAt"
    value = "value"


class CatalogDatasetPropertyUpdateColumn(str, Enum):
    createdAt = "createdAt"
    datasetId = "datasetId"
    deletedAt = "deletedAt"
    key = "key"
    objectState = "objectState"
    objectVersion = "objectVersion"
    updatedAt = "updatedAt"
    value = "value"


class CatalogDatasetSelectColumn(str, Enum):
    canonicalName = "canonicalName"
    catalogId = "catalogId"
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    datasetId = "datasetId"
    datasetType = "datasetType"
    deletedAt = "deletedAt"
    description = "description"
    name = "name"
    namespaceId = "namespaceId"
    objectState = "objectState"
    objectVersion = "objectVersion"
    parentOrganizationId = "parentOrganizationId"
    schema = "schema"
    updatedAt = "updatedAt"


class CatalogDatasetTypeReferenceConstraint(str, Enum):
    dataset_type_reference_pkey = "dataset_type_reference_pkey"


class CatalogDatasetTypeReferenceEnum(str, Enum):
    TABLE = "TABLE"
    VIEW = "VIEW"


class CatalogDatasetTypeReferenceSelectColumn(str, Enum):
    comment = "comment"
    value = "value"


class CatalogDatasetTypeReferenceUpdateColumn(str, Enum):
    comment = "comment"
    value = "value"


class CatalogDatasetUpdateColumn(str, Enum):
    canonicalName = "canonicalName"
    catalogId = "catalogId"
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    datasetId = "datasetId"
    datasetType = "datasetType"
    deletedAt = "deletedAt"
    description = "description"
    name = "name"
    namespaceId = "namespaceId"
    objectState = "objectState"
    objectVersion = "objectVersion"
    parentOrganizationId = "parentOrganizationId"
    schema = "schema"
    updatedAt = "updatedAt"


class CatalogFileFormatReferenceConstraint(str, Enum):
    file_format_reference_pkey = "file_format_reference_pkey"


class CatalogFileFormatReferenceEnum(str, Enum):
    CSV = "CSV"
    PARQUET = "PARQUET"


class CatalogFileFormatReferenceSelectColumn(str, Enum):
    comment = "comment"
    value = "value"


class CatalogFileFormatReferenceUpdateColumn(str, Enum):
    comment = "comment"
    value = "value"


class CatalogNamespaceConstraint(str, Enum):
    namespace_pkey = "namespace_pkey"
    unique_namespace_per_catalog = "unique_namespace_per_catalog"


class CatalogNamespacePropertyConstraint(str, Enum):
    namespace_property_pkey = "namespace_property_pkey"
    unique_namespace_property_key = "unique_namespace_property_key"


class CatalogNamespacePropertySelectColumn(str, Enum):
    createdAt = "createdAt"
    deletedAt = "deletedAt"
    key = "key"
    namespaceId = "namespaceId"
    objectState = "objectState"
    objectVersion = "objectVersion"
    updatedAt = "updatedAt"
    value = "value"


class CatalogNamespacePropertyUpdateColumn(str, Enum):
    createdAt = "createdAt"
    deletedAt = "deletedAt"
    key = "key"
    namespaceId = "namespaceId"
    objectState = "objectState"
    objectVersion = "objectVersion"
    updatedAt = "updatedAt"
    value = "value"


class CatalogNamespaceSelectColumn(str, Enum):
    canonicalName = "canonicalName"
    catalogId = "catalogId"
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    deletedAt = "deletedAt"
    description = "description"
    name = "name"
    namespaceId = "namespaceId"
    objectState = "objectState"
    objectVersion = "objectVersion"
    parentOrganizationId = "parentOrganizationId"
    updatedAt = "updatedAt"


class CatalogNamespaceUpdateColumn(str, Enum):
    canonicalName = "canonicalName"
    catalogId = "catalogId"
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    deletedAt = "deletedAt"
    description = "description"
    name = "name"
    namespaceId = "namespaceId"
    objectState = "objectState"
    objectVersion = "objectVersion"
    parentOrganizationId = "parentOrganizationId"
    updatedAt = "updatedAt"


class CatalogTableConstraint(str, Enum):
    table_pkey = "table_pkey"


class CatalogTableSelectColumn(str, Enum):
    externallyManaged = "externallyManaged"
    fileFormat = "fileFormat"
    location = "location"
    partitionFieldNames = "partitionFieldNames"
    tableId = "tableId"


class CatalogTableUpdateColumn(str, Enum):
    externallyManaged = "externallyManaged"
    fileFormat = "fileFormat"
    location = "location"
    partitionFieldNames = "partitionFieldNames"
    tableId = "tableId"


class CatalogViewConstraint(str, Enum):
    view_pkey = "view_pkey"


class CatalogViewSelectColumn(str, Enum):
    dialect = "dialect"
    sql = "sql"
    viewId = "viewId"


class CatalogViewUpdateColumn(str, Enum):
    dialect = "dialect"
    sql = "sql"
    viewId = "viewId"


class CursorOrdering(str, Enum):
    ASC = "ASC"
    DESC = "DESC"


class FileFormat(str, Enum):
    CSV = "CSV"
    PARQUET = "PARQUET"


class OrderBy(str, Enum):
    ASC = "ASC"
    ASC_NULLS_FIRST = "ASC_NULLS_FIRST"
    ASC_NULLS_LAST = "ASC_NULLS_LAST"
    DESC = "DESC"
    DESC_NULLS_FIRST = "DESC_NULLS_FIRST"
    DESC_NULLS_LAST = "DESC_NULLS_LAST"


class RepresentationType(str, Enum):
    SQL = "SQL"


class TypedefAppConstraint(str, Enum):
    app_pkey = "app_pkey"
    unique_app_name_per_organization = "unique_app_name_per_organization"


class TypedefAppSelectColumn(str, Enum):
    appId = "appId"
    canonicalName = "canonicalName"
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    deletedAt = "deletedAt"
    name = "name"
    objectState = "objectState"
    objectVersion = "objectVersion"
    parentOrganizationId = "parentOrganizationId"
    updatedAt = "updatedAt"


class TypedefAppUpdateColumn(str, Enum):
    appId = "appId"
    canonicalName = "canonicalName"
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    deletedAt = "deletedAt"
    name = "name"
    objectState = "objectState"
    objectVersion = "objectVersion"
    parentOrganizationId = "parentOrganizationId"
    updatedAt = "updatedAt"


class TypedefCatalogConstraint(str, Enum):
    catalog_pkey = "catalog_pkey"
    unique_catalog_name_per_organization = "unique_catalog_name_per_organization"


class TypedefCatalogSelectColumn(str, Enum):
    canonicalName = "canonicalName"
    catalogId = "catalogId"
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    deletedAt = "deletedAt"
    description = "description"
    ephemeral = "ephemeral"
    metadata = "metadata"
    name = "name"
    objectState = "objectState"
    objectVersion = "objectVersion"
    parentOrganizationId = "parentOrganizationId"
    type = "type"
    updatedAt = "updatedAt"
    warehouseLocation = "warehouseLocation"


class TypedefCatalogSelectColumnTypedefCatalogAggregateBoolExpBool_andArgumentsColumns(
    str, Enum
):
    ephemeral = "ephemeral"


class TypedefCatalogSelectColumnTypedefCatalogAggregateBoolExpBool_orArgumentsColumns(
    str, Enum
):
    ephemeral = "ephemeral"


class TypedefCatalogTypeReferenceConstraint(str, Enum):
    catalog_type_reference_pkey = "catalog_type_reference_pkey"


class TypedefCatalogTypeReferenceEnum(str, Enum):
    EXTERNAL_HIVE_METASTORE = "EXTERNAL_HIVE_METASTORE"
    EXTERNAL_ICEBERG_REST = "EXTERNAL_ICEBERG_REST"
    INTERNAL_LAKEKEEPER = "INTERNAL_LAKEKEEPER"
    INTERNAL_TYPEDEF = "INTERNAL_TYPEDEF"


class TypedefCatalogTypeReferenceSelectColumn(str, Enum):
    comment = "comment"
    value = "value"


class TypedefCatalogTypeReferenceUpdateColumn(str, Enum):
    comment = "comment"
    value = "value"


class TypedefCatalogUpdateColumn(str, Enum):
    canonicalName = "canonicalName"
    catalogId = "catalogId"
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    deletedAt = "deletedAt"
    description = "description"
    ephemeral = "ephemeral"
    metadata = "metadata"
    name = "name"
    objectState = "objectState"
    objectVersion = "objectVersion"
    parentOrganizationId = "parentOrganizationId"
    type = "type"
    updatedAt = "updatedAt"
    warehouseLocation = "warehouseLocation"


class TypedefDagExecutionConstraint(str, Enum):
    dag_execution_pkey = "dag_execution_pkey"


class TypedefDagExecutionMetricConstraint(str, Enum):
    dag_execution_metric_pkey = "dag_execution_metric_pkey"


class TypedefDagExecutionMetricSelectColumn(str, Enum):
    createdAt = "createdAt"
    dagExecutionId = "dagExecutionId"
    metricName = "metricName"
    metricTimestamp = "metricTimestamp"
    metricValue = "metricValue"
    parentEnvironmentId = "parentEnvironmentId"


class TypedefDagExecutionMetricUpdateColumn(str, Enum):
    createdAt = "createdAt"
    dagExecutionId = "dagExecutionId"
    metricName = "metricName"
    metricTimestamp = "metricTimestamp"
    metricValue = "metricValue"
    parentEnvironmentId = "parentEnvironmentId"


class TypedefDagExecutionSelectColumn(str, Enum):
    canonicalName = "canonicalName"
    completedAt = "completedAt"
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    dagExecutionId = "dagExecutionId"
    dagRepresentation = "dagRepresentation"
    deletedAt = "deletedAt"
    errorCategory = "errorCategory"
    errorCode = "errorCode"
    errorInternalMessage = "errorInternalMessage"
    errorMessage = "errorMessage"
    errorStatus = "errorStatus"
    failFast = "failFast"
    name = "name"
    objectState = "objectState"
    objectVersion = "objectVersion"
    parentEnvironmentId = "parentEnvironmentId"
    parentExecutionSessionId = "parentExecutionSessionId"
    startedAt = "startedAt"
    status = "status"
    statusCode = "statusCode"
    submittedAt = "submittedAt"
    updatedAt = "updatedAt"


class TypedefDagExecutionSelectColumnTypedefDagExecutionAggregateBoolExpBool_andArgumentsColumns(
    str, Enum
):
    failFast = "failFast"


class TypedefDagExecutionSelectColumnTypedefDagExecutionAggregateBoolExpBool_orArgumentsColumns(
    str, Enum
):
    failFast = "failFast"


class TypedefDagExecutionUpdateColumn(str, Enum):
    canonicalName = "canonicalName"
    completedAt = "completedAt"
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    dagExecutionId = "dagExecutionId"
    dagRepresentation = "dagRepresentation"
    deletedAt = "deletedAt"
    errorCategory = "errorCategory"
    errorCode = "errorCode"
    errorInternalMessage = "errorInternalMessage"
    errorMessage = "errorMessage"
    errorStatus = "errorStatus"
    failFast = "failFast"
    name = "name"
    objectState = "objectState"
    objectVersion = "objectVersion"
    parentEnvironmentId = "parentEnvironmentId"
    parentExecutionSessionId = "parentExecutionSessionId"
    startedAt = "startedAt"
    status = "status"
    statusCode = "statusCode"
    submittedAt = "submittedAt"
    updatedAt = "updatedAt"


class TypedefDatasetUseTypeReferenceConstraint(str, Enum):
    dataset_use_type_reference_pkey = "dataset_use_type_reference_pkey"


class TypedefDatasetUseTypeReferenceEnum(str, Enum):
    CONSUMED = "CONSUMED"
    PRODUCED = "PRODUCED"
    UNSPECIFIED = "UNSPECIFIED"


class TypedefDatasetUseTypeReferenceSelectColumn(str, Enum):
    comment = "comment"
    value = "value"


class TypedefDatasetUseTypeReferenceUpdateColumn(str, Enum):
    comment = "comment"
    value = "value"


class TypedefEngineStatusReferenceConstraint(str, Enum):
    engine_status_reference_pkey = "engine_status_reference_pkey"


class TypedefEngineStatusReferenceEnum(str, Enum):
    FAILED = "FAILED"
    REQUESTED = "REQUESTED"
    RUNNING = "RUNNING"
    STARTING = "STARTING"
    STARTUP_FAILED = "STARTUP_FAILED"
    TERMINATED = "TERMINATED"
    TERMINATING = "TERMINATING"


class TypedefEngineStatusReferenceSelectColumn(str, Enum):
    comment = "comment"
    value = "value"


class TypedefEngineStatusReferenceUpdateColumn(str, Enum):
    comment = "comment"
    value = "value"


class TypedefEnvironmentCatalogAccessTypeReferenceConstraint(str, Enum):
    environment_catalog_access_type_reference_pkey = (
        "environment_catalog_access_type_reference_pkey"
    )


class TypedefEnvironmentCatalogAccessTypeReferenceEnum(str, Enum):
    READ_ONLY = "READ_ONLY"
    READ_WRITE = "READ_WRITE"


class TypedefEnvironmentCatalogAccessTypeReferenceSelectColumn(str, Enum):
    comment = "comment"
    value = "value"


class TypedefEnvironmentCatalogAccessTypeReferenceUpdateColumn(str, Enum):
    comment = "comment"
    value = "value"


class TypedefEnvironmentCatalogConstraint(str, Enum):
    environment_catalog_pkey = "environment_catalog_pkey"


class TypedefEnvironmentCatalogSelectColumn(str, Enum):
    accessType = "accessType"
    catalogId = "catalogId"
    createdAt = "createdAt"
    deletedAt = "deletedAt"
    environmentId = "environmentId"
    objectState = "objectState"
    objectVersion = "objectVersion"
    parentOrganizationId = "parentOrganizationId"
    updatedAt = "updatedAt"


class TypedefEnvironmentCatalogUpdateColumn(str, Enum):
    accessType = "accessType"
    catalogId = "catalogId"
    createdAt = "createdAt"
    deletedAt = "deletedAt"
    environmentId = "environmentId"
    objectState = "objectState"
    objectVersion = "objectVersion"
    parentOrganizationId = "parentOrganizationId"
    updatedAt = "updatedAt"


class TypedefEnvironmentConstraint(str, Enum):
    environment_pkey = "environment_pkey"
    uq_environment_name_per_organization = "uq_environment_name_per_organization"


class TypedefEnvironmentSelectColumn(str, Enum):
    canonicalName = "canonicalName"
    createdAt = "createdAt"
    deletedAt = "deletedAt"
    description = "description"
    environmentId = "environmentId"
    name = "name"
    objectState = "objectState"
    objectVersion = "objectVersion"
    parentOrganizationId = "parentOrganizationId"
    updatedAt = "updatedAt"


class TypedefEnvironmentUpdateColumn(str, Enum):
    canonicalName = "canonicalName"
    createdAt = "createdAt"
    deletedAt = "deletedAt"
    description = "description"
    environmentId = "environmentId"
    name = "name"
    objectState = "objectState"
    objectVersion = "objectVersion"
    parentOrganizationId = "parentOrganizationId"
    updatedAt = "updatedAt"


class TypedefExecutionSessionConstraint(str, Enum):
    execution_session_pkey = "execution_session_pkey"


class TypedefExecutionSessionSelectColumn(str, Enum):
    appId = "appId"
    canonicalName = "canonicalName"
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    currentlyManagingExecution = "currentlyManagingExecution"
    deletedAt = "deletedAt"
    engineStatus = "engineStatus"
    engineStatusDetails = "engineStatusDetails"
    engineStatusLastChangedAt = "engineStatusLastChangedAt"
    environmentShared = "environmentShared"
    ephemeralCatalogId = "ephemeralCatalogId"
    executionSessionId = "executionSessionId"
    lastActionRanAt = "lastActionRanAt"
    lastActionReceivedAt = "lastActionReceivedAt"
    lastHeartbeatAt = "lastHeartbeatAt"
    name = "name"
    objectState = "objectState"
    objectVersion = "objectVersion"
    parentEnvironmentId = "parentEnvironmentId"
    sessionState = "sessionState"
    sessionStatus = "sessionStatus"
    terminated = "terminated"
    terminatedAt = "terminatedAt"
    updatedAt = "updatedAt"


class TypedefExecutionSessionSelectColumnTypedefExecutionSessionAggregateBoolExpBool_andArgumentsColumns(
    str, Enum
):
    currentlyManagingExecution = "currentlyManagingExecution"
    environmentShared = "environmentShared"
    terminated = "terminated"


class TypedefExecutionSessionSelectColumnTypedefExecutionSessionAggregateBoolExpBool_orArgumentsColumns(
    str, Enum
):
    currentlyManagingExecution = "currentlyManagingExecution"
    environmentShared = "environmentShared"
    terminated = "terminated"


class TypedefExecutionSessionUpdateColumn(str, Enum):
    appId = "appId"
    canonicalName = "canonicalName"
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    currentlyManagingExecution = "currentlyManagingExecution"
    deletedAt = "deletedAt"
    engineStatus = "engineStatus"
    engineStatusDetails = "engineStatusDetails"
    engineStatusLastChangedAt = "engineStatusLastChangedAt"
    environmentShared = "environmentShared"
    ephemeralCatalogId = "ephemeralCatalogId"
    executionSessionId = "executionSessionId"
    lastActionRanAt = "lastActionRanAt"
    lastActionReceivedAt = "lastActionReceivedAt"
    lastHeartbeatAt = "lastHeartbeatAt"
    name = "name"
    objectState = "objectState"
    objectVersion = "objectVersion"
    parentEnvironmentId = "parentEnvironmentId"
    sessionState = "sessionState"
    sessionStatus = "sessionStatus"
    terminated = "terminated"
    terminatedAt = "terminatedAt"
    updatedAt = "updatedAt"


class TypedefExecutionStatusReferenceConstraint(str, Enum):
    execution_status_reference_pkey = "execution_status_reference_pkey"


class TypedefExecutionStatusReferenceEnum(str, Enum):
    CANCELLED = "CANCELLED"
    COMPLETED = "COMPLETED"
    FAILED = "FAILED"
    QUEUED = "QUEUED"
    READY = "READY"
    RUNNING = "RUNNING"
    STREAMING = "STREAMING"
    UNKNOWN = "UNKNOWN"


class TypedefExecutionStatusReferenceSelectColumn(str, Enum):
    comment = "comment"
    value = "value"


class TypedefExecutionStatusReferenceUpdateColumn(str, Enum):
    comment = "comment"
    value = "value"


class TypedefExternalIdReservationConstraint(str, Enum):
    external_id_reservation_pkey = "external_id_reservation_pkey"
    unique_external_id = "unique_external_id"


class TypedefExternalIdReservationSelectColumn(str, Enum):
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    expiresAt = "expiresAt"
    externalId = "externalId"
    externalIdReservationId = "externalIdReservationId"
    parentOrganizationId = "parentOrganizationId"


class TypedefExternalIdReservationUpdateColumn(str, Enum):
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    expiresAt = "expiresAt"
    externalId = "externalId"
    externalIdReservationId = "externalIdReservationId"
    parentOrganizationId = "parentOrganizationId"


class TypedefIndexedDatasetConstraint(str, Enum):
    indexed_dataset_pkey = "indexed_dataset_pkey"
    unique_indexed_dataset_per_catalog = "unique_indexed_dataset_per_catalog"


class TypedefIndexedDatasetSelectColumn(str, Enum):
    canonicalName = "canonicalName"
    catalogId = "catalogId"
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    deletedAt = "deletedAt"
    externalCatalogDatasetId = "externalCatalogDatasetId"
    externalCatalogNamespaceId = "externalCatalogNamespaceId"
    fullyQualifiedName = "fullyQualifiedName"
    indexedDatasetId = "indexedDatasetId"
    indexedDatasetType = "indexedDatasetType"
    indexedLocation = "indexedLocation"
    indexedSchema = "indexedSchema"
    internalCatalogDatasetId = "internalCatalogDatasetId"
    internalCatalogNamespaceId = "internalCatalogNamespaceId"
    name = "name"
    objectState = "objectState"
    objectVersion = "objectVersion"
    parentOrganizationId = "parentOrganizationId"
    updatedAt = "updatedAt"


class TypedefIndexedDatasetUpdateColumn(str, Enum):
    canonicalName = "canonicalName"
    catalogId = "catalogId"
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    deletedAt = "deletedAt"
    externalCatalogDatasetId = "externalCatalogDatasetId"
    externalCatalogNamespaceId = "externalCatalogNamespaceId"
    fullyQualifiedName = "fullyQualifiedName"
    indexedDatasetId = "indexedDatasetId"
    indexedDatasetType = "indexedDatasetType"
    indexedLocation = "indexedLocation"
    indexedSchema = "indexedSchema"
    internalCatalogDatasetId = "internalCatalogDatasetId"
    internalCatalogNamespaceId = "internalCatalogNamespaceId"
    name = "name"
    objectState = "objectState"
    objectVersion = "objectVersion"
    parentOrganizationId = "parentOrganizationId"
    updatedAt = "updatedAt"


class TypedefMetricDefinitionConstraint(str, Enum):
    uq_metric_definition_name = "uq_metric_definition_name"


class TypedefMetricDefinitionSelectColumn(str, Enum):
    canonicalName = "canonicalName"
    createdAt = "createdAt"
    deletedAt = "deletedAt"
    description = "description"
    name = "name"
    objectState = "objectState"
    objectVersion = "objectVersion"
    relevantFor = "relevantFor"
    unit = "unit"
    unitless = "unitless"
    updatedAt = "updatedAt"


class TypedefMetricDefinitionUpdateColumn(str, Enum):
    canonicalName = "canonicalName"
    createdAt = "createdAt"
    deletedAt = "deletedAt"
    description = "description"
    name = "name"
    objectState = "objectState"
    objectVersion = "objectVersion"
    relevantFor = "relevantFor"
    unit = "unit"
    unitless = "unitless"
    updatedAt = "updatedAt"


class TypedefObjectStateReferenceConstraint(str, Enum):
    object_state_reference_pkey = "object_state_reference_pkey"


class TypedefObjectStateReferenceEnum(str, Enum):
    ACTIVE = "ACTIVE"
    DELETED = "DELETED"
    UNSPECIFIED = "UNSPECIFIED"


class TypedefObjectStateReferenceSelectColumn(str, Enum):
    comment = "comment"
    value = "value"


class TypedefObjectStateReferenceUpdateColumn(str, Enum):
    comment = "comment"
    value = "value"


class TypedefOrganizationConstraint(str, Enum):
    organization_pkey = "organization_pkey"
    uq_auth_provider_organization_id = "uq_auth_provider_organization_id"
    uq_public_identifier = "uq_public_identifier"


class TypedefOrganizationSelectColumn(str, Enum):
    authProviderOrganizationId = "authProviderOrganizationId"
    canonicalName = "canonicalName"
    createdAt = "createdAt"
    deletedAt = "deletedAt"
    name = "name"
    objectState = "objectState"
    objectVersion = "objectVersion"
    organizationId = "organizationId"
    publicIdentifier = "publicIdentifier"
    systemUserId = "systemUserId"
    updatedAt = "updatedAt"


class TypedefOrganizationUpdateColumn(str, Enum):
    authProviderOrganizationId = "authProviderOrganizationId"
    canonicalName = "canonicalName"
    createdAt = "createdAt"
    deletedAt = "deletedAt"
    name = "name"
    objectState = "objectState"
    objectVersion = "objectVersion"
    organizationId = "organizationId"
    publicIdentifier = "publicIdentifier"
    systemUserId = "systemUserId"
    updatedAt = "updatedAt"


class TypedefPublicIdentifierConstraint(str, Enum):
    public_identifier_pkey = "public_identifier_pkey"


class TypedefPublicIdentifierReservationSelectColumn(str, Enum):
    description = "description"
    identifier = "identifier"
    identifierType = "identifierType"


class TypedefPublicIdentifierSelectColumn(str, Enum):
    createdAt = "createdAt"
    deletedAt = "deletedAt"
    description = "description"
    identifier = "identifier"
    identifierType = "identifierType"
    objectState = "objectState"
    objectVersion = "objectVersion"
    reservationStatus = "reservationStatus"
    updatedAt = "updatedAt"


class TypedefPublicIdentifierTypeReferenceConstraint(str, Enum):
    public_identifier_type_reference_pkey = "public_identifier_type_reference_pkey"


class TypedefPublicIdentifierTypeReferenceEnum(str, Enum):
    CUSTOM = "CUSTOM"
    PEOPLE = "PEOPLE"
    SYSTEM = "SYSTEM"


class TypedefPublicIdentifierTypeReferenceSelectColumn(str, Enum):
    comment = "comment"
    value = "value"


class TypedefPublicIdentifierTypeReferenceUpdateColumn(str, Enum):
    comment = "comment"
    value = "value"


class TypedefPublicIdentifierUpdateColumn(str, Enum):
    createdAt = "createdAt"
    deletedAt = "deletedAt"
    description = "description"
    identifier = "identifier"
    identifierType = "identifierType"
    objectState = "objectState"
    objectVersion = "objectVersion"
    reservationStatus = "reservationStatus"
    updatedAt = "updatedAt"


class TypedefQueryExecutionConstraint(str, Enum):
    query_execution_pkey = "query_execution_pkey"


class TypedefQueryExecutionMetricConstraint(str, Enum):
    query_execution_metric_pkey = "query_execution_metric_pkey"


class TypedefQueryExecutionMetricSelectColumn(str, Enum):
    createdAt = "createdAt"
    metricName = "metricName"
    metricTimestamp = "metricTimestamp"
    metricValue = "metricValue"
    parentEnvironmentId = "parentEnvironmentId"
    queryExecutionId = "queryExecutionId"


class TypedefQueryExecutionMetricUpdateColumn(str, Enum):
    createdAt = "createdAt"
    metricName = "metricName"
    metricTimestamp = "metricTimestamp"
    metricValue = "metricValue"
    parentEnvironmentId = "parentEnvironmentId"
    queryExecutionId = "queryExecutionId"


class TypedefQueryExecutionSelectColumn(str, Enum):
    canonicalName = "canonicalName"
    completedAt = "completedAt"
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    deletedAt = "deletedAt"
    errorCategory = "errorCategory"
    errorCode = "errorCode"
    errorInternalMessage = "errorInternalMessage"
    errorMessage = "errorMessage"
    errorStatus = "errorStatus"
    name = "name"
    objectState = "objectState"
    objectVersion = "objectVersion"
    ordinal = "ordinal"
    parentEnvironmentId = "parentEnvironmentId"
    parentExecutionSessionId = "parentExecutionSessionId"
    parentTaskExecutionId = "parentTaskExecutionId"
    queryExecutionId = "queryExecutionId"
    queryRepresentation = "queryRepresentation"
    startedAt = "startedAt"
    status = "status"
    statusCode = "statusCode"
    submittedAt = "submittedAt"
    updatedAt = "updatedAt"


class TypedefQueryExecutionUpdateColumn(str, Enum):
    canonicalName = "canonicalName"
    completedAt = "completedAt"
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    deletedAt = "deletedAt"
    errorCategory = "errorCategory"
    errorCode = "errorCode"
    errorInternalMessage = "errorInternalMessage"
    errorMessage = "errorMessage"
    errorStatus = "errorStatus"
    name = "name"
    objectState = "objectState"
    objectVersion = "objectVersion"
    ordinal = "ordinal"
    parentEnvironmentId = "parentEnvironmentId"
    parentExecutionSessionId = "parentExecutionSessionId"
    parentTaskExecutionId = "parentTaskExecutionId"
    queryExecutionId = "queryExecutionId"
    queryRepresentation = "queryRepresentation"
    startedAt = "startedAt"
    status = "status"
    statusCode = "statusCode"
    submittedAt = "submittedAt"
    updatedAt = "updatedAt"


class TypedefQueryOperatorExecutionConstraint(str, Enum):
    query_operator_execution_pkey = "query_operator_execution_pkey"


class TypedefQueryOperatorExecutionMetricConstraint(str, Enum):
    query_operator_execution_metric_pkey = "query_operator_execution_metric_pkey"


class TypedefQueryOperatorExecutionMetricSelectColumn(str, Enum):
    createdAt = "createdAt"
    metricName = "metricName"
    metricTimestamp = "metricTimestamp"
    metricValue = "metricValue"
    parentEnvironmentId = "parentEnvironmentId"
    queryOperatorExecutionId = "queryOperatorExecutionId"


class TypedefQueryOperatorExecutionMetricUpdateColumn(str, Enum):
    createdAt = "createdAt"
    metricName = "metricName"
    metricTimestamp = "metricTimestamp"
    metricValue = "metricValue"
    parentEnvironmentId = "parentEnvironmentId"
    queryOperatorExecutionId = "queryOperatorExecutionId"


class TypedefQueryOperatorExecutionSelectColumn(str, Enum):
    canonicalName = "canonicalName"
    completedAt = "completedAt"
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    deletedAt = "deletedAt"
    errorCategory = "errorCategory"
    errorCode = "errorCode"
    errorInternalMessage = "errorInternalMessage"
    errorMessage = "errorMessage"
    errorStatus = "errorStatus"
    name = "name"
    objectState = "objectState"
    objectVersion = "objectVersion"
    ordinal = "ordinal"
    parentEnvironmentId = "parentEnvironmentId"
    parentExecutionSessionId = "parentExecutionSessionId"
    parentQueryExecutionId = "parentQueryExecutionId"
    queryOperatorExecutionId = "queryOperatorExecutionId"
    startedAt = "startedAt"
    status = "status"
    statusCode = "statusCode"
    submittedAt = "submittedAt"
    updatedAt = "updatedAt"


class TypedefQueryOperatorExecutionUpdateColumn(str, Enum):
    canonicalName = "canonicalName"
    completedAt = "completedAt"
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    deletedAt = "deletedAt"
    errorCategory = "errorCategory"
    errorCode = "errorCode"
    errorInternalMessage = "errorInternalMessage"
    errorMessage = "errorMessage"
    errorStatus = "errorStatus"
    name = "name"
    objectState = "objectState"
    objectVersion = "objectVersion"
    ordinal = "ordinal"
    parentEnvironmentId = "parentEnvironmentId"
    parentExecutionSessionId = "parentExecutionSessionId"
    parentQueryExecutionId = "parentQueryExecutionId"
    queryOperatorExecutionId = "queryOperatorExecutionId"
    startedAt = "startedAt"
    status = "status"
    statusCode = "statusCode"
    submittedAt = "submittedAt"
    updatedAt = "updatedAt"


class TypedefReservationStatusReferenceConstraint(str, Enum):
    reservation_status_reference_pkey = "reservation_status_reference_pkey"


class TypedefReservationStatusReferenceEnum(str, Enum):
    ACTIVE = "ACTIVE"
    RESERVED = "RESERVED"
    UNUSED = "UNUSED"


class TypedefReservationStatusReferenceSelectColumn(str, Enum):
    comment = "comment"
    value = "value"


class TypedefReservationStatusReferenceUpdateColumn(str, Enum):
    comment = "comment"
    value = "value"


class TypedefS3AccessRoleConstraint(str, Enum):
    s3_access_role_pkey = "s3_access_role_pkey"
    unique_active_role_arn_per_organization = "unique_active_role_arn_per_organization"


class TypedefS3AccessRoleSelectColumn(str, Enum):
    canonicalName = "canonicalName"
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    deletedAt = "deletedAt"
    description = "description"
    externalId = "externalId"
    name = "name"
    objectState = "objectState"
    objectVersion = "objectVersion"
    parentOrganizationId = "parentOrganizationId"
    roleArn = "roleArn"
    s3AccessRoleId = "s3AccessRoleId"
    updatedAt = "updatedAt"


class TypedefS3AccessRoleUpdateColumn(str, Enum):
    canonicalName = "canonicalName"
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    deletedAt = "deletedAt"
    description = "description"
    externalId = "externalId"
    name = "name"
    objectState = "objectState"
    objectVersion = "objectVersion"
    parentOrganizationId = "parentOrganizationId"
    roleArn = "roleArn"
    s3AccessRoleId = "s3AccessRoleId"
    updatedAt = "updatedAt"


class TypedefS3BucketAccessConfigurationConstraint(str, Enum):
    s3_bucket_access_configuration_pkey = "s3_bucket_access_configuration_pkey"
    unique_active_bucket_name_per_organization = (
        "unique_active_bucket_name_per_organization"
    )


class TypedefS3BucketAccessConfigurationSelectColumn(str, Enum):
    allowedPrefixes = "allowedPrefixes"
    bucketName = "bucketName"
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    deletedAt = "deletedAt"
    kmsKeyArn = "kmsKeyArn"
    objectState = "objectState"
    objectVersion = "objectVersion"
    parentOrganizationId = "parentOrganizationId"
    prefixBasedAccess = "prefixBasedAccess"
    s3AccessRoleId = "s3AccessRoleId"
    s3BucketAccessConfigurationId = "s3BucketAccessConfigurationId"
    updatedAt = "updatedAt"


class TypedefS3BucketAccessConfigurationSelectColumnTypedefS3BucketAccessConfigurationAggregateBoolExpBool_andArgumentsColumns(
    str, Enum
):
    prefixBasedAccess = "prefixBasedAccess"


class TypedefS3BucketAccessConfigurationSelectColumnTypedefS3BucketAccessConfigurationAggregateBoolExpBool_orArgumentsColumns(
    str, Enum
):
    prefixBasedAccess = "prefixBasedAccess"


class TypedefS3BucketAccessConfigurationUpdateColumn(str, Enum):
    allowedPrefixes = "allowedPrefixes"
    bucketName = "bucketName"
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    deletedAt = "deletedAt"
    kmsKeyArn = "kmsKeyArn"
    objectState = "objectState"
    objectVersion = "objectVersion"
    parentOrganizationId = "parentOrganizationId"
    prefixBasedAccess = "prefixBasedAccess"
    s3AccessRoleId = "s3AccessRoleId"
    s3BucketAccessConfigurationId = "s3BucketAccessConfigurationId"
    updatedAt = "updatedAt"


class TypedefS3BucketOperationPermissionConstraint(str, Enum):
    s3_bucket_operation_permission_pkey = "s3_bucket_operation_permission_pkey"


class TypedefS3BucketOperationPermissionSelectColumn(str, Enum):
    createdAt = "createdAt"
    parentOrganizationId = "parentOrganizationId"
    permittedOperation = "permittedOperation"
    s3BucketAccessConfigurationId = "s3BucketAccessConfigurationId"


class TypedefS3BucketOperationPermissionUpdateColumn(str, Enum):
    createdAt = "createdAt"
    parentOrganizationId = "parentOrganizationId"
    permittedOperation = "permittedOperation"
    s3BucketAccessConfigurationId = "s3BucketAccessConfigurationId"


class TypedefS3BucketOperationTypeReferenceConstraint(str, Enum):
    s3_bucket_operation_type_reference_pkey = "s3_bucket_operation_type_reference_pkey"


class TypedefS3BucketOperationTypeReferenceEnum(str, Enum):
    DELETE = "DELETE"
    READ = "READ"
    WRITE = "WRITE"


class TypedefS3BucketOperationTypeReferenceSelectColumn(str, Enum):
    comment = "comment"
    name = "name"


class TypedefS3BucketOperationTypeReferenceUpdateColumn(str, Enum):
    comment = "comment"
    name = "name"


class TypedefSessionStatusReferenceConstraint(str, Enum):
    session_status_reference_pkey = "session_status_reference_pkey"


class TypedefSessionStatusReferenceEnum(str, Enum):
    ACTIVE = "ACTIVE"
    TERMINATED = "TERMINATED"


class TypedefSessionStatusReferenceSelectColumn(str, Enum):
    comment = "comment"
    value = "value"


class TypedefSessionStatusReferenceUpdateColumn(str, Enum):
    comment = "comment"
    value = "value"


class TypedefTaskExecutionConstraint(str, Enum):
    task_execution_pkey = "task_execution_pkey"


class TypedefTaskExecutionMetricConstraint(str, Enum):
    task_execution_metric_pkey = "task_execution_metric_pkey"


class TypedefTaskExecutionMetricSelectColumn(str, Enum):
    createdAt = "createdAt"
    metricName = "metricName"
    metricTimestamp = "metricTimestamp"
    metricValue = "metricValue"
    parentEnvironmentId = "parentEnvironmentId"
    taskExecutionId = "taskExecutionId"


class TypedefTaskExecutionMetricUpdateColumn(str, Enum):
    createdAt = "createdAt"
    metricName = "metricName"
    metricTimestamp = "metricTimestamp"
    metricValue = "metricValue"
    parentEnvironmentId = "parentEnvironmentId"
    taskExecutionId = "taskExecutionId"


class TypedefTaskExecutionSelectColumn(str, Enum):
    canonicalName = "canonicalName"
    completedAt = "completedAt"
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    deletedAt = "deletedAt"
    errorCategory = "errorCategory"
    errorCode = "errorCode"
    errorInternalMessage = "errorInternalMessage"
    errorMessage = "errorMessage"
    errorStatus = "errorStatus"
    name = "name"
    objectState = "objectState"
    objectVersion = "objectVersion"
    ordinal = "ordinal"
    parentDagExecutionId = "parentDagExecutionId"
    parentEnvironmentId = "parentEnvironmentId"
    parentExecutionSessionId = "parentExecutionSessionId"
    startedAt = "startedAt"
    status = "status"
    statusCode = "statusCode"
    submittedAt = "submittedAt"
    taskExecutionId = "taskExecutionId"
    taskRepresentation = "taskRepresentation"
    updatedAt = "updatedAt"


class TypedefTaskExecutionUpdateColumn(str, Enum):
    canonicalName = "canonicalName"
    completedAt = "completedAt"
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    deletedAt = "deletedAt"
    errorCategory = "errorCategory"
    errorCode = "errorCode"
    errorInternalMessage = "errorInternalMessage"
    errorMessage = "errorMessage"
    errorStatus = "errorStatus"
    name = "name"
    objectState = "objectState"
    objectVersion = "objectVersion"
    ordinal = "ordinal"
    parentDagExecutionId = "parentDagExecutionId"
    parentEnvironmentId = "parentEnvironmentId"
    parentExecutionSessionId = "parentExecutionSessionId"
    startedAt = "startedAt"
    status = "status"
    statusCode = "statusCode"
    submittedAt = "submittedAt"
    taskExecutionId = "taskExecutionId"
    taskRepresentation = "taskRepresentation"
    updatedAt = "updatedAt"


class TypedefTaskReferencedDatasetConstraint(str, Enum):
    task_referenced_dataset_pkey = "task_referenced_dataset_pkey"
    unique_task_referenced_dataset_per_task_and_use = (
        "unique_task_referenced_dataset_per_task_and_use"
    )


class TypedefTaskReferencedDatasetSelectColumn(str, Enum):
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    dagExecutionId = "dagExecutionId"
    indexedDatasetId = "indexedDatasetId"
    parentEnvironmentId = "parentEnvironmentId"
    parentOrganizationId = "parentOrganizationId"
    taskExecutionId = "taskExecutionId"
    taskReferencedDatasetId = "taskReferencedDatasetId"
    useType = "useType"


class TypedefTaskReferencedDatasetUpdateColumn(str, Enum):
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    dagExecutionId = "dagExecutionId"
    indexedDatasetId = "indexedDatasetId"
    parentEnvironmentId = "parentEnvironmentId"
    parentOrganizationId = "parentOrganizationId"
    taskExecutionId = "taskExecutionId"
    taskReferencedDatasetId = "taskReferencedDatasetId"
    useType = "useType"


class TypedefUserAuthTypeReferenceConstraint(str, Enum):
    user_auth_type_reference_pkey = "user_auth_type_reference_pkey"


class TypedefUserAuthTypeReferenceEnum(str, Enum):
    INTERACTIVE = "INTERACTIVE"
    SERVICE = "SERVICE"


class TypedefUserAuthTypeReferenceSelectColumn(str, Enum):
    comment = "comment"
    value = "value"


class TypedefUserAuthTypeReferenceUpdateColumn(str, Enum):
    comment = "comment"
    value = "value"


class TypedefUserConstraint(str, Enum):
    uq_external_user_id_parent_organization_id = (
        "uq_external_user_id_parent_organization_id"
    )
    user_pkey = "user_pkey"


class TypedefUserPrivateSelectColumn(str, Enum):
    emailAddress = "emailAddress"
    parentOrganizationId = "parentOrganizationId"
    settings = "settings"
    userId = "userId"


class TypedefUserSelectColumn(str, Enum):
    authProviderUserId = "authProviderUserId"
    authType = "authType"
    canonicalName = "canonicalName"
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    deletedAt = "deletedAt"
    emailAddress = "emailAddress"
    name = "name"
    objectState = "objectState"
    objectVersion = "objectVersion"
    parentOrganizationId = "parentOrganizationId"
    settings = "settings"
    updatedAt = "updatedAt"
    userId = "userId"


class TypedefUserUpdateColumn(str, Enum):
    authProviderUserId = "authProviderUserId"
    authType = "authType"
    canonicalName = "canonicalName"
    createdAt = "createdAt"
    createdByUserId = "createdByUserId"
    deletedAt = "deletedAt"
    emailAddress = "emailAddress"
    name = "name"
    objectState = "objectState"
    objectVersion = "objectVersion"
    parentOrganizationId = "parentOrganizationId"
    settings = "settings"
    updatedAt = "updatedAt"
    userId = "userId"
