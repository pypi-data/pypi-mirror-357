# Generated by ariadne-codegen
# Source: ../../../graphql/operations/

from typing import Optional
from uuid import UUID

from pydantic import Field

from .base_model import BaseModel


class DropCatalog(BaseModel):
    delete_catalog_dataset: Optional["DropCatalogDeleteCatalogDataset"] = Field(
        alias="deleteCatalogDataset"
    )
    delete_catalog_namespace: Optional["DropCatalogDeleteCatalogNamespace"] = Field(
        alias="deleteCatalogNamespace"
    )
    delete_typedef_catalog_by_pk: Optional["DropCatalogDeleteTypedefCatalogByPk"] = (
        Field(alias="deleteTypedefCatalogByPk")
    )


class DropCatalogDeleteCatalogDataset(BaseModel):
    affected_rows: int = Field(alias="affectedRows")


class DropCatalogDeleteCatalogNamespace(BaseModel):
    affected_rows: int = Field(alias="affectedRows")


class DropCatalogDeleteTypedefCatalogByPk(BaseModel):
    catalog_id: UUID = Field(alias="catalogId")


DropCatalog.model_rebuild()
