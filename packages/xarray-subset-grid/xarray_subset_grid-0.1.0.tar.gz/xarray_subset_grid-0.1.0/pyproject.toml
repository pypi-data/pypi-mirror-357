[build-system]
build-backend = "setuptools.build_meta"

requires = [ "setuptools>=72", "setuptools-scm[toml]>=8", "wheel" ]

[project]
name = "xarray-subset-grid"
description = "Subset Xarray datasets in time and space"
readme = "README.md"
keywords = [ "xarray" ]
license = { file = "LICENSE" }

authors = [
  { name = "Matthew Iannucci", email = "matt.iannucci@tetratech.com" },
  { name = "Christopher H. Barker", email = "chris.barker@noaa.gov" },
]
requires-python = ">=3.10"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: BSD License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering",
]

dynamic = [ "version" ]

dependencies = [
  "cf-xarray",
  "cftime",
  "dask",
  # "dask[complete]", # getting errors from pixi with the "complete"
  "netcdf4",
  "numpy",
  "xarray>=2024.6",
]

optional-dependencies.dev = [
  "pre-commit",
  "pyright",
  "pytest",
  "pytest-cov",
  "ruff",
  "sphinx",
  "sphinx-rtd-theme",
]
optional-dependencies.examples = [ "fsspec", "h5netcdf", "matplotlib", "s3fs", "zarr<3" ]
urls."Homepage" = "https://github.com/asascience-open/xarray-subset-grid"

[tool.setuptools]
packages = [ "xarray_subset_grid" ]

[tool.setuptools_scm]
write_to = "xarray_subset_grid/_version.py"

[tool.ruff]
target-version = "py310"
# Use a longer line length.
line-length = 100

builtins = [ "ellipsis" ]
extend-exclude = [ "docs", "xarray_subset_grid/_version.py" ]
# Prefer single quotes over double quotes.
format.quote-style = "double"
# Use `\n` line endings for all files
format.line-ending = "lf"
format.exclude = [ "*.ipynb" ]
lint.select = [
  "E",   # Pycodestyle
  "F",   # Pyflakes
  "I",   # isort
  "TID", # flake8-tidy-imports (absolute imports)
  "UP",  # Pyupgrade
  "W",
]
lint.ignore = [
  "E402", # module level import not at top of file
  "E731", # do not assign a lambda expression, use a def
]
lint.extend-safe-fixes = [
  "TID252", # absolute imports
]

[tool.pyright]
venvPath = "."
venv = "venv"

[tool.pixi.project]
channels = [ "conda-forge" ]
platforms = [ "linux-64", "osx-arm64", "osx-64", "win-64" ]

[tool.pixi.pypi-dependencies]
xarray_subset_grid = { path = ".", editable = true }

[tool.pixi.environments]
default = { solve-group = "default" }
dev = { features = [ "dev" ], solve-group = "default" }
examples = { features = [ "examples" ], solve-group = "default" }
all = { features = [ "dev", "examples" ], solve-group = "default" }
test310 = [ "dev", "py310" ]                                        # implicit: test310 = ["dev", "py310", "default"]
test311 = [ "dev", "py311" ]
test312 = [ "dev", "py312" ]
test313 = [ "dev", "py313" ]

[tool.pixi.tasks]

[tool.pixi.dependencies]
python = ">=3.10"
numpy = "*"
xarray = ">=2024.6"
pandas = "*"
cf_xarray = "*"
dask = "*"
fsspec = "*"
s3fs = "*"
zarr = "<3"
netcdf4 = "*"
h5netcdf = "*"

[tool.pixi.feature.dev.dependencies]
ruff = "*"
pre-commit = "*"
pyright = "*"
pytest = "*"
pytest-cov = "*"
sphinx = "*"
sphinx-rtd-theme = "*"
pip = "*"
setuptools_scm = "*"
python-build = "*"

[tool.pixi.feature.dev.tasks]
lint = "ruff check tests xarray_subset_grid"
test = "pytest tests/"
test_all = "pytest --online tests/"

[tool.pixi.feature.examples.dependencies]
matplotlib = "*"
jupyter = "*"
ipython = "*"

[tool.pixi.feature.py310.dependencies]
python = "~=3.10.0"

[tool.pixi.feature.py311.dependencies]
python = "~=3.11.0"

[tool.pixi.feature.py312.dependencies]
python = "~=3.12.0"

[tool.pixi.feature.py313.dependencies]
python = "~=3.13.0"
