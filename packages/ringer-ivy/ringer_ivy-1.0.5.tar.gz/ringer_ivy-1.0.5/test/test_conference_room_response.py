# coding: utf-8

"""
    Ringer Business API

    This API provides comprehensive endpoints for the Ringer Business system. It includes functionality for managing customer accounts, addresses, sites,  phone numbers, payments, users, and other business resources.  Operations typically require authentication and appropriate permissions. 

    The version of the OpenAPI document: 1.0.5
    Contact: support@ringer.tel
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ringer_business.models.conference_room_response import ConferenceRoomResponse

class TestConferenceRoomResponse(unittest.TestCase):
    """ConferenceRoomResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConferenceRoomResponse:
        """Test ConferenceRoomResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConferenceRoomResponse`
        """
        model = ConferenceRoomResponse()
        if include_optional:
            return ConferenceRoomResponse(
                name = 'Engineering Standup',
                pin = '12345',
                moderator_pin = '54321',
                profile = 'default',
                user_id = 10,
                id = 3,
                site_id = 6,
                greeting_url = 'https://cdn.example.com/greetings/conf_3.mp3',
                music_on_hold_url = 'https://cdn.example.com/moh/conf_3.mp3',
                links = [
                    ringer_business.models.link.Link(
                        href = '/example/resource/123', 
                        rel = 'self', 
                        method = 'GET', 
                        title = 'View Example Resource', )
                    ]
            )
        else:
            return ConferenceRoomResponse(
                name = 'Engineering Standup',
                pin = '12345',
                moderator_pin = '54321',
                id = 3,
                site_id = 6,
        )
        """

    def testConferenceRoomResponse(self):
        """Test ConferenceRoomResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
