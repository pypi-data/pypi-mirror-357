name: Publish to PyPI

on:
  push:
    tags:
      - 'v*.*.*'

jobs:

  test_publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: pip install build
      - run: python -m build
      - name: Check if TEST_PYPI_API_TOKEN is set
        run: |
          if [ -z "$TEST_PYPI_API_TOKEN" ]; then
            echo "❌ TEST_PYPI_API_TOKEN is not set"
            exit 1
          else
            echo "✅ Secret is set"
          fi
        env:
          TEST_PYPI_API_TOKEN: ${{ secrets.TEST_PYPI_API_TOKEN }}
      - name: Upload to TestPyPI (debug)
        run: |
          ls -lh dist/
          python -m pip install --quiet twine
          twine check dist/* || exit 1
          twine upload --verbose --repository-url https://test.pypi.org/legacy/ dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      - name: Upload to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          attestations: false 

  publish:
    needs: test_publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: pip install build
      - run: python -m build
      - name: Check if PYPI_API_TOKEN is set
        run: |
          if [ -z "$PYPI_API_TOKEN" ]; then
            echo "❌ PYPI_API_TOKEN is not set"
            exit 1
          else
            echo "✅ Secret is set"
          fi
        env:
          PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
      - name: Upload to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}