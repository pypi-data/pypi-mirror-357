[tool.hatch.version]
source = "regex_commit"
commit_extra_args = [
    "-e",
]
path = "src/mcp_server_llmling/__init__.py"

[tool.hatch.build.targets]

[tool.uv]
default-groups = [
    "dev",
    "lint",
    "docs",
]

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
log_cli = true
python_files = [
    "test_*.py",
]
pythonpath = [
    "src",
]
log_level = "ERROR"
asyncio_default_fixture_loop_scope = "function"
log_format = "%(asctime)s %(levelname)s %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"
asyncio_mode = "auto"
addopts = "-m 'not slow'"
markers = [
    "asyncio: mark test as async",
    "slow: marks tests as slow",
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
]
filterwarnings = [
    "ignore::DeprecationWarning:pydantic.*:",
    "ignore::DeprecationWarning:litellm.*:",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
    "if __name__ == \"__main__\":",
]

[tool.mypy]
python_version = "3.12"
disable_error_code = [
    "misc",
    "import",
]
pretty = true
check_untyped_defs = true
exclude = [
    "venv/",
    ".venv/",
    "tests/",
]
plugins = [
    "pydantic.mypy",
]

[tool.ruff]
line-length = 90
extend-exclude = [
    "docs",
]
target-version = "py312"

[tool.ruff.lint]
select = [
    "A",
    "B",
    "BLE",
    "C",
    "C4",
    "COM",
    "D",
    "E",
    "EM",
    "EXE",
    "F",
    "FA",
    "FLY",
    "G",
    "I",
    "ICN",
    "INP",
    "INT",
    "ISC",
    "N",
    "PERF",
    "PIE",
    "PLE",
    "PLC",
    "PLR",
    "PT",
    "PTH",
    "PYI",
    "Q",
    "RET",
    "RSE",
    "RUF",
    "SIM",
    "SLF",
    "SLOT",
    "T10",
    "TC",
    "TID",
    "TRY",
    "UP",
    "W",
    "YTT",
]
ignore = [
    "C408",
    "B905",
    "C901",
    "COM812",
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "D203",
    "D204",
    "D213",
    "D215",
    "D400",
    "D401",
    "D404",
    "D406",
    "D407",
    "D408",
    "D409",
    "D413",
    "ISC001",
    "PLR0912",
    "PLR0913",
    "PLR0915",
    "SLF001",
    "TRY003",
]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.isort]
lines-after-imports = 2
force-sort-within-sections = true
combine-as-imports = true

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "E402",
    "I001",
]
"scripts/*" = [
    "INP001",
]

[tool.ruff.format]
preview = true

[tool.pyright]
venvPath = "."
venv = ".venv"
pythonVersion = "3.12"
pythonPlatform = "All"
typeCheckingMode = "basic"
deprecateTypingAliases = true
reportMissingTypeStubs = false
reportUnusedCallResult = false
reportUnknownVariableType = false
reportAny = false
reportImplicitOverride = false
reportUnusedFunction = false
reportImplicitStringConcatenation = false
reportIgnoreCommentWithoutRule = false
reportUnannotatedClassAttribute = false
reportSelfClsParameterName = false
reportPrivateImportUsage = false

[tool.mknodes]
allowed-commit-types = [
    "fix",
    "feat",
    "refactor",
    "docs",
    "test",
    "build",
    "chore",
]
docstring-style = "google"

[build-system]
requires = [
    "hatchling",
    "hatch-regex-commit",
]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pytest",
    "pytest-cov",
    "pyreadline3",
    "devtools",
    "pytest-asyncio>=0.24.0",
    "pytest-xdist",
]
benchmark = [
    "pyinstrument",
]
lint = [
    "ruff",
    "mypy[faster-cache]; python_version < '3.14'",
    "mypy; python_version >= '3.14'",
]
docs = [
    "mkdocs-mknodes",
    "mkdocs-material",
]
