# SPDX-FileCopyrightText: 2024-2025 Ivan Perevala <ivan95perevala@gmail.com>
#
# SPDX-License-Identifier: GPL-3.0-or-later

# NOTE: Use https://packaging.python.org/en/latest/guides/writing-pyproject-toml/ guide reference for editing this file. 

# ----------------------------------------------------------------------------------------------------------------------
[project]
name = "bhqrprt"
version = "4.2.6"
authors = [{ name = "Ivan Perevala", email = "ivan95perevala@gmail.com" }]
description = "Logging system for Blender extensions"
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "Development Status :: 5 - Production/Stable",
]
license = "GPL-3.0-or-later"
license-files = ["LICENSE"]
keywords = ["bpy", "logging"]

# Python version used by Blender 4.4
# TODO: Test and update pyproject.toml w.r.t. required Blender version.
requires-python = ">=3.11"

dynamic = ["optional-dependencies"]

[project.urls]
Homepage = "https://github.com/ivan-perevala/lib_bhqrprt"
Issues = "https://github.com/ivan-perevala/lib_bhqrprt/issues"
Documentation = "https://lib-bhqrprt.readthedocs.io/4.2.6/"

[tool.setuptools.dynamic]
optional-dependencies = { docs = { file = [
    "requirements-docs.txt",
] }, tests = { file = [
    "requirements-tests.txt",
] } }

# ----------------------------------------------------------------------------------------------------------------------
# setuptools used here, might be changed because this method considered legacy.
# https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#declaring-the-build-backend
[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

# ----------------------------------------------------------------------------------------------------------------------
# Project uses src file layout, so we need to clarify this here.
# https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#setuptools-specific-configuration
[tool.setuptools.packages.find]
where = ["src"]
include = ["bhqrprt*"]

# ----------------------------------------------------------------------------------------------------------------------
# Include LICENSE files as package data for project.
# https://setuptools.pypa.io/en/latest/userguide/datafiles.html#package-data
[tool.setuptools.package-data]
"bhqrprt4" = ["./LICENSE", "icons/*.dat"]

# ----------------------------------------------------------------------------------------------------------------------
# MyPy configuration.
# https://mypy.readthedocs.io/en/stable/config_file.html#using-a-pyproject-toml-file
[tool.mypy]
# Type-checks the interior of functions without type annotations.
check_untyped_defs = true

# Disallows defining functions without type annotations or with incomplete type annotations.
disallow_untyped_defs = false

# Suppresses error messages about imports that cannot be resolved.
ignore_missing_imports = true

# Shows a warning when returning a value with type Any from a function declared with a non-Any return type.
warn_return_any = true

# Warns about unneeded # type: ignore comments.
warn_unused_ignores = true

# ----------------------------------------------------------------------------------------------------------------------
# PyLint configuration.
# https://pylint.readthedocs.io/en/stable/user_guide/usage/run.html
[tool.pylint]
# The type of string formatting that logging methods do. `old` means using % formatting, `new` is for `{}` formatting.
logging-format-style = "fstr"

# 'missing-module-docstring' - Used when a module has no docstring. Empty modules do not require a docstring.
disable = """
missing-module-docstring,
"""

# ----------------------------------------------------------------------------------------------------------------------
[tool.pyright]
# Generate or suppress diagnostics for imports that have no corresponding source file.
reportMissingModuleSource = false

# Generate or suppress diagnostics for type annotations that use invalid type expression forms or are semantically
# invalid.
reportInvalidTypeForm = false

# ----------------------------------------------------------------------------------------------------------------------
# Pytest configuration
# https://docs.pytest.org/en/stable/reference/customize.html#pyproject-toml
[tool.pytest.ini_options]

# https://docs.pytest.org/en/stable/explanation/goodpractices.html#tests-outside-application-code
addopts = ["--import-mode=importlib"]

#https://docs.pytest.org/en/stable/reference/reference.html#confval-pythonpath
pythonpath = ["./src"]

#https://docs.pytest.org/en/stable/reference/reference.html#confval-testpaths
testpaths = ["tests"]

# https://github.com/codespell-project/codespell?tab=readme-ov-file#using-a-config-file
[tool.codespell]
skip = './build,./dist,./docs/_build'
count = true
quiet-level = 3
