import datetime as dt

import numpy as np
from AniMAIRE import AniMAIRE

import os
import pytest

from AniMAIRE.anisotropic_MAIRE_engine.spectralCalculations.pitchAngleDistribution import IsotropicPitchAngleDistribution


IN_GITHUB_ACTIONS = os.getenv("GITHUB_ACTIONS") == "true"

"""
Unit tests for the anisotropic MAIRE module.
"""

def custom_round(x):
    """
    Custom rounding function for testing purposes.

    Parameters:
    - x: float
        The number to be rounded.

    Returns:
    - int
        The rounded integer.
    """
    s = format(x, '.7g')
    # If scientific notation is used, keep the 7 significant figures.
    if 'e' in s or 'E' in s:
        return float(s)
    else:
        # Otherwise, use fixed point with 6 decimal places.
        return float(format(x, '.6f'))



# def test_run_from_spectra():

#     AniMAIRE.run_from_spectra(proton_rigidity_spectrum=lambda x:1,
#                      alpha_rigidity_spectrum=lambda x:1,
#                      Kp_index=6,
#                      date_and_time=dt.datetime(year=2000,month=7,day=14,hour=10,minute=45,second=0))
    
def test_run_from_spectra_two_locations():

    AniMAIRE.run_from_spectra(proton_rigidity_spectrum=lambda x:1,
                     alpha_rigidity_spectrum=lambda x:1,
                     Kp_index=6,
                     date_and_time=dt.datetime(year=2000,month=7,day=14,hour=10,minute=45,second=0),
                     altitudes_in_km=np.append(np.array(range(0,13)) * 0.3048,11.28),
                     array_of_lats_and_longs=[[46.2,187.4],[-28.3,-92.7]])
    
# def test_run_from_spectra_proton_only():

#     AniMAIRE.run_from_spectra(proton_rigidity_spectrum=lambda x:1,
#                      Kp_index=6,
#                      date_and_time=dt.datetime(year=2000,month=7,day=14,hour=10,minute=45,second=0))
    
# def test_Common_spec():
#     AniMAIRE.run_from_power_law_gaussian_distribution(J0=256_000.0, gamma=3.41, deltaGamma=0.22, sigma=np.sqrt(0.19),
#                                          reference_pitch_angle_latitude=-17.0,reference_pitch_angle_longitude=148.0,
#                                          Kp_index=3, date_and_time=dt.datetime(2006, 12, 13, 3, 0),
#                                          altitudes_in_km=np.append(np.array(range(0,13)) * 0.3048,11.28),
#                                          )

@pytest.mark.skipif(
    IN_GITHUB_ACTIONS,
    reason="Skipping optional test. Set the environment variable RUN_OPTIONAL_TESTS to run this test."
)
def test_Common_spec_max_asymp_dir():
    expected_output = [
        [-35.0, 78.0, 0.0000, 0.000101, 0.000128, 0.000153, 0.000055, 0.000033, 0.000022, 3.332091e-18, 3.332091e-13],
        [-35.0, 78.0, 0.3048, 0.000122, 0.000141, 0.000064, 0.000063, 0.000042, 0.000029, 4.160631e-18, 4.160631e-13],
        [-35.0, 78.0, 0.6096, 0.000159, 0.000182, 0.000113, 0.000082, 0.000054, 0.000038, 5.351745e-18, 5.351745e-13],
        [-35.0, 78.0, 0.9144, 0.000209, 0.000240, 0.000095, 0.000108, 0.000070, 0.000049, 7.033899e-18, 7.033899e-13],
        [-35.0, 78.0, 1.2192, 0.000275, 0.000312, 0.000208, 0.000138, 0.000091, 0.000063, 9.148443e-18, 9.148443e-13],
        [-35.0, 78.0, 1.5240, 0.000358, 0.000404, 0.000303, 0.000182, 0.000119, 0.000082, 1.185003e-17, 1.185003e-12],
        [-35.0, 78.0, 1.8288, 0.000460, 0.000514, 0.000262, 0.000231, 0.000152, 0.000105, 1.518599e-17, 1.518599e-12],
        [-35.0, 78.0, 2.1336, 0.000576, 0.000639, 0.000469, 0.000284, 0.000189, 0.000130, 1.889418e-17, 1.889418e-12],
        [-35.0, 78.0, 2.4384, 0.000733, 0.000811, 0.000357, 0.000365, 0.000236, 0.000163, 2.358940e-17, 2.358940e-12],
        [-35.0, 78.0, 2.7432, 0.000914, 0.000997, 0.000470, 0.000445, 0.000291, 0.000202, 2.910828e-17, 2.910828e-12],
        [-35.0, 78.0, 3.0480, 0.001130, 0.001234, 0.000858, 0.000548, 0.000355, 0.000247, 3.547202e-17, 3.547202e-12],
        [-35.0, 78.0, 3.3528, 0.001396, 0.001534, 0.001158, 0.000666, 0.000431, 0.000299, 4.305606e-17, 4.305606e-12],
        [-35.0, 78.0, 3.6576, 0.001700, 0.001813, 0.001115, 0.000800, 0.000519, 0.000359, 5.189222e-17, 5.189222e-12],
        [-35.0, 78.0, 11.2800, 0.042418, 0.035133, 0.027819, 0.012671, 0.008251, 0.005798, 8.251207e-16, 8.251207e-11],
        [65.0, 25.0, 0.0000, 0.000463, 0.000657, 0.000032, 0.000326, 0.000176, 0.000113, 1.762758e-17, 1.762758e-12],
        [65.0, 25.0, 0.3048, 0.000500, 0.000736, 0.000118, 0.000348, 0.000229, 0.000148, 2.293555e-17, 2.293555e-12],
        [65.0, 25.0, 0.6096, 0.000743, 0.001070, 0.000094, 0.000553, 0.000353, 0.000216, 3.525726e-17, 3.525726e-12],
        [65.0, 25.0, 0.9144, 0.001045, 0.001535, 0.000569, 0.000762, 0.000494, 0.000302, 4.942707e-17, 4.942707e-12],
        [65.0, 25.0, 1.2192, 0.001447, 0.002083, 0.000129, 0.001023, 0.000680, 0.000425, 6.799851e-17, 6.799851e-12],
        [65.0, 25.0, 1.5240, 0.002120, 0.003215, 0.001428, 0.001536, 0.000953, 0.000600, 9.525464e-17, 9.525464e-12],
        [65.0, 25.0, 1.8288, 0.002892, 0.004262, 0.005242, 0.002145, 0.001348, 0.000818, 1.347748e-16, 1.347748e-11],
        [65.0, 25.0, 2.1336, 0.004167, 0.006230, 0.000482, 0.003119, 0.001813, 0.001104, 1.812995e-16, 1.812995e-11],
        [65.0, 25.0, 2.4384, 0.005407, 0.007804, 0.001008, 0.003839, 0.002325, 0.001518, 2.324906e-16, 2.324906e-11],
        [65.0, 25.0, 2.7432, 0.006828, 0.009722, 0.002418, 0.004976, 0.003080, 0.002020, 3.079542e-16, 3.079542e-11],
        [65.0, 25.0, 3.0480, 0.009181, 0.013068, 0.002681, 0.006533, 0.004209, 0.002667, 4.208971e-16, 4.208971e-11],
        [65.0, 25.0, 3.3528, 0.011872, 0.017228, 0.003187, 0.008527, 0.005429, 0.003493, 5.429478e-16, 5.429478e-11],
        [65.0, 25.0, 3.6576, 0.015489, 0.022413, 0.008470, 0.010977, 0.006962, 0.004474, 6.961852e-16, 6.961852e-11],
        [65.0, 25.0, 11.2800, 1.359821, 1.927483, 0.894367, 0.945365, 0.597112, 0.385939, 5.971116e-14, 5.971116e-09]
    ]
    
    result = AniMAIRE.run_from_power_law_gaussian_distribution(
        J0=256_000.0,
        gamma=3.41,
        deltaGamma=0.22,
        sigma=np.sqrt(0.19),
        reference_pitch_angle_latitude=-17.0,
        reference_pitch_angle_longitude=148.0,
        Kp_index=3,
        date_and_time=dt.datetime(2006, 12, 13, 3, 0),
        altitudes_in_km=np.append(np.array(range(0, 13)) * 0.3048, 11.28),
        array_of_lats_and_longs=np.array([[65.0, 25.0], [-35.0, 78.0]]),
        array_of_zeniths_and_azimuths=np.array([(i, j) for i in np.linspace(0, 20, 5) for j in np.linspace(0, 360, 5)])
    ).values.tolist()
    
    assert np.allclose(np.array(result), np.array(expected_output))


# def test_run_from_spectra():
#     result = AniMAIRE.run_from_spectra(proton_rigidity_spectrum=lambda x:1,
#                         alpha_rigidity_spectrum=lambda x:1,
#                         Kp_index=6,
#                         date_and_time=dt.datetime(year=2000,month=7,day=14,hour=10,minute=45,second=0))
#     assert result is not None

@pytest.mark.skipif(
    IN_GITHUB_ACTIONS,
    reason="Skipping optional test. Set the environment variable RUN_OPTIONAL_TESTS to run this test."
)
def test_run_from_spectra_two_locations():
    expected_output_doses = [
        [-28.3, -92.7, 0.0, 1566042.081461501, 1584829.7906373749, 2533601.13864571, 20720.5264863163, 12792.83414833093, 8617.837255319431, 4.391961356198295e-09, 0.00043919613561982954],
        [-28.3, -92.7, 0.3048, 1652768.764497354, 1663408.3417408792, 2667529.4131067256, 22904.63401249724, 15000.18135749457, 10146.098892515676, 5.172910536904633e-09, 0.0005172910536904633],
        [-28.3, -92.7, 0.6096, 1761166.734366627, 1760701.7187742935, 2902173.0156528405, 27147.837825270974, 17689.081776603016, 12351.636366880417, 6.170555188977921e-09, 0.0006170555188977921],
        [-28.3, -92.7, 0.9144000000000001, 1893455.6207936448, 1896694.3942576277, 3028914.548171996, 32991.2026589976, 21619.186796688824, 15000.128252788392, 7.46742317240215e-09, 0.0007467423172402151],
        [-28.3, -92.7, 1.2192, 2044752.3331728487, 2047275.3845184562, 3297604.0537788486, 39680.43985382642, 25602.529528023144, 17984.432482241966, 8.984802432214449e-09, 0.0008984802432214448],
        [-28.3, -92.7, 1.524, 2229764.9227603814, 2222659.9530266467, 3575851.0836758986, 47527.45390256318, 31054.317168239988, 21722.537563993228, 1.0763813686127908e-08, 0.0010763813686127909],
        [-28.3, -92.7, 1.8288000000000002, 2434739.1449135775, 2434176.084599345, 4144335.9414037066, 55872.48999805648, 36694.07704404115, 25412.556646909674, 1.2762427908348287e-08, 0.0012762427908348287],
        [-28.3, -92.7, 2.1336, 2688261.494227042, 2677179.349614139, 4248460.337664364, 65271.74633428553, 41775.00290813092, 29573.407021983654, 1.515840085622805e-08, 0.001515840085622805],
        [-28.3, -92.7, 2.4384, 2954049.862132597, 2927096.0451765833, 4568578.665686205, 76998.4663409653, 48991.90097492201, 34600.83162282892, 1.73733095401318e-08, 0.0017373309540131801],
        [-28.3, -92.7, 2.7432000000000003, 3266537.604095094, 3227430.892256705, 5195220.437993458, 87415.43604384849, 56681.9896334651, 39970.26953788992, 2.0230608778251233e-08, 0.0020230608778251235],
        [-28.3, -92.7, 3.048, 3633397.802762724, 3579353.5590248853, 5619553.675262865, 99543.98352058066, 65339.95947231365, 45663.16415801928, 2.319547589815005e-08, 0.002319547589815005],
        [-28.3, -92.7, 3.3528, 4021601.341899654, 3951348.9496426503, 6407520.087713426, 114587.9084620084, 73657.36421421015, 51378.10256964643, 2.613487954757057e-08, 0.0026134879547570567],
        [-28.3, -92.7, 3.6576000000000004, 4490197.687264064, 4398554.6468676515, 7052345.841315582, 129778.9083572121, 83755.91070287413, 58827.863915179245, 3.007700018282109e-08, 0.003007700018282109],
        [-28.3, -92.7, 11.28, 30941528.227307215, 27468840.611205034, 47038128.74842055, 608385.8192952096, 388148.0776876849, 274064.99730536516, 1.3861147969062293e-07, 0.013861147969062293],
        [46.2, 187.4, 0.0, 1566060.10409431, 1584849.7920845202, 2533627.0668877373, 20720.961930582427, 12793.101010468818, 8618.020909433732, 4.392267716642405e-09, 0.00043922677166424045],
        [46.2, 187.4, 0.3048, 1652789.6555423196, 1663431.0193157578, 2667559.2151894276, 22905.16357733428, 15000.524568883622, 10146.338143189429, 5.173302864994542e-09, 0.0005173302864994542],
        [46.2, 187.4, 0.6096, 1761192.2086461897, 1760728.7828765889, 2902199.979484032, 27148.52755509905, 17689.5281540372, 12351.947223185829, 6.1710590371928255e-09, 0.0006171059037192825],
        [46.2, 187.4, 0.9144000000000001, 1893486.7964321456, 1896727.661631831, 3028948.911669133, 32992.09589864512, 21619.768217523386, 15000.532586813502, 7.468062318152483e-09, 0.0007468062318152482],
        [46.2, 187.4, 1.2192, 2044790.057542861, 2047315.1015361068, 3297639.3196073957, 39681.54754504189, 25603.26134293016, 17984.942443401942, 8.985616884022208e-09, 0.0008985616884022207],
        [46.2, 187.4, 1.524, 2229810.942494996, 2222708.419904084, 3575905.151441519, 47528.87139732357, 31055.24697103878, 21723.188170333808, 1.0764838339605193e-08, 0.0010764838339605192],
        [46.2, 187.4, 1.8288000000000002, 2434794.420850664, 2434233.690887122, 4144395.511214954, 55874.27766643497, 36695.24971324003, 25413.37074162709, 1.2763693873817167e-08, 0.0012763693873817166],
        [46.2, 187.4, 2.1336, 2688328.5265015285, 2677249.201653023, 4248522.482521396, 65273.96449768043, 41776.45864301277, 29574.41751986549, 1.515994744864106e-08, 0.0015159947448641058],
        [46.2, 187.4, 2.4384, 2954130.4364110613, 2927179.740903147, 4568659.388361115, 77001.21422185368, 48993.69551465513, 34602.07450053821, 1.7375200878327545e-08, 0.0017375200878327543],
        [46.2, 187.4, 2.7432000000000003, 3266634.2914968166, 3227530.7404290093, 5195309.339137925, 87418.82968683136, 56684.17525194906, 39971.79317178643, 2.0232891582050073e-08, 0.002023289158205007],
        [46.2, 187.4, 3.048, 3633514.051125487, 3579472.476024804, 5619651.423995117, 99548.10799109502, 65342.65985768114, 45665.04204960643, 2.319824168995884e-08, 0.0023198241689958844],
        [46.2, 187.4, 3.3528000000000002, 4021740.011020675, 3951490.1943501504, 6407653.359987574, 114592.86752829066, 73660.58915708316, 51380.34002261995, 2.6138192577750358e-08, 0.0026138192577750356],
        [46.2, 187.4, 3.6576000000000004, 4490362.470992506, 4398720.557046864, 7052483.318920739, 129784.79907288894, 83759.75718536935, 58830.542307674536, 3.008090574464045e-08, 0.003008090574464045],
        [46.2, 187.4, 11.28, 30944238.91251245, 27471081.892646827, 47040261.28586144, 608465.4167548646, 388199.8742779129, 274101.6279830611, 1.3865606870899874e-07, 0.013865606870899876]
    ]

    result = AniMAIRE.run_from_spectra(proton_rigidity_spectrum=lambda x:1,
                        alpha_rigidity_spectrum=lambda x:1,
                        Kp_index=6,
                        date_and_time=dt.datetime(year=2000,month=7,day=14,hour=10,minute=45,second=0),
                        altitudes_in_km=np.append(np.array(range(0,13)) * 0.3048,11.28),
                        array_of_lats_and_longs=[[46.2,187.4],[-28.3,-92.7]],
                        #record_full_output=True,
                        cache_asymptotic_directions=False,
                        )
    
    assert np.allclose(np.array(result.values.tolist()), np.array(expected_output_doses))

# def test_run_from_spectra_proton_only():
#     result = AniMAIRE.run_from_spectra(proton_rigidity_spectrum=lambda x:1,
#                         Kp_index=6,
#                         date_and_time=dt.datetime(year=2000,month=7,day=14,hour=10,minute=45,second=0))
#     assert result is not None

# def test_Common_spec():
#     result = AniMAIRE.run_from_power_law_gaussian_distribution(J0=256_000.0, gamma=3.41, deltaGamma=0.22, sigma=np.sqrt(0.19),
#                                             reference_pitch_angle_latitude=-17.0,reference_pitch_angle_longitude=148.0,
#                                             Kp_index=3, date_and_time=dt.datetime(2006, 12, 13, 3, 0),
#                                             altitudes_in_km=np.append(np.array(range(0,13)) * 0.3048,11.28))
#     assert result is not None

@pytest.mark.skipif(
    IN_GITHUB_ACTIONS,
    reason="Skipping optional test. Set the environment variable RUN_OPTIONAL_TESTS to run this test."
)
def test_Common_spec_max_asymp_dir():
    array_of_lats_and_longs = np.array([[65.0,25.0],[-35.0,78.0]])
    array_of_zeniths_and_azimuths = np.array([(i,j) for i in np.linspace(0,20,5) for j in np.linspace(0,360,5)])

    outputted_dose = AniMAIRE.run_from_power_law_gaussian_distribution(J0=256_000.0, gamma=3.41, deltaGamma=0.22, sigma=np.sqrt(0.19),
                                            reference_pitch_angle_latitude=-17.0,reference_pitch_angle_longitude=148.0,
                                            Kp_index=3, date_and_time=dt.datetime(2006, 12, 13, 3, 0),
                                            altitudes_in_km=np.append(np.array(range(0,13)) * 0.3048,11.28),
                                            array_of_lats_and_longs=array_of_lats_and_longs,
                                            array_of_zeniths_and_azimuths=array_of_zeniths_and_azimuths,
                                            cache_asymptotic_directions=False,)
    assert outputted_dose is not None

@pytest.mark.skipif(IN_GITHUB_ACTIONS, reason="Skipping test in GitHub Actions.")
def test_DLR_spec_no_tzinfo():
    # expected_dlr_spec = [
    #     [-28.3, -92.7, 0.0, 0.058988868823598634, 0.06080286996669734, 0.09344092993619182, 0.004531869853011256, 0.002768310853422817, 0.0019206239073194524, 3.26731705969241e-16, 3.2673170596924094e-11],
    #     [-28.3, -92.7, 0.3048, 0.06348032253799271, 0.0651336490962403, 0.09987392145246152, 0.005276616600637716, 0.0033975138199494118, 0.002356729649253225, 4.0141608835156814e-16, 4.014160883515682e-11],
    #     [-28.3, -92.7, 0.6096, 0.06962530767408609, 0.07110977194012219, 0.10641008345663887, 0.006480742649458201, 0.004224252220127024, 0.0029715737299096236, 4.988695917906835e-16, 4.988695917906835e-11],
    #     [-28.3, -92.7, 0.9144000000000001, 0.07685126882212685, 0.07833490279826147, 0.11671506485042812, 0.008140541391866922, 0.005290665368927664, 0.0037000334511939946, 6.237867068469103e-16, 6.237867068469101e-11],
    #     [-28.3, -92.7, 1.2192, 0.08544527921710764, 0.08723433764061217, 0.12857229159878877, 0.010087151785442248, 0.0065957849826050255, 0.004579691089970698, 7.755801396150202e-16, 7.755801396150202e-11],
    #     [-28.3, -92.7, 1.524, 0.09556610301769881, 0.09727093263130687, 0.1371439952258924, 0.012441988077917883, 0.008098934990302172, 0.005669393635363651, 9.520667277693957e-16, 9.520667277693957e-11],
    #     [-28.3, -92.7, 1.8288000000000002, 0.10723704504976893, 0.10896753077268706, 0.1530910695744342, 0.015146686567144341, 0.009980012035880111, 0.006921676990472123, 1.1681976333089315e-15, 1.1681976333089315e-10],
    #     [-28.3, -92.7, 2.1336, 0.1208472571456993, 0.12250055788157016, 0.16554757537900006, 0.018366236517442656, 0.011928245674245034, 0.008360253800142272, 1.400469240794348e-15, 1.400469240794348e-10],
    #     [-28.3, -92.7, 2.4384, 0.13666788662858922, 0.13806942904728953, 0.19086865407406953, 0.021903370028946094, 0.014286237406805243, 0.009969195071770154, 1.671233824831793e-15, 1.671233824831793e-10],
    #     [-28.3, -92.7, 2.7432000000000003, 0.1546351494379481, 0.15550977805502827, 0.20444645515930493, 0.025897022938217863, 0.01692827031465076, 0.011896459855279692, 1.981126523617674e-15, 1.9811265236176742e-10],
    #     [-28.3, -92.7, 3.048, 0.17593838626887068, 0.1763018192292031, 0.22348587949339338, 0.031077591993027873, 0.020170197324535517, 0.014101618102528489, 2.354375200281265e-15, 2.354375200281265e-10],
    #     [-28.3, -92.7, 3.3528000000000002, 0.1995474845150312, 0.19871933694107488, 0.25774908008277886, 0.03604072732456024, 0.023769715197039278, 0.016575324756554193, 2.7691209899848138e-15, 2.769120989984814e-10],
    #     [-28.3, -92.7, 3.6576000000000004, 0.22689307794316027, 0.22593853475009562, 0.2894654790464485, 0.04223176077123161, 0.027560159456400522, 0.01937364401629483, 3.2117282348855534e-15, 3.2117282348855533e-10],
    #     [-28.3, -92.7, 11.28, 2.3571842072916946, 2.0140180898295945, 2.630644853848645, 0.36285040904171806, 0.23613001211804185, 0.16794048103369616, 2.691748763913162e-14, 2.6917487639131617e-09],
    #     [46.2, 187.4, 0.0, 0.06671019978636156, 0.06992548238549574, 0.10354471905996884, 0.007043967133951855, 0.004316608043173917, 0.002976619700967251, 5.363467916315131e-16, 5.363467916315131e-11],
    #     [46.2, 187.4, 0.3048, 0.07284088288991165, 0.07567825016081399, 0.10827909438174309, 0.008283351439271345, 0.005360552724598643, 0.0037244297381090643, 6.681170995380951e-16, 6.681170995380952e-11],
    #     [46.2, 187.4, 0.6096, 0.08167146527309645, 0.08449937050397927, 0.11618341302969032, 0.010377069611073373, 0.006762637687298858, 0.004745008051649888, 8.44049399093005e-16, 8.44049399093005e-11],
    #     [46.2, 187.4, 0.9144000000000001, 0.09231227508105715, 0.09565693138863546, 0.12872709695413875, 0.013248537037775693, 0.008624792993379371, 0.006003462270635623, 1.0720559489489072e-15, 1.0720559489489071e-10],
    #     [46.2, 187.4, 1.2192, 0.10494485762208239, 0.10856606232462561, 0.14404071215196426, 0.01648954709104448, 0.010820965260003299, 0.007513607594123712, 1.3444729581971438e-15, 1.3444729581971438e-10],
    #     [46.2, 187.4, 1.524, 0.12044588046589635, 0.1243458363119665, 0.15865701209984695, 0.020698038390611302, 0.013512472680105388, 0.00944292084576848, 1.6796173456396709e-15, 1.6796173456396708e-10],
    #     [46.2, 187.4, 1.8288000000000002, 0.13856071200530126, 0.14273631106492435, 0.1747352650257913, 0.02559046167451603, 0.016820750907536913, 0.011675958764439961, 2.0841758637764628e-15, 2.084175863776463e-10],
    #     [46.2, 187.4, 2.1336, 0.1598753231052355, 0.16454497043137206, 0.19217773250008807, 0.03134496875496027, 0.020461140624593383, 0.014269361754313835, 2.5383793129609276e-15, 2.5383793129609276e-10],
    #     [46.2, 187.4, 2.4384, 0.184949398554177, 0.18976144752716587, 0.22501797443352736, 0.038085732128113045, 0.024810226620964042, 0.017235204105509286, 3.07376150529956e-15, 3.0737615052995595e-10],
    #     [46.2, 187.4, 2.7432000000000003, 0.21409042068518414, 0.21893183436514435, 0.24077449738687462, 0.04568440962866431, 0.029793311003672995, 0.020849667729028968, 3.694527081841085e-15, 3.694527081841084e-10],
    #     [46.2, 187.4, 3.048, 0.24878028566598537, 0.25330667482573466, 0.2762339078511764, 0.055307994505423404, 0.035958467188018095, 0.02508062572260881, 4.448732406000993e-15, 4.4487324060009926e-10],
    #     [46.2, 187.4, 3.3528000000000002, 0.28870416297205626, 0.2928445945722284, 0.3424323227214122, 0.0652533727565486, 0.04275837758249945, 0.02973062735855638, 5.2902148242008795e-15, 5.29021482420088e-10],
    #     [46.2, 187.4, 3.6576000000000004, 0.33438236973665236, 0.33720379491784713, 0.3639080352296126, 0.07693858325485527, 0.05030576500792614, 0.03518647376068323, 6.223177997820377e-15, 6.223177997820378e-10],
    #     [46.2, 187.4, 11.28, 4.596310901937148, 3.8613534445369284, 4.152791457357709, 0.85531816872186, 0.5565098591856836, 0.3941742711337946, 6.809159306290927e-14, 6.809159306290927e-09]
    # ] # old Magnetocosmic outputs (the rigidity cutoff has likely changed)

    # expected_dlr_spec = [[-28.3, -92.7, 0.0, 0.05898886882225693, 0.06080286996530553, 0.0934409299342819, 0.004531869852809247, 0.002768310853298113, 0.0019206239072310058, 3.2673170595719477e-16, 3.267317059571948e-11], 
    #  [-28.3, -92.7, 0.3048, 0.06348032253649097, 0.06513364909469807, 0.09987392145016856, 0.005276616600392598, 0.0033975138197899117, 0.0023567296491447563, 4.0141608833612485e-16, 4.0141608833612485e-11], 
    #  [-28.3, -92.7, 0.6096, 0.06962530767238671, 0.07110977193837587, 0.10641008345414496, 0.00648074264916748, 0.004224252219934444, 0.0029715737297746573, 4.988695917720656e-16, 4.988695917720656e-11], 
    #  [-28.3, -92.7, 0.9144000000000001, 0.07685126882017194, 0.07833490279625151, 0.11671506484776788, 0.008140541391490041, 0.0052906653686853955, 0.0037000334510243977, 6.237867068233372e-16, 6.237867068233372e-11], 
    #  [-28.3, -92.7, 1.2192, 0.08544527921489746, 0.08723433763837085, 0.1285722915953569, 0.010087151784993548, 0.00659578498231093, 0.004579691089763071, 7.755801395865529e-16, 7.755801395865528e-11], 
    #  [-28.3, -92.7, 1.524, 0.09556610301512829, 0.0972709326286871, 0.13714399522264517, 0.012441988077341837, 0.008098934989932851, 0.005669393635107354, 9.52066727733493e-16, 9.52066727733493e-11], 
    #  [-28.3, -92.7, 1.8288000000000002, 0.10723704504680534, 0.10896753076970786, 0.15309106957108262, 0.015146686566449893, 0.009980012035417884, 0.006921676990154177, 1.1681976332639806e-15, 1.1681976332639807e-10], 
    #  [-28.3, -92.7, 2.1336, 0.12084725714229162, 0.12250055787815564, 0.16554757537509623, 0.018366236516600236, 0.011928245673703215, 0.008360253799761096, 1.4004692407417501e-15, 1.4004692407417502e-10], 
    #  [-28.3, -92.7, 2.4384, 0.13666788662463028, 0.13806942904331584, 0.190868654069339, 0.021903370027936384, 0.014286237406146133, 0.009969195071309464, 1.6712338247676458e-15, 1.6712338247676459e-10], 
    #  [-28.3, -92.7, 2.7432000000000003, 0.1546351494333801, 0.15550977805048255, 0.20444645515406146, 0.025897022937011554, 0.016928270313868527, 0.011896459854730639, 1.9811265235414302e-15, 1.9811265235414301e-10], 
    #  [-28.3, -92.7, 3.048, 0.17593838626352537, 0.1763018192239613, 0.22348587948845677, 0.031077591991601063, 0.020170197323610053, 0.01410161810187974, 2.3543752001910726e-15, 2.3543752001910723e-10], 
    #  [-28.3, -92.7, 3.3528000000000002, 0.19954748450885162, 0.19871933693501123, 0.2577490800749763, 0.03604072732285188, 0.023769715195922348, 0.016575324755775188, 2.769120989875801e-15, 2.769120989875801e-10], 
    #  [-28.3, -92.7, 3.6576000000000004, 0.2268930779360637, 0.22593853474317493, 0.28946547903942194, 0.04223176076924209, 0.027560159455109035, 0.01937364401538183, 3.211728234759513e-15, 3.211728234759513e-10], 
    #  [-28.3, -92.7, 11.28, 2.3571842072058917, 2.014018089758763, 2.6306448537679765, 0.3628504090246461, 0.236130012106876, 0.1679404810257551, 2.691748763802891e-14, 2.691748763802891e-09], 
    #  [46.2, 187.4, 0.0, 0.06562100428237151, 0.06863305914933766, 0.10315436228502196, 0.006652428010921566, 0.004066458047908924, 0.0028076778201029, 4.989333135678741e-16, 4.989333135678741e-11], 
    #  [46.2, 187.4, 0.3048, 0.07149379247759104, 0.07411813233075477, 0.1073258839966287, 0.007794870129675465, 0.005046516595757374, 0.003506958758167475, 6.212592295026288e-16, 6.212592295026289e-11], 
    #  [46.2, 187.4, 0.6096, 0.07988637242246752, 0.08245160985744918, 0.11500425774570551, 0.009753942347525949, 0.006358772332633404, 0.0044628823613436595, 7.833999805592447e-16, 7.833999805592446e-11], 
    #  [46.2, 187.4, 0.9144000000000001, 0.08998315411971358, 0.0929536471790991, 0.12767198143278505, 0.012409773227606676, 0.008072505308214323, 0.00563168862261608, 9.914549339537853e-16, 9.914549339537855e-11], 
    #  [46.2, 187.4, 1.2192, 0.10194453945419119, 0.10512468187535673, 0.14126943807546877, 0.015425285748952555, 0.010126128331178945, 0.007036546175647816, 1.243056735872584e-15, 1.243056735872584e-10], 
    #  [46.2, 187.4, 1.524, 0.11646238793257213, 0.11986191892487848, 0.15643389940473046, 0.019308147011239837, 0.012614107914580074, 0.008814573060617767, 1.5478164826907886e-15, 1.5478164826907888e-10], 
    #  [46.2, 187.4, 1.8288000000000002, 0.1335345350947682, 0.13710224178126157, 0.17227019051490783, 0.02385282554815869, 0.01570638705915842, 0.010890342764891568, 1.9197414385223563e-15, 1.919741438522356e-10], 
    #  [46.2, 187.4, 2.1336, 0.1534758488241621, 0.15747640505789962, 0.18920044279563075, 0.02914473640555783, 0.019028796253327266, 0.01326905180235137, 2.33042283411325e-15, 2.3304228341132503e-10], 
    #  [46.2, 187.4, 2.4384, 0.17693881678856524, 0.18094928514579145, 0.22161762041656408, 0.03533959273117773, 0.023019587698570272, 0.016016647346113033, 2.813982525904122e-15, 2.8139825259041224e-10], 
    #  [46.2, 187.4, 2.7432000000000003, 0.2041821586268712, 0.20813589881181765, 0.2358725449156142, 0.04236386783689434, 0.027609610306183502, 0.019351233003967103, 3.3767628731107376e-15, 3.376762873110738e-10], 
    #  [46.2, 187.4, 3.048, 0.23651501216216994, 0.24009509089255673, 0.267858947629142, 0.05125193922047552, 0.03326823087703753, 0.02323379368537505, 4.060207279368834e-15, 4.060207279368834e-10], 
    #  [46.2, 187.4, 3.3528000000000002, 0.27348386001578195, 0.2761519309759709, 0.32311573545027855, 0.06020976879485228, 0.03947416192054794, 0.027480219995699346, 4.8156261067116424e-15, 4.815626106711643e-10], 
    #  [46.2, 187.4, 3.6576000000000004, 0.3157040846346513, 0.3173486518513747, 0.3547048103957655, 0.07086392626942997, 0.04633889363442445, 0.03242543412500367, 5.6512537404582365e-15, 5.651253740458237e-10], 
    #  [46.2, 187.4, 11.28, 4.155509750727457, 3.4963962816252314, 3.8795587882698954, 0.7592098154994392, 0.49404486763441363, 0.35012611980767233, 5.943284592352771e-14, 5.943284592352771e-09]]
        
    expected_dlr_spec = [
        [-28.3, -92.7, 0.0, 0.05898886882225693, 0.06080286996530553, 0.0934409299342819, 0.004531869852809247, 0.002768310853298113, 0.0019206239072310058, 3.2673170595719477e-16, 3.267317059571948e-11], 
        [-28.3, -92.7, 0.3048, 0.06348032253649097, 0.06513364909469807, 0.09987392145016856, 0.005276616600392598, 0.0033975138197899117, 0.0023567296491447563, 4.0141608833612485e-16, 4.0141608833612485e-11], 
        [-28.3, -92.7, 0.6096, 0.06962530767238671, 0.07110977193837587, 0.10641008345414496, 0.00648074264916748, 0.004224252219934444, 0.0029715737297746573, 4.988695917720656e-16, 4.988695917720656e-11], 
        [-28.3, -92.7, 0.9144000000000001, 0.07685126882017194, 0.07833490279625151, 0.11671506484776788, 0.008140541391490041, 0.0052906653686853955, 0.0037000334510243977, 6.237867068233372e-16, 6.237867068233372e-11], 
        [-28.3, -92.7, 1.2192, 0.08544527921489746, 0.08723433763837085, 0.1285722915953569, 0.010087151784993548, 0.00659578498231093, 0.004579691089763071, 7.755801395865529e-16, 7.755801395865528e-11], 
        [-28.3, -92.7, 1.524, 0.09556610301512829, 0.0972709326286871, 0.13714399522264517, 0.012441988077341837, 0.008098934989932851, 0.005669393635107354, 9.52066727733493e-16, 9.52066727733493e-11], 
        [-28.3, -92.7, 1.8288000000000002, 0.10723704504680534, 0.10896753076970786, 0.15309106957108262, 0.015146686566449893, 0.009980012035417884, 0.006921676990154177, 1.1681976332639806e-15, 1.1681976332639807e-10], 
        [-28.3, -92.7, 2.1336, 0.12084725714229162, 0.12250055787815564, 0.16554757537509623, 0.018366236516600236, 0.011928245673703215, 0.008360253799761096, 1.4004692407417501e-15, 1.4004692407417502e-10], 
        [-28.3, -92.7, 2.4384, 0.13666788662463028, 0.13806942904331584, 0.190868654069339, 0.021903370027936384, 0.014286237406146133, 0.009969195071309464, 1.6712338247676458e-15, 1.6712338247676459e-10], 
        [-28.3, -92.7, 2.7432000000000003, 0.1546351494333801, 0.15550977805048255, 0.20444645515406146, 0.025897022937011554, 0.016928270313868527, 0.011896459854730639, 1.9811265235414302e-15, 1.9811265235414301e-10], 
        [-28.3, -92.7, 3.048, 0.17593838626352537, 0.1763018192239613, 0.22348587948845677, 0.031077591991601063, 0.020170197323610053, 0.01410161810187974, 2.3543752001910726e-15, 2.3543752001910723e-10], 
        [-28.3, -92.7, 3.3528000000000002, 0.19954748450885162, 0.19871933693501123, 0.2577490800749763, 0.03604072732285188, 0.023769715195922348, 0.016575324755775188, 2.769120989875801e-15, 2.769120989875801e-10], 
        [-28.3, -92.7, 3.6576000000000004, 0.2268930779360637, 0.22593853474317493, 0.28946547903942194, 0.04223176076924209, 0.027560159455109035, 0.01937364401538183, 3.211728234759513e-15, 3.211728234759513e-10], 
        [-28.3, -92.7, 11.28, 2.3571842072058917, 2.014018089758763, 2.6306448537679765, 0.3628504090246461, 0.236130012106876, 0.1679404810257551, 2.691748763802891e-14, 2.691748763802891e-09], 
        [46.2, 187.4, 0.0, 0.06596362834395289, 0.06903221618107996, 0.10335308424073916, 0.006652428010921566, 0.004066458047908924, 0.0028076778201029, 5.096403154922922e-16, 5.096403154922922e-11], 
        [46.2, 187.4, 0.3048, 0.0719136097402467, 0.07460112947036605, 0.10791125720584048, 0.007794870129675465, 0.005046516595757374, 0.003506958758167475, 6.3460512194934675e-16, 6.346051219493468e-11], 
        [46.2, 187.4, 0.6096, 0.08044073815410618, 0.08307614499689972, 0.11566250709281566, 0.009753942347525949, 0.006358772332633404, 0.0044628823613436595, 8.008984766323289e-16, 8.00898476632329e-11], 
        [46.2, 187.4, 0.9144000000000001, 0.09069550380614742, 0.09376645424038861, 0.12825129019610684, 0.012409773227606676, 0.008072505308214323, 0.00563168862261608, 1.0133657426919146e-15, 1.0133657426919146e-10], 
        [46.2, 187.4, 1.2192, 0.1028565361813085, 0.10614105902283481, 0.1420466293655569, 0.015425285748952555, 0.010126128331178945, 0.007036546175647816, 1.2706328334689614e-15, 1.2706328334689614e-10], 
        [46.2, 187.4, 1.524, 0.11765259539769353, 0.12116519233032173, 0.15725150320288211, 0.019308147011239837, 0.012614107914580074, 0.008814573060617767, 1.5840558296842512e-15, 1.5840558296842513e-10], 
        [46.2, 187.4, 1.8288000000000002, 0.13503834636345505, 0.13874029315727598, 0.17342510770168634, 0.02385282554815869, 0.01570638705915842, 0.010890342764891568, 1.965509160668397e-15, 1.9655091606683968e-10], 
        [46.2, 187.4, 2.1336, 0.1553398950311956, 0.1595059386866769, 0.1905127957387059, 0.02914473640555783, 0.019028796253327266, 0.01326905180235137, 2.3863150972790205e-15, 2.386315097279021e-10], 
        [46.2, 187.4, 2.4384, 0.17923302750491416, 0.1833997324342215, 0.22312694793264237, 0.03533959273117773, 0.023019587698570272, 0.016016647346113033, 2.8836859649922385e-15, 2.8836859649922387e-10], 
        [46.2, 187.4, 2.7432000000000003, 0.20703347606735145, 0.21116332501995072, 0.2375569533271606, 0.04236386783689434, 0.027609610306183502, 0.019351233003967103, 3.4625970530181053e-15, 3.4625970530181053e-10], 
        [46.2, 187.4, 3.048, 0.2400395858836576, 0.2438420276300107, 0.2707270536486397, 0.05125193922047552, 0.03326823087703753, 0.02323379368537505, 4.163405646717146e-15, 4.1634056467171457e-10], 
        [46.2, 187.4, 3.3528000000000002, 0.277788931349552, 0.28076296559673314, 0.3262408095159623, 0.06020976879485228, 0.03947416192054794, 0.027480219995699346, 4.941852237238839e-15, 4.941852237238839e-10], 
        [46.2, 187.4, 3.6576000000000004, 0.3209287589497058, 0.32284262867883207, 0.3575552712760918, 0.07086392626942997, 0.04633889363442445, 0.03242543412500367, 5.8025839359775e-15, 5.802583935977501e-10], 
        [46.2, 187.4, 11.28, 4.264172971857992, 3.5867119842580832, 3.950242132174134, 0.7592098154994392, 0.49404486763441363, 0.35012611980767233, 6.15160002179425e-14, 6.1516000217942505e-09]
    ]

    result = AniMAIRE.run_from_DLR_cosmic_ray_model(
        OULU_count_rate_in_seconds=106.0,
        Kp_index=3,
        date_and_time=dt.datetime(2006, 12, 13, 3, 0, tzinfo=dt.timezone.utc),
        altitudes_in_km=np.append(np.array(range(0, 13)) * 0.3048, 11.28),
        array_of_lats_and_longs=[[46.2, 187.4], [-28.3, -92.7]],
        cache_asymptotic_directions=False,
    ).values.tolist()
    
    assert np.allclose(np.array(result), np.array(expected_dlr_spec))

@pytest.mark.skipif(IN_GITHUB_ACTIONS, reason="Skipping test in GitHub Actions.")
def test_DLR_spec():
    # expected_dlr_spec = [
    #     [-28.3, -92.7, 0.0, 0.058988868823598634, 0.06080286996669734, 0.09344092993619182, 0.004531869853011256, 0.002768310853422817, 0.0019206239073194524, 3.26731705969241e-16, 3.2673170596924094e-11],
    #     [-28.3, -92.7, 0.3048, 0.06348032253799271, 0.0651336490962403, 0.09987392145246152, 0.005276616600637716, 0.0033975138199494118, 0.002356729649253225, 4.0141608835156814e-16, 4.014160883515682e-11],
    #     [-28.3, -92.7, 0.6096, 0.06962530767408609, 0.07110977194012219, 0.10641008345663887, 0.006480742649458201, 0.004224252220127024, 0.0029715737299096236, 4.988695917906835e-16, 4.988695917906835e-11],
    #     [-28.3, -92.7, 0.9144000000000001, 0.07685126882212685, 0.07833490279826147, 0.11671506485042812, 0.008140541391866922, 0.005290665368927664, 0.0037000334511939946, 6.237867068469103e-16, 6.237867068469101e-11],
    #     [-28.3, -92.7, 1.2192, 0.08544527921710764, 0.08723433764061217, 0.12857229159878877, 0.010087151785442248, 0.0065957849826050255, 0.004579691089970698, 7.755801396150202e-16, 7.755801396150202e-11],
    #     [-28.3, -92.7, 1.524, 0.09556610301769881, 0.09727093263130687, 0.1371439952258924, 0.012441988077917883, 0.008098934990302172, 0.005669393635363651, 9.520667277693957e-16, 9.520667277693957e-11],
    #     [-28.3, -92.7, 1.8288000000000002, 0.10723704504976893, 0.10896753077268706, 0.1530910695744342, 0.015146686567144341, 0.009980012035880111, 0.006921676990472123, 1.1681976333089315e-15, 1.1681976333089315e-10],
    #     [-28.3, -92.7, 2.1336, 0.1208472571456993, 0.12250055788157016, 0.16554757537900006, 0.018366236517442656, 0.011928245674245034, 0.008360253800142272, 1.400469240794348e-15, 1.400469240794348e-10],
    #     [-28.3, -92.7, 2.4384, 0.13666788662858922, 0.13806942904728953, 0.19086865407406953, 0.021903370028946094, 0.014286237406805243, 0.009969195071770154, 1.671233824831793e-15, 1.671233824831793e-10],
    #     [-28.3, -92.7, 2.7432000000000003, 0.1546351494379481, 0.15550977805502827, 0.20444645515930493, 0.025897022938217863, 0.01692827031465076, 0.011896459855279692, 1.981126523617674e-15, 1.9811265236176742e-10],
    #     [-28.3, -92.7, 3.048, 0.17593838626887068, 0.1763018192292031, 0.22348587949339338, 0.031077591993027873, 0.020170197324535517, 0.014101618102528489, 2.354375200281265e-15, 2.354375200281265e-10],
    #     [-28.3, -92.7, 3.3528000000000002, 0.1995474845150312, 0.19871933694107488, 0.25774908008277886, 0.03604072732456024, 0.023769715197039278, 0.016575324756554193, 2.7691209899848138e-15, 2.769120989984814e-10],
    #     [-28.3, -92.7, 3.6576000000000004, 0.22689307794316027, 0.22593853475009562, 0.2894654790464485, 0.04223176077123161, 0.027560159456400522, 0.01937364401629483, 3.2117282348855534e-15, 3.2117282348855533e-10],
    #     [-28.3, -92.7, 11.28, 2.3571842072916946, 2.0140180898295945, 2.630644853848645, 0.36285040904171806, 0.23613001211804185, 0.16794048103369616, 2.691748763913162e-14, 2.6917487639131617e-09],
    #     [46.2, 187.4, 0.0, 0.06671019978636156, 0.06992548238549574, 0.10354471905996884, 0.007043967133951855, 0.004316608043173917, 0.002976619700967251, 5.363467916315131e-16, 5.363467916315131e-11],
    #     [46.2, 187.4, 0.3048, 0.07284088288991165, 0.07567825016081399, 0.10827909438174309, 0.008283351439271345, 0.005360552724598643, 0.0037244297381090643, 6.681170995380951e-16, 6.681170995380952e-11],
    #     [46.2, 187.4, 0.6096, 0.08167146527309645, 0.08449937050397927, 0.11618341302969032, 0.010377069611073373, 0.006762637687298858, 0.004745008051649888, 8.44049399093005e-16, 8.44049399093005e-11],
    #     [46.2, 187.4, 0.9144000000000001, 0.09231227508105715, 0.09565693138863546, 0.12872709695413875, 0.013248537037775693, 0.008624792993379371, 0.006003462270635623, 1.0720559489489072e-15, 1.0720559489489071e-10],
    #     [46.2, 187.4, 1.2192, 0.10494485762208239, 0.10856606232462561, 0.14404071215196426, 0.01648954709104448, 0.010820965260003299, 0.007513607594123712, 1.3444729581971438e-15, 1.3444729581971438e-10],
    #     [46.2, 187.4, 1.524, 0.12044588046589635, 0.1243458363119665, 0.15865701209984695, 0.020698038390611302, 0.013512472680105388, 0.00944292084576848, 1.6796173456396709e-15, 1.6796173456396708e-10],
    #     [46.2, 187.4, 1.8288000000000002, 0.13856071200530126, 0.14273631106492435, 0.1747352650257913, 0.02559046167451603, 0.016820750907536913, 0.011675958764439961, 2.0841758637764628e-15, 2.084175863776463e-10],
    #     [46.2, 187.4, 2.1336, 0.1598753231052355, 0.16454497043137206, 0.19217773250008807, 0.03134496875496027, 0.020461140624593383, 0.014269361754313835, 2.5383793129609276e-15, 2.5383793129609276e-10],
    #     [46.2, 187.4, 2.4384, 0.184949398554177, 0.18976144752716587, 0.22501797443352736, 0.038085732128113045, 0.024810226620964042, 0.017235204105509286, 3.07376150529956e-15, 3.0737615052995595e-10],
    #     [46.2, 187.4, 2.7432000000000003, 0.21409042068518414, 0.21893183436514435, 0.24077449738687462, 0.04568440962866431, 0.029793311003672995, 0.020849667729028968, 3.694527081841085e-15, 3.694527081841084e-10],
    #     [46.2, 187.4, 3.048, 0.24878028566598537, 0.25330667482573466, 0.2762339078511764, 0.055307994505423404, 0.035958467188018095, 0.02508062572260881, 4.448732406000993e-15, 4.4487324060009926e-10],
    #     [46.2, 187.4, 3.3528000000000002, 0.28870416297205626, 0.2928445945722284, 0.3424323227214122, 0.0652533727565486, 0.04275837758249945, 0.02973062735855638, 5.2902148242008795e-15, 5.29021482420088e-10],
    #     [46.2, 187.4, 3.6576000000000004, 0.33438236973665236, 0.33720379491784713, 0.3639080352296126, 0.07693858325485527, 0.05030576500792614, 0.03518647376068323, 6.223177997820377e-15, 6.223177997820378e-10],
    #     [46.2, 187.4, 11.28, 4.596310901937148, 3.8613534445369284, 4.152791457357709, 0.85531816872186, 0.5565098591856836, 0.3941742711337946, 6.809159306290927e-14, 6.809159306290927e-09]
    # ] # old Magnetocosmic outputs (the rigidity cutoff has likely changed)

    # expected_dlr_spec = [[-28.3, -92.7, 0.0, 0.05898886882225693, 0.06080286996530553, 0.0934409299342819, 0.004531869852809247, 0.002768310853298113, 0.0019206239072310058, 3.2673170595719477e-16, 3.267317059571948e-11], 
    #  [-28.3, -92.7, 0.3048, 0.06348032253649097, 0.06513364909469807, 0.09987392145016856, 0.005276616600392598, 0.0033975138197899117, 0.0023567296491447563, 4.0141608833612485e-16, 4.0141608833612485e-11], 
    #  [-28.3, -92.7, 0.6096, 0.06962530767238671, 0.07110977193837587, 0.10641008345414496, 0.00648074264916748, 0.004224252219934444, 0.0029715737297746573, 4.988695917720656e-16, 4.988695917720656e-11], 
    #  [-28.3, -92.7, 0.9144000000000001, 0.07685126882017194, 0.07833490279625151, 0.11671506484776788, 0.008140541391490041, 0.0052906653686853955, 0.0037000334510243977, 6.237867068233372e-16, 6.237867068233372e-11], 
    #  [-28.3, -92.7, 1.2192, 0.08544527921489746, 0.08723433763837085, 0.1285722915953569, 0.010087151784993548, 0.00659578498231093, 0.004579691089763071, 7.755801395865529e-16, 7.755801395865528e-11], 
    #  [-28.3, -92.7, 1.524, 0.09556610301512829, 0.0972709326286871, 0.13714399522264517, 0.012441988077341837, 0.008098934989932851, 0.005669393635107354, 9.52066727733493e-16, 9.52066727733493e-11], 
    #  [-28.3, -92.7, 1.8288000000000002, 0.10723704504680534, 0.10896753076970786, 0.15309106957108262, 0.015146686566449893, 0.009980012035417884, 0.006921676990154177, 1.1681976332639806e-15, 1.1681976332639807e-10], 
    #  [-28.3, -92.7, 2.1336, 0.12084725714229162, 0.12250055787815564, 0.16554757537509623, 0.018366236516600236, 0.011928245673703215, 0.008360253799761096, 1.4004692407417501e-15, 1.4004692407417502e-10], 
    #  [-28.3, -92.7, 2.4384, 0.13666788662463028, 0.13806942904331584, 0.190868654069339, 0.021903370027936384, 0.014286237406146133, 0.009969195071309464, 1.6712338247676458e-15, 1.6712338247676459e-10], 
    #  [-28.3, -92.7, 2.7432000000000003, 0.1546351494333801, 0.15550977805048255, 0.20444645515406146, 0.025897022937011554, 0.016928270313868527, 0.011896459854730639, 1.9811265235414302e-15, 1.9811265235414301e-10], 
    #  [-28.3, -92.7, 3.048, 0.17593838626352537, 0.1763018192239613, 0.22348587948845677, 0.031077591991601063, 0.020170197323610053, 0.01410161810187974, 2.3543752001910726e-15, 2.3543752001910723e-10], 
    #  [-28.3, -92.7, 3.3528000000000002, 0.19954748450885162, 0.19871933693501123, 0.2577490800749763, 0.03604072732285188, 0.023769715195922348, 0.016575324755775188, 2.769120989875801e-15, 2.769120989875801e-10], 
    #  [-28.3, -92.7, 3.6576000000000004, 0.2268930779360637, 0.22593853474317493, 0.28946547903942194, 0.04223176076924209, 0.027560159455109035, 0.01937364401538183, 3.211728234759513e-15, 3.211728234759513e-10], 
    #  [-28.3, -92.7, 11.28, 2.3571842072058917, 2.014018089758763, 2.6306448537679765, 0.3628504090246461, 0.236130012106876, 0.1679404810257551, 2.691748763802891e-14, 2.691748763802891e-09], 
    #  [46.2, 187.4, 0.0, 0.06562100428237151, 0.06863305914933766, 0.10315436228502196, 0.006652428010921566, 0.004066458047908924, 0.0028076778201029, 4.989333135678741e-16, 4.989333135678741e-11], 
    #  [46.2, 187.4, 0.3048, 0.07149379247759104, 0.07411813233075477, 0.1073258839966287, 0.007794870129675465, 0.005046516595757374, 0.003506958758167475, 6.212592295026288e-16, 6.212592295026289e-11], 
    #  [46.2, 187.4, 0.6096, 0.07988637242246752, 0.08245160985744918, 0.11500425774570551, 0.009753942347525949, 0.006358772332633404, 0.0044628823613436595, 7.833999805592447e-16, 7.833999805592446e-11], 
    #  [46.2, 187.4, 0.9144000000000001, 0.08998315411971358, 0.0929536471790991, 0.12767198143278505, 0.012409773227606676, 0.008072505308214323, 0.00563168862261608, 9.914549339537853e-16, 9.914549339537855e-11], 
    #  [46.2, 187.4, 1.2192, 0.10194453945419119, 0.10512468187535673, 0.14126943807546877, 0.015425285748952555, 0.010126128331178945, 0.007036546175647816, 1.243056735872584e-15, 1.243056735872584e-10], 
    #  [46.2, 187.4, 1.524, 0.11646238793257213, 0.11986191892487848, 0.15643389940473046, 0.019308147011239837, 0.012614107914580074, 0.008814573060617767, 1.5478164826907886e-15, 1.5478164826907888e-10], 
    #  [46.2, 187.4, 1.8288000000000002, 0.1335345350947682, 0.13710224178126157, 0.17227019051490783, 0.02385282554815869, 0.01570638705915842, 0.010890342764891568, 1.9197414385223563e-15, 1.919741438522356e-10], 
    #  [46.2, 187.4, 2.1336, 0.1534758488241621, 0.15747640505789962, 0.18920044279563075, 0.02914473640555783, 0.019028796253327266, 0.01326905180235137, 2.33042283411325e-15, 2.3304228341132503e-10], 
    #  [46.2, 187.4, 2.4384, 0.17693881678856524, 0.18094928514579145, 0.22161762041656408, 0.03533959273117773, 0.023019587698570272, 0.016016647346113033, 2.813982525904122e-15, 2.8139825259041224e-10], 
    #  [46.2, 187.4, 2.7432000000000003, 0.2041821586268712, 0.20813589881181765, 0.2358725449156142, 0.04236386783689434, 0.027609610306183502, 0.019351233003967103, 3.3767628731107376e-15, 3.376762873110738e-10], 
    #  [46.2, 187.4, 3.048, 0.23651501216216994, 0.24009509089255673, 0.267858947629142, 0.05125193922047552, 0.03326823087703753, 0.02323379368537505, 4.060207279368834e-15, 4.060207279368834e-10], 
    #  [46.2, 187.4, 3.3528000000000002, 0.27348386001578195, 0.2761519309759709, 0.32311573545027855, 0.06020976879485228, 0.03947416192054794, 0.027480219995699346, 4.8156261067116424e-15, 4.815626106711643e-10], 
    #  [46.2, 187.4, 3.6576000000000004, 0.3157040846346513, 0.3173486518513747, 0.3547048103957655, 0.07086392626942997, 0.04633889363442445, 0.03242543412500367, 5.6512537404582365e-15, 5.651253740458237e-10], 
    #  [46.2, 187.4, 11.28, 4.155509750727457, 3.4963962816252314, 3.8795587882698954, 0.7592098154994392, 0.49404486763441363, 0.35012611980767233, 5.943284592352771e-14, 5.943284592352771e-09]]
    
    expected_dlr_spec = [
        [-28.3, -92.7, 0.0, 0.05898886882225693, 0.06080286996530553, 0.0934409299342819, 0.004531869852809247, 0.002768310853298113, 0.0019206239072310058, 3.2673170595719477e-16, 3.267317059571948e-11], 
        [-28.3, -92.7, 0.3048, 0.06348032253649097, 0.06513364909469807, 0.09987392145016856, 0.005276616600392598, 0.0033975138197899117, 0.0023567296491447563, 4.0141608833612485e-16, 4.0141608833612485e-11], 
        [-28.3, -92.7, 0.6096, 0.06962530767238671, 0.07110977193837587, 0.10641008345414496, 0.00648074264916748, 0.004224252219934444, 0.0029715737297746573, 4.988695917720656e-16, 4.988695917720656e-11], 
        [-28.3, -92.7, 0.9144000000000001, 0.07685126882017194, 0.07833490279625151, 0.11671506484776788, 0.008140541391490041, 0.0052906653686853955, 0.0037000334510243977, 6.237867068233372e-16, 6.237867068233372e-11], 
        [-28.3, -92.7, 1.2192, 0.08544527921489746, 0.08723433763837085, 0.1285722915953569, 0.010087151784993548, 0.00659578498231093, 0.004579691089763071, 7.755801395865529e-16, 7.755801395865528e-11], 
        [-28.3, -92.7, 1.524, 0.09556610301512829, 0.0972709326286871, 0.13714399522264517, 0.012441988077341837, 0.008098934989932851, 0.005669393635107354, 9.52066727733493e-16, 9.52066727733493e-11], 
        [-28.3, -92.7, 1.8288000000000002, 0.10723704504680534, 0.10896753076970786, 0.15309106957108262, 0.015146686566449893, 0.009980012035417884, 0.006921676990154177, 1.1681976332639806e-15, 1.1681976332639807e-10], 
        [-28.3, -92.7, 2.1336, 0.12084725714229162, 0.12250055787815564, 0.16554757537509623, 0.018366236516600236, 0.011928245673703215, 0.008360253799761096, 1.4004692407417501e-15, 1.4004692407417502e-10], 
        [-28.3, -92.7, 2.4384, 0.13666788662463028, 0.13806942904331584, 0.190868654069339, 0.021903370027936384, 0.014286237406146133, 0.009969195071309464, 1.6712338247676458e-15, 1.6712338247676459e-10], 
        [-28.3, -92.7, 2.7432000000000003, 0.1546351494333801, 0.15550977805048255, 0.20444645515406146, 0.025897022937011554, 0.016928270313868527, 0.011896459854730639, 1.9811265235414302e-15, 1.9811265235414301e-10], 
        [-28.3, -92.7, 3.048, 0.17593838626352537, 0.1763018192239613, 0.22348587948845677, 0.031077591991601063, 0.020170197323610053, 0.01410161810187974, 2.3543752001910726e-15, 2.3543752001910723e-10], 
        [-28.3, -92.7, 3.3528000000000002, 0.19954748450885162, 0.19871933693501123, 0.2577490800749763, 0.03604072732285188, 0.023769715195922348, 0.016575324755775188, 2.769120989875801e-15, 2.769120989875801e-10], 
        [-28.3, -92.7, 3.6576000000000004, 0.2268930779360637, 0.22593853474317493, 0.28946547903942194, 0.04223176076924209, 0.027560159455109035, 0.01937364401538183, 3.211728234759513e-15, 3.211728234759513e-10], 
        [-28.3, -92.7, 11.28, 2.3571842072058917, 2.014018089758763, 2.6306448537679765, 0.3628504090246461, 0.236130012106876, 0.1679404810257551, 2.691748763802891e-14, 2.691748763802891e-09], 
        [46.2, 187.4, 0.0, 0.06596362834395289, 0.06903221618107996, 0.10335308424073916, 0.006652428010921566, 0.004066458047908924, 0.0028076778201029, 5.096403154922922e-16, 5.096403154922922e-11], 
        [46.2, 187.4, 0.3048, 0.0719136097402467, 0.07460112947036605, 0.10791125720584048, 0.007794870129675465, 0.005046516595757374, 0.003506958758167475, 6.3460512194934675e-16, 6.346051219493468e-11], 
        [46.2, 187.4, 0.6096, 0.08044073815410618, 0.08307614499689972, 0.11566250709281566, 0.009753942347525949, 0.006358772332633404, 0.0044628823613436595, 8.008984766323289e-16, 8.00898476632329e-11], 
        [46.2, 187.4, 0.9144000000000001, 0.09069550380614742, 0.09376645424038861, 0.12825129019610684, 0.012409773227606676, 0.008072505308214323, 0.00563168862261608, 1.0133657426919146e-15, 1.0133657426919146e-10], 
        [46.2, 187.4, 1.2192, 0.1028565361813085, 0.10614105902283481, 0.1420466293655569, 0.015425285748952555, 0.010126128331178945, 0.007036546175647816, 1.2706328334689614e-15, 1.2706328334689614e-10], 
        [46.2, 187.4, 1.524, 0.11765259539769353, 0.12116519233032173, 0.15725150320288211, 0.019308147011239837, 0.012614107914580074, 0.008814573060617767, 1.5840558296842512e-15, 1.5840558296842513e-10], 
        [46.2, 187.4, 1.8288000000000002, 0.13503834636345505, 0.13874029315727598, 0.17342510770168634, 0.02385282554815869, 0.01570638705915842, 0.010890342764891568, 1.965509160668397e-15, 1.9655091606683968e-10], 
        [46.2, 187.4, 2.1336, 0.1553398950311956, 0.1595059386866769, 0.1905127957387059, 0.02914473640555783, 0.019028796253327266, 0.01326905180235137, 2.3863150972790205e-15, 2.386315097279021e-10], 
        [46.2, 187.4, 2.4384, 0.17923302750491416, 0.1833997324342215, 0.22312694793264237, 0.03533959273117773, 0.023019587698570272, 0.016016647346113033, 2.8836859649922385e-15, 2.8836859649922387e-10], 
        [46.2, 187.4, 2.7432000000000003, 0.20703347606735145, 0.21116332501995072, 0.2375569533271606, 0.04236386783689434, 0.027609610306183502, 0.019351233003967103, 3.4625970530181053e-15, 3.4625970530181053e-10], 
        [46.2, 187.4, 3.048, 0.2400395858836576, 0.2438420276300107, 0.2707270536486397, 0.05125193922047552, 0.03326823087703753, 0.02323379368537505, 4.163405646717146e-15, 4.1634056467171457e-10], 
        [46.2, 187.4, 3.3528000000000002, 0.277788931349552, 0.28076296559673314, 0.3262408095159623, 0.06020976879485228, 0.03947416192054794, 0.027480219995699346, 4.941852237238839e-15, 4.941852237238839e-10], 
        [46.2, 187.4, 3.6576000000000004, 0.3209287589497058, 0.32284262867883207, 0.3575552712760918, 0.07086392626942997, 0.04633889363442445, 0.03242543412500367, 5.8025839359775e-15, 5.802583935977501e-10], 
        [46.2, 187.4, 11.28, 4.264172971857992, 3.5867119842580832, 3.950242132174134, 0.7592098154994392, 0.49404486763441363, 0.35012611980767233, 6.15160002179425e-14, 6.1516000217942505e-09]
    ]

    result = AniMAIRE.run_from_DLR_cosmic_ray_model(
        OULU_count_rate_in_seconds=106.0,
        Kp_index=3,
        date_and_time=dt.datetime(2006, 12, 13, 3, 0, tzinfo=dt.timezone.utc),
        altitudes_in_km=np.append(np.array(range(0, 13)) * 0.3048, 11.28),
        array_of_lats_and_longs=[[46.2, 187.4], [-28.3, -92.7]],
        cache_asymptotic_directions=False,
    ).values.tolist()
    
    assert np.allclose(np.array(result), np.array(expected_dlr_spec))

@pytest.mark.skipif(IN_GITHUB_ACTIONS, reason="Skipping test in GitHub Actions.")
def test_isotropic_dose_rates():
    test_isotropic_dose_rates = AniMAIRE.run_from_spectra(
        proton_rigidity_spectrum=lambda x:2.56*(x**-3.41),
        Kp_index=3,
        date_and_time=dt.datetime(2006, 12, 13, 3, 0),
        array_of_lats_and_longs=[[65.0,25.0]])
    print(test_isotropic_dose_rates)

#@pytest.mark.skipif(IN_GITHUB_ACTIONS, reason="Skipping test in GitHub Actions.")
# def test_anisotropic_dose_rates():
#     sigma = np.sqrt(0.19)
#     pitch_angle_reference_latitude = -17.0
#     pitch_angle_reference_longitude = 148.0
#     test_pitch_angle_dist_function = lambda pitch_angle,rigidity:np.exp(-(pitch_angle**2)/(sigma**2))

#     test_anisotropic_dose_rates = AniMAIRE.run_from_spectra(
#         proton_rigidity_spectrum=lambda x:2.56*(x**-3.41),
#         proton_pitch_angle_distribution=test_pitch_angle_dist_function,
#         reference_pitch_angle_latitude=pitch_angle_reference_latitude,
#         reference_pitch_angle_longitude=pitch_angle_reference_longitude,
#         Kp_index=3,
#         date_and_time=dt.datetime(2006, 12, 13, 3, 0))

@pytest.mark.skipif(
    IN_GITHUB_ACTIONS,
    reason="Skipping optional test. Set the environment variable RUN_OPTIONAL_TESTS to run this test."
)
def test_isotropic_dose_rates():
    expected_isotropic_dose_rates = [
        [65.0, 25.0, 0.0000, 0.010434, 0.012526, 0.010010, 0.004431, 0.002726, 0.001826, 2.725682e-16, 2.725682e-11],
        [65.0, 25.0, 3.0480, 0.101553, 0.117294, 0.085010, 0.051717, 0.033506, 0.022912, 3.350616e-15, 3.350616e-10],
        [65.0, 25.0, 6.0960, 0.669389, 0.736989, 0.456343, 0.324250, 0.210297, 0.144131, 2.102967e-14, 2.102967e-09],
        [65.0, 25.0, 7.6200, 1.432404, 1.525608, 0.966025, 0.658130, 0.426616, 0.292777, 4.266156e-14, 4.266156e-09],
        [65.0, 25.0, 8.5344, 2.147704, 2.220632, 1.416257, 0.950846, 0.614894, 0.422072, 6.148938e-14, 6.148938e-09],
        [65.0, 25.0, 9.4488, 3.108676, 3.124392, 2.063826, 1.319292, 0.854931, 0.586036, 8.549315e-14, 8.549315e-09],
        [65.0, 25.0, 10.3632, 4.377677, 4.263813, 2.692120, 1.767081, 1.142345, 0.782749, 1.142345e-13, 1.142345e-08],
        [65.0, 25.0, 11.2776, 5.993970, 5.643631, 3.764450, 2.292849, 1.480059, 1.010255, 1.480059e-13, 1.480059e-08],
        [65.0, 25.0, 12.1920, 7.953998, 7.262904, 5.017846, 2.881359, 1.850446, 1.263386, 1.850446e-13, 1.850446e-08],
        [65.0, 25.0, 13.1064, 10.414874, 9.115408, 6.247418, 3.514676, 2.249009, 1.532907, 2.249009e-13, 2.249009e-08],
        [65.0, 25.0, 14.0208, 13.242733, 11.101641, 7.800097, 4.184576, 2.665499, 1.810092, 2.665499e-13, 2.665499e-08],
        [65.0, 25.0, 14.9352, 16.603692, 13.430864, 9.571582, 4.865316, 3.082233, 2.086676, 3.082233e-13, 3.082233e-08],
        [65.0, 25.0, 15.8496, 20.842479, 15.942018, 11.573518, 5.568722, 3.503950, 2.361370, 3.503950e-13, 3.503950e-08],
        [65.0, 25.0, 16.7640, 25.482167, 18.658393, 13.926003, 6.254882, 3.914514, 2.628245, 3.914514e-13, 3.914514e-08],
        [65.0, 25.0, 17.6784, 31.020574, 21.767530, 16.937656, 6.902852, 4.295149, 2.869582, 4.295149e-13, 4.295149e-08],
        [65.0, 25.0, 18.5928, 37.203113, 24.734609, 19.638953, 7.495669, 4.637948, 3.081391, 4.637948e-13, 4.637948e-08]
    ]
    test_isotropic_dose_rates = AniMAIRE.run_from_spectra(
        proton_rigidity_spectrum=lambda x:2.56*(x**-3.41),
        Kp_index=3,
        date_and_time=dt.datetime(2006, 12, 13, 3, 0),
        array_of_lats_and_longs=[[65.0,25.0]])

    rounded_actual_values = [[custom_round(value) for value in sublist] for sublist in test_isotropic_dose_rates.values.tolist()]
    assert rounded_actual_values == expected_isotropic_dose_rates

# @pytest.mark.skipif(IN_GITHUB_ACTIONS, reason="Skipping test in GitHub Actions.")
# def test_isotropic_dose_rates_fast_calculation():
#     expected_isotropic_dose_rates = [
#         [65.0, 25.0, 0.0000, 0.010434, 0.012526, 0.010010, 0.004431, 0.002726, 0.001826, 2.725682e-16, 2.725682e-11],
#         [65.0, 25.0, 3.0480, 0.101553, 0.117294, 0.085010, 0.051717, 0.033506, 0.022912, 3.350616e-15, 3.350616e-10],
#         [65.0, 25.0, 6.0960, 0.669389, 0.736989, 0.456343, 0.324250, 0.210297, 0.144131, 2.102967e-14, 2.102967e-09],
#         [65.0, 25.0, 7.6200, 1.432404, 1.525608, 0.966025, 0.658130, 0.426616, 0.292777, 4.266156e-14, 4.266156e-09],
#         [65.0, 25.0, 8.5344, 2.147704, 2.220632, 1.416257, 0.950846, 0.614894, 0.422072, 6.148938e-14, 6.148938e-09],
#         [65.0, 25.0, 9.4488, 3.108676, 3.124392, 2.063826, 1.319292, 0.854931, 0.586036, 8.549315e-14, 8.549315e-09],
#         [65.0, 25.0, 10.3632, 4.377677, 4.263813, 2.692120, 1.767081, 1.142345, 0.782749, 1.142345e-13, 1.142345e-08],
#         [65.0, 25.0, 11.2776, 5.993970, 5.643631, 3.764450, 2.292849, 1.480059, 1.010255, 1.480059e-13, 1.480059e-08],
#         [65.0, 25.0, 12.1920, 7.953998, 7.262904, 5.017846, 2.881359, 1.850446, 1.263386, 1.850446e-13, 1.850446e-08],
#         [65.0, 25.0, 13.1064, 10.414874, 9.115408, 6.247418, 3.514676, 2.249009, 1.532907, 2.249009e-13, 2.249009e-08],
#         [65.0, 25.0, 14.0208, 13.242733, 11.101641, 7.800097, 4.184576, 2.665499, 1.810092, 2.665499e-13, 2.665499e-08],
#         [65.0, 25.0, 14.9352, 16.603692, 13.430864, 9.571582, 4.865316, 3.082233, 2.086676, 3.082233e-13, 3.082233e-08],
#         [65.0, 25.0, 15.8496, 20.842479, 15.942018, 11.573518, 5.568722, 3.503950, 2.361370, 3.503950e-13, 3.503950e-08],
#         [65.0, 25.0, 16.7640, 25.482167, 18.658393, 13.926003, 6.254882, 3.914514, 2.628245, 3.914514e-13, 3.914514e-08],
#         [65.0, 25.0, 17.6784, 31.020574, 21.767530, 16.937656, 6.902852, 4.295149, 2.869582, 4.295149e-13, 4.295149e-08],
#         [65.0, 25.0, 18.5928, 37.203113, 24.734609, 19.638953, 7.495669, 4.637948, 3.081391, 4.637948e-13, 4.637948e-08]
#     ]
#     test_isotropic_dose_rates = AniMAIRE.run_from_spectra(
#         proton_rigidity_spectrum=lambda x:2.56*(x**-3.41),
#         proton_pitch_angle_distribution=IsotropicPitchAngleDistribution(use_fast_calculation=True),
#         Kp_index=3,
#         date_and_time=dt.datetime(2006, 12, 13, 3, 0),
#         array_of_lats_and_longs=[[65.0,25.0]])

#     rounded_actual_values = [[custom_round(value) for value in sublist] for sublist in test_isotropic_dose_rates.values.tolist()]
#     assert rounded_actual_values == expected_isotropic_dose_rates

@pytest.mark.skipif(
    IN_GITHUB_ACTIONS,
    reason="Skipping optional test. Set the environment variable RUN_OPTIONAL_TESTS to run this test."
)
def test_anisotropic_dose_rates():
    # expected_anisotropic_dose_rates = [
    #     [-90.0, 0.0, 0.0000, 1.976895e-07, 2.027961e-07, 3.222401e-07, 1.286575e-08, 7.877480e-09, 5.401425e-09, 7.877480e-22, 7.877480e-17],
    #     [90.0, 355.0, 18.5928, 2.036052e-06, 1.275021e-06, 1.040287e-06, 3.755276e-07, 2.357292e-07, 1.614028e-07, 2.357292e-20, 2.357292e-15]
    # ] old magnetocosmics values
    # expected_anisotropic_dose_rates = [
    #  [-90.0, 0.0, 0.0, 1.970171e-07, 2.020958e-07, 3.213747e-07, 1.274567e-08, 7.803949e-09, 5.348835e-09, 7.803949e-22, 7.803949e-17],
    #  [90.0, 355.0, 18.5928, 1.346275e-06, 8.432683e-07, 6.909615e-07, 2.486821e-07, 1.566855e-07, 1.079672e-07, 1.566855e-20, 1.566855e-15]] #second oldest values, using earlier implementation of OTSO in AniMAIRE
    expected_anisotropic_dose_rates = [
     [-90.0, 0.0, 0.0, 1.959006e-07, 2.009494e-07, 3.195723e-07, 1.266314e-08, 7.753252e-09, 5.313979e-09, 7.753252e-22, 7.753252e-17], 
     [-90.0, 0.0, 18.5928, 6.333727e-06, 4.788376e-06, 5.942086e-06, 6.883936e-07, 4.435007e-07, 3.158255e-07, 4.435007e-20, 4.435007e-15], 
     [90.0, 355.0, 0.0, 4.723369e-10, 5.817603e-10, 4.11988e-10, 2.322336e-10, 1.438933e-10, 9.650105e-11, 1.438933e-23, 1.438933e-18], 
     [90.0, 355.0, 18.5928, 1.242504e-06, 7.785842e-07, 6.383651e-07, 2.296198e-07, 1.447263e-07, 9.978454e-08, 1.447263e-20, 1.447263e-15]]
    sigma = np.sqrt(0.19)
    pitch_angle_reference_latitude = -17.0
    pitch_angle_reference_longitude = 148.0
    test_pitch_angle_dist_function = lambda pitch_angle, rigidity: np.exp(-(pitch_angle**2)/(sigma**2))
    # Use only the two coordinates that correspond to the expected dose rates.
    array_of_coords = [[-90.0, 0.0], [90.0, 355.0]]
    altitudes = [0.0, 18.5928]

    test_anisotropic_dose_rates = AniMAIRE.run_from_spectra(
        proton_rigidity_spectrum=lambda x:2.56*(x**-3.41),
        proton_pitch_angle_distribution=test_pitch_angle_dist_function,
        reference_pitch_angle_latitude=pitch_angle_reference_latitude,reference_pitch_angle_longitude=pitch_angle_reference_longitude,
        Kp_index=3,
        date_and_time=dt.datetime(2006, 12, 13, 3, 0),
        array_of_lats_and_longs=array_of_coords,
        altitudes_in_km=altitudes,
        cache_asymptotic_directions=False,)

    rounded_actual_values = [[custom_round(value) for value in sublist] for sublist in test_anisotropic_dose_rates.values.tolist()]

    # assert np.allclose(rounded_actual_values[0], expected_anisotropic_dose_rates[0])
    # assert np.allclose(rounded_actual_values[-1], expected_anisotropic_dose_rates[-1])
    assert np.allclose(rounded_actual_values, expected_anisotropic_dose_rates, rtol=1e-3)

# Test running AniMAIRE using a precomputed OTSO asymptotic direction file
@pytest.mark.skipif(
    IN_GITHUB_ACTIONS,
    reason="Skipping optional test. Set the environment variable RUN_OPTIONAL_TESTS to run this test."
)
def test_run_from_OTSO_asymp_file(tmp_path):
    import os
    import pandas as pd
    
    # Create a temporary dummy OTSO asymptotic directions CSV file with minimal valid content
    dummy_csv = tmp_path / "51.5_0.0.csv"
    dummy_csv.write_text("Rigidity(GV),Filter,Latitude,Longitude,X,Y,Z\n10.0000,1,4.66634,273.283,-0.766392,-9.93945,2.07968\n9.99000,1,4.65486,273.308,-0.766085,-9.93790,2.07842")
    
    from AniMAIRE import AniMAIRE
    
    # Run AniMAIRE using the asymp_dir_file argument and a simple constant proton rigidity spectrum
    result = AniMAIRE.run_from_spectra(proton_rigidity_spectrum=lambda x: 1, asymp_dir_file=str(dummy_csv),
                                        cache_asymptotic_directions=False,)
    
    # Assert that the output is a DataFrame and that it is not empty
    assert isinstance(result, pd.DataFrame)
    assert not result.empty
    
    # Delete the dummy CSV file after the test runs
    dummy_csv.unlink()


