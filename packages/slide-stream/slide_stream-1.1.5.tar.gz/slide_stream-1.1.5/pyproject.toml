[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "slide-stream"
version = "1.1.5"
description = "An AI-powered tool to automatically create video presentations from Markdown and PowerPoint files"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "Your Name", email = "your.email@example.com" },
]
keywords = ["ai", "video", "presentation", "markdown", "cli"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Video",
    "Topic :: Text Processing :: Markup",
]
requires-python = ">=3.10"
dependencies = [
    "typer>=0.9.0",
    "rich>=13.0.0",
    "markdown>=3.5.0",
    "beautifulsoup4>=4.12.0",
    "requests>=2.31.0",
    "gtts>=2.4.0",
    "moviepy>=1.0.3",
    "pillow>=10.0.0",
    "typing-extensions>=4.8.0",
    # Optional AI providers
    "google-generativeai>=0.3.0; extra == 'gemini'",
    "openai>=1.0.0; extra == 'openai'",
    "anthropic>=0.7.0; extra == 'claude'",
    "groq>=0.4.0; extra == 'groq'",
    "python-pptx>=1.0.2",
]

[project.optional-dependencies]
# AI providers
gemini = ["google-generativeai>=0.3.0"]
openai = ["openai>=1.0.0"]
claude = ["anthropic>=0.7.0"]
groq = ["groq>=0.4.0"]
all-ai = [
    "google-generativeai>=0.3.0",
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "groq>=0.4.0",
]

# Development dependencies
dev = [
    "pytest>=7.4.0",
    "pytest-mock>=3.12.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
    "basedpyright>=1.8.0",
    "pre-commit>=3.5.0",
]

[project.scripts]
slide-stream = "slide_stream.cli:app"

[project.urls]
Homepage = "https://github.com/yourusername/slide-stream"
Repository = "https://github.com/yourusername/slide-stream"
Issues = "https://github.com/yourusername/slide-stream/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/slide_stream"]

[tool.ruff]
target-version = "py310"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "B904",  # raise from None - not critical for this CLI tool
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["E501"]

[tool.ruff.lint.isort]
known-first-party = ["slide_stream"]

[tool.basedpyright]
include = ["src", "tests"]
exclude = ["**/__pycache__"]
venvPath = "."
venv = ".venv"
pythonVersion = "3.10"
pythonPlatform = "All"
typeCheckingMode = "basic"
reportMissingImports = true
reportMissingTypeStubs = false
reportUnusedImport = true
reportUnusedClass = true
reportUnusedFunction = true
reportUnusedVariable = true
reportDuplicateImport = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=slide_stream",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["slide_stream"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[dependency-groups]
dev = [
    "basedpyright>=1.29.4",
    "build>=1.2.2.post1",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "ruff>=0.12.0",
    "twine>=6.1.0",
]
