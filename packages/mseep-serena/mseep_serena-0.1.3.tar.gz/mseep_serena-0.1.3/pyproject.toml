[build-system]
build-backend = "hatchling.build"
requires = [
    "hatchling",
]

[tool.hatch.build.targets.wheel]
packages = [
    "src/serena",
    "src/interprompt",
    "src/solidlsp",
]

[tool.black]
line-length = 140
target-version = [
    "py311",
]
exclude = "/(\n    src/solidlsp/language_servers/.*/static|src/multilspy\n)/\n"

[tool.doc8]
max-line-length = 1000

[tool.mypy]
allow_redefinition = true
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
pretty = true
show_error_codes = true
show_error_context = true
show_traceback = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = false
exclude = "^build/|^docs/"

[tool.poe.env]
PYDEVD_DISABLE_FILE_VALIDATION = "1"

[tool.poe.tasks]
test = "pytest test -vv -m \"${PYTEST_MARKERS:-not java and not rust and not isolated_process}\""
_black_check = "black --check src scripts test"
_ruff_check = "ruff check src scripts test"
_black_format = "black src scripts test"
_ruff_format = "ruff check --fix src scripts test"
lint = [
    "_black_check",
    "_ruff_check",
]
format = [
    "_ruff_format",
    "_black_format",
]
_mypy = "mypy src/serena"
type-check = [
    "_mypy",
]

[tool.ruff]
target-version = "py311"
line-length = 140
exclude = [
    "src/solidlsp/language_servers/**/static",
    "src/multilspy",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
skip-magic-trailing-comma = false
docstring-code-format = true

[tool.ruff.lint]
select = [
    "ASYNC",
    "B",
    "C4",
    "C90",
    "COM",
    "D",
    "DTZ",
    "E",
    "F",
    "FLY",
    "G",
    "I",
    "ISC",
    "PIE",
    "PLC",
    "PLE",
    "PLW",
    "RET",
    "RUF",
    "RSE",
    "SIM",
    "TID",
    "UP",
    "W",
    "YTT",
]
ignore = [
    "RUF002",
    "RUF005",
    "SIM118",
    "SIM108",
    "E501",
    "E741",
    "B008",
    "B011",
    "B028",
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D107",
    "D200",
    "D203",
    "D213",
    "D401",
    "D402",
    "DTZ005",
    "E402",
    "E501",
    "E701",
    "E731",
    "C408",
    "E203",
    "G004",
    "RET505",
    "D106",
    "D205",
    "D212",
    "PLW2901",
    "B027",
    "D404",
    "D407",
    "D408",
    "D409",
    "D400",
    "D415",
    "COM812",
    "RET503",
    "RET504",
    "UP038",
    "F403",
    "F405",
    "C401",
    "C901",
    "ASYNC230",
    "ISC003",
    "B024",
    "B007",
    "SIM102",
    "W291",
    "W293",
    "B009",
    "SIM103",
    "SIM110",
    "G001",
    "E722",
    "SIM105",
    "SIM113",
    "E712",
    "UP007",
    "TID252",
    "B904",
    "RUF012",
]
unfixable = [
    "F841",
    "F601",
    "F602",
    "B018",
]
extend-fixable = [
    "F401",
    "B905",
    "W291",
]

[tool.ruff.lint.mccabe]
max-complexity = 20

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "D103",
]
"scripts/**" = [
    "D103",
]

[tool.pytest.ini_options]
markers = [
    "python: language server running for Python",
    "go: language server running for Go",
    "java: language server running for Java",
    "rust: language server running for Rust",
    "typescript: language server running for TypeScript",
    "php: language server running for PHP",
    "snapshot: snapshot tests for symbolic editing operations",
    "isolated_process: test runs with process isolated agent",
]

[tool.codespell]
skip = ".git*,*.svg,*.lock,*.min.*"
check-hidden = true
