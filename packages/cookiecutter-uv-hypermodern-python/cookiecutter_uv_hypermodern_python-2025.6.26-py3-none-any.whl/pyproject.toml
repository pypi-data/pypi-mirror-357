[project]
name = "cookiecutter-uv-hypermodern-python"
version = "2025.06.26"
description = "A Cookiecutter template for a hypermodern Python project using uv."
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
authors = [
  { name = "bosd", email = "c5e2fd43-d292-4c90-9d1f-74ff3436329a@anonaddy.me" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Code Generators",
]

dependencies = [
"click >=8.0.1",
]


[project.urls]
Homepage = "https://github.com/bosd/cookiecutter-uv-hypermodern-python"
Repository = "https://github.com/bosd/cookiecutter-uv-hypermodern-python"
Documentation = "https://cookiecutter-uv-hypermodern-python.readthedocs.io/"
Changelog = "https://github.com/bosd/cookiecutter-uv-hypermodern-python/releases"

[dependency-groups]
dev = [
  "uv>=0.1.0",
  "toml",
  "hatchling",
  "coverage[toml] >= 6.2",
  "pre-commit >=2.16.0",
  "pre-commit-hooks >=4.1.0",
  "pytest >=6.2.5",
  "pygments >=2.10.0",
]
lint = [
  "ruff >=0.0.274",
  "pydoclint >=0.0.0",
]
docs = [
  "furo >=2021.11.12",
  "myst-parser == 3.0.1",
  "sphinx >= 4.3.2",
  "sphinx-autobuild >=2021.3.14",
  "sphinx-click >=3.0.2",
]
mypy = [
  "mypy >=0.930"
]
typeguard = [
  "typeguard >=2.13.3"
]
xdoctest = [
  "xdoctest[colors] >=0.15.10"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
exclude = [
    "/.git",
    "/.github",
    "/.venv",
    "/docs",
    "/tools",
    "/noxfile.py",
    "/.pre-commit-config.yaml",
    "/.readthedocs.yml",
]

[tool.hatch.build.targets.wheel]
packages = ["."]

[tool.setuptools.packages.find]
where = ["."]

[tool.uv]
package = true

[project.scripts]
cookiecutter-uv-hypermodern-python-instance = "cookiecutter_uv_hypermodern_python.__main__:main"

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["cookiecutter_uv_hypermodern_python", "tests"]

[tool.coverage.report]
show_missing = true
fail_under = 100
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING:",
]

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_context = true

[tool.ruff]
src = ["src", "tests"]

[tool.ruff.lint]
select = [
  "B",    # flake8-bugbear
  "C90",  # mccabe
  "D",    # pydocstyle
  "E",    # pycodestyle
  "F",    # pyflakes
  "I",    # isort
  "N",    # pep8-naming
  "RUF",  # Ruff-specific rules
  "S",    # flake8-bandit
  "UP",   # pyupgrade
  "W",    # pycodestyle
]
ignore = [
  "COM812",
  "COM819",
  "D107",  # undocumented-public-init conflicts with DOC301
  "D206",
  "D300",
  "E111",
  "E114",
  "E117",
  "ISC001",
  "ISC002",
  "Q000",
  "Q001",
  "Q002",
  "Q003",
  "W191",
]

[tool.ruff.lint.per-file-ignores]
"*/test_*.py" = ["S101"]
"noxfile.py" = ["S101"]
"**/conftest.py" = ["S101"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pydoclint]
style = 'google'
exclude = '\.git|\.nox|noxfile.py'
arg-type-hints-in-docstring = false
