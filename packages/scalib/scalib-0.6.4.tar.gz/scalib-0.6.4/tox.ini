[tox]
requires =
    tox>=4
    tox-uv>=1.17

env_list =
    test
    docs

[testenv]
runner = uv-venv-runner

[testenv:base]
runner = uv-venv-runner
setenv =
    RUST_BACKTRACE=1
pass_env =
    SCALIB_*
deps =
    -r{toxinidir}/tests/requirements.txt
wheel_build_env = .pkg
package = editable
commands =
    uv pip freeze
    pytest {tty:--color=yes} {posargs}

[testenv:test]
description = run tests (defaut local python)
base = base

[testenv:.pkg]
pass_env = {[base]pass_env}
setenv =
    CARGO_TARGET_DIR={toxinidir}/.cargo_build

[testenv:.pkg_dbg]
pass_env = {[base]pass_env}
setenv =
    CARGO_TARGET_DIR={toxinidir}/.cargo_build
    SCALIB_DEBUG=1

[testenv:dev]
description = Editable install with debug build.
base = base
wheel_build_env = .pkg_dbg

[testenv:min_deps]
description = Test with minimum versions of the dependencies
base = base
wheel_build_env = .pkg-mindeps
uv_resolution = lowest-direct

[testenv:coverage]
description =
    Generate HTML coverage report for last test run
skip_install = True
deps = coverage
commands =
    coverage html

[testenv:docs]
description = Build the docs
skip_install = True
deps =
    -r{toxinidir}/docs/requirements.txt
changedir = docs
commands =
    uv pip freeze
    sphinx-build  -W -b {posargs:html} . _build/html

[testenv:fmt]
description = Check code style. Pass '--check' to instead check formatting.
skip_install = True
changedir = .
deps =
    black ~= 24.10.0
allowlist_externals = cargo
commands =
    black --version
    black {posargs} src/scalib tests examples setup.py
    cargo fmt --version
    cargo fmt --manifest-path src/scalib_ext/Cargo.toml --all -- {posargs}

