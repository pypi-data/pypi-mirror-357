name: Rename the project from template

on: [workflow_dispatch]

permissions: write-all

jobs:
  rename-project:
    if: ${{ !contains (github.repository, 'python-template-project') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # by default, it uses a depth of 1
          # this fetches all history so that we can read each commit
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          
      # The repository name (e.g. "my-new-repo" or "my_new_repo")
      - run: echo "NEW_REPO_BASE_NAME=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV
        shell: bash

      # The name for internal Python packages (always with underscores)
      - run: echo "NEW_PACKAGE_NAME=$(echo '${{ env.NEW_REPO_BASE_NAME }}' | tr '-' '_')" >> $GITHUB_ENV
        shell: bash

      # The name for external designations (remains as in the repo name)
      - run: echo "NEW_PROJECT_NAME=$(echo '${{ env.NEW_REPO_BASE_NAME }}' | tr '_' '-')" >> $GITHUB_ENV
        shell: bash

      - run: echo "REPOSITORY_OWNER=$(echo '${{ github.repository }}' | awk -F '/' '{print $1}')" >> $GITHUB_ENV
        shell: bash
        
      - name: Check if this is still a template
        id: is_template
        # Check whether the template.yml still exists
        run: echo "::set-output name=is_template::$(test -f .github/template.yml && echo 'true' || echo 'false')"

      - name: Rename the project
        # Execute only if the template.yml exists (indicator for template repo)
        if: steps.is_template.outputs.is_template == 'true'
        run: |
          echo "Renaming the project with author: ${{ env.REPOSITORY_OWNER }}, package name: ${{ env.NEW_PACKAGE_NAME }}, project name: ${{ env.NEW_PROJECT_NAME }}"
          .github/rename_project.sh \
            -a "${{ env.REPOSITORY_OWNER }}" \
            -p "${{ env.NEW_PACKAGE_NAME }}" \
            -n "${{ env.NEW_PROJECT_NAME }}" \
            -d "Feature-rich Python project template for ${{ env.NEW_PROJECT_NAME }}." # Customized description

      - name: Configure Git # it is good practiceto configure git bot
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          # 'git config --global credential.helper store'
        shell: bash

      - name: Commit and Push Changes
        run: |
          git add .
          git commit -m "âœ… Project renamed from template."
          git push --force
        shell: bash