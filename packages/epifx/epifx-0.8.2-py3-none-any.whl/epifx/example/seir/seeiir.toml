[components]
model = "epifx.det.SEEIIR"
time = "pypfilt.Datetime"
sampler = "pypfilt.sampler.LatinHypercube"
summary = "pypfilt.summary.HDF5"

[time]
start = "2014-01-01"
until = "2014-10-31"
steps_per_unit = 5

[files]
input_directory = "."
output_directory = "."
delete_cache_file_before_forecast = true
delete_cache_file_after_forecast = true

[prior]
R0 = { name = "uniform", args.loc = 1.35, args.scale = 0.1 }
sigma = { name = "inverse_uniform", args.inv_low = 0.2, args.inv_high = 0.3 }
gamma = { name = "inverse_uniform", args.inv_low = 0.2, args.inv_high = 0.3 }
eta = { name = "constant", args.value = 1.0 }
alpha = { name = "constant", args.value = 0.0 }
t0 = { name = "uniform", args.loc = 0.0, args.scale = 28.0 }

[filter]
particles = 1000
prng_seed = 3001
history_window = 7
resample.threshold = 0.25
regularisation.enabled = true

[filter.regularisation.bounds]
R0 = { min = 1.35, max = 1.45 }
sigma = { min = 0.2, max = 0.3 }
gamma = { min = 0.2, max = 0.3 }
eta = { min = 1.0, max = 1.0 }
alpha = { min = 0, max = 0 }
t0 = { min = 0, max = 28 }

[summary]
only_forecasts = true
metadata.packages = [ "epifx" ]

[summary.monitors]
peak_monitor.component = "epifx.summary.PeakMonitor"
thresh_500.component = "epifx.summary.ThresholdMonitor"
thresh_500.threshold = 500
thresh_1000.component = "epifx.summary.ThresholdMonitor"
thresh_1000.threshold = 1000

[summary.tables]
model_cints.component = "pypfilt.summary.ModelCIs"
param_covar.component = "pypfilt.summary.ParamCovar"
forecasts.component = "pypfilt.summary.PredictiveCIs"
forecasts.credible_intervals = [0, 50, 95]
pr_epi.component = "epifx.summary.PrOutbreak"
obs_llhd.component = "epifx.summary.ObsLikelihood"
peak_size_acc.component = "epifx.summary.PeakSizeAccuracy"
peak_size_acc.peak_monitor = "peak_monitor"
peak_size_acc.thresholds = [10, 20, 25, 33]
peak_time_acc.component = "epifx.summary.PeakTimeAccuracy"
peak_time_acc.peak_monitor = "peak_monitor"
peak_time_acc.thresholds = [7, 10, 14]
peak_cints.component = "epifx.summary.PeakForecastCIs"
peak_cints.peak_monitor = "peak_monitor"
peak_cints.credible_intervals = [0, 50, 90, 95, 99, 100]
peak_ensemble.component = "epifx.summary.PeakForecastEnsembles"
peak_ensemble.peak_monitor = "peak_monitor"
peak_ensemble.only_forecasts = true
exceed_500.component = "epifx.summary.ExceedThreshold"
exceed_500.threshold_monitor = "thresh_500"
exceed_500.only_forecasts = true
exceed_500.start = "2014-04-01"
exceed_500.until = "2014-10-01"
exceed_500.bin_width = 7
exceed_1000.component = "epifx.summary.ExceedThreshold"
exceed_1000.threshold_monitor = "thresh_1000"
exceed_1000.only_forecasts = true
exceed_1000.start = "2014-04-01"
exceed_1000.until = "2014-10-01"
exceed_1000.bin_width = 7
expected_obs.component = "epifx.summary.ExpectedObs"
expected_obs.credible_intervals = [0, 50, 95]
sim_obs.component = "pypfilt.summary.SimulatedObs"
sim_obs.observation_unit = "cases"
sim_obs.common_prng_seed = true
fs_ensemble.component = "pypfilt.summary.ForecastSnapshot"
fs_ensemble.each_summary_time = true

[scenario.seeiir_test]
name = "seeiir_test"
model.population_size = 1_000_000

[scenario.seeiir_test.lookup_tables]
pr_obs = { file = "pr-obs.ssv", sample_values = true }

[scenario.seeiir_test.observations.cases]
model = "epifx.obs.PopnCounts"
observation_period = 7
pr_obs_lookup = "pr_obs"
file = "weekly-cases.ssv"
file_args.time_col = "time"
file_args.value_col = "cases"
parameters.bg_obs = 200
parameters.bg_var = 3000
parameters.pr_obs = 0.5
parameters.disp = 100
descriptor.format = { bg_obs = "03.0f", bg_var = "03.0f", pr_obs = "0.1f", disp = "03.0f" }
descriptor.name = { bg_obs = "bg", bg_var = "bgvar", pr_obs = "pr", disp = "disp" }
