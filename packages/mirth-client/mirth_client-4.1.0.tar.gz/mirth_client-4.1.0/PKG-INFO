Metadata-Version: 2.3
Name: mirth-client
Version: 4.1.0
Summary: Basic Python interface for Mirth Connect
Author: Joel Collins
Author-email: joel.collins@renalregistry.nhs.uk
Requires-Python: >=3.9,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Provides-Extra: docs
Requires-Dist: Sphinx (>=3.5.3,<6.0.0) ; extra == "docs"
Requires-Dist: httpx (>=0.23,<0.28.1)
Requires-Dist: pydantic (>=1.8.2,<3.0.0)
Requires-Dist: semver (>=2.13,<4.0)
Requires-Dist: sphinx-rtd-theme (>=0.5.1,<2.1.0) ; extra == "docs"
Requires-Dist: typing-extensions (>=3.10,<5.0)
Requires-Dist: xmltodict (>=0.12,<0.14)
Description-Content-Type: text/markdown

# python-mirth-client

[![PyPI Release](https://img.shields.io/pypi/v/mirth-client)](https://pypi.org/project/mirth-client/)
[![Documentation Status](https://readthedocs.org/projects/python-mirth-client/badge/?version=latest)](https://python-mirth-client.readthedocs.io/en/latest/?badge=latest)

A basic async Python interface for Mirth Connect

## Installation

`pip install mirth-client`

## Usage example

Assuming running within IPython or as part of an async application with an event-loop set up.

```python
from mirth_client import MirthAPI
from pprint import pprint

async with MirthAPI("https://mirth.domain.com/api") as api:
    await api.login("****", "****")

    # Check out list of channels
    for channel in await api.channels():
        metadata = await channel.get_info()
        print(f"ID: {metadata.id}")
        print(f"Name: {metadata.name}")
        print("")

    # Get stats for a channel
    s = await api.channel("3cdefad2-bf10-49ee-81c9-8ac6fd2fed67").get_statistics()
    pprint(s)

    # Check channel for failed messages
    e = await api.channel("3cdefad2-bf10-49ee-81c9-8ac6fd2fed67").get_messages(status="error")
    pprint(e)

    # Get 10 most recent events
    e = await api.events(10)
    pprint(e)
```

