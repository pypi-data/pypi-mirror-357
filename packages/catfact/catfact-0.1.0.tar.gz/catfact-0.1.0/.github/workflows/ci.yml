name: Build and Deploy
on:
  push:
    branches: [main]
  pull_request:
  release:
    types: [published]
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # python setup ----
      - uses: actions/checkout@v2
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: ${{matrix.python-version}}
      - name: Install the project
        run: uv sync --all-extras --dev

      # testing ----
      - name: Test
        run: |
          uv run pytest

  docs-build:
    name: "Build Docs"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # python ----
      - uses: actions/checkout@v2
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"
      - name: Install the project
        run: uv sync --all-extras --dev

      # quarto ----
      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2
      - name: Build docs
        run: |
          cd docs && uv run quartodoc build --verbose && uv run quarto render

      # save ----
      - uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/_site
      - name: Save docs artifact
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: docs/_site

  docs-preview:
    name: "Docs Preview"
    needs: [docs-build]
    uses: ./.github/workflows/_preview.yml
    with:
      artifact-name: "docs"
    secrets:
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_SITE_NAME: ${{ secrets.NETLIFY_SITE_NAME }}

  release-pypi:
    name: "Release to PyPI"
    runs-on: ubuntu-latest
    needs: [test]
    if: github.event_name == 'release'
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"
      - name: "Build Package"
        run: |
          python -m pip install build wheel
          python -m build --sdist --wheel
      - name: "Deploy to PyPI"
        uses: pypa/gh-action-pypi-publish@release/v1
