Metadata-Version: 2.1
Name: s2cache
Version: 0.4.1
Summary: Unofficial Semantic Scholar API with Local Cache
Home-page: https://github.com/akshaybadola/s2cache
License: MIT
Keywords: semanticscholar,bibliography,async
Author: Akshay
Author-email: akshay.badola.cs@gmail.com
Requires-Python: >=3.8,<4.0
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Education
Classifier: Topic :: Scientific/Engineering
Requires-Dist: PyYAML (>=6.0.0,<7.0.0)
Requires-Dist: aiohttp (>=3.8.1,<4.0.0)
Requires-Dist: common_pyutil (>=0.9.0,<0.10.0)
Requires-Dist: mysql-connector-python (==9.3.0)
Requires-Dist: requests (>=2.31.0,<3.0.0)
Description-Content-Type: text/plain

* Unofficial Semantic Scholar Client

  Python Semantic Scholar https://www.semanticscholar.org/product/api client
  with a local cache.

** Features
   - Async requests
   - Local JSON files based storage to avoid redundant requests
   - Can fetch citations > 10000 (Semantic Scholar API limit) when the full
     parsed citation graph is on disk.
   - Filter the data based on certain predicates like
     + Year
     + Author
     + Title
     + Venue
     + CitationCount
   - Local cache of dumped Semantic Scholar Citation Data, for fetching
     citations with papers > 10000.

** Installation

   ~pip install s2cache~

** Usage

   The package is a library for your Bibliography metadata managment needs.
   The intended use is applications which use Semantic Scholar data for
   generating bibliography management, visualizing citation graphs etc.

   It can fetch citations and references from Semantic Scholar API
   https://www.semanticscholar.org/product/api and store in a local cache
   to avoid redundant requests to the service as the citation data fetches
   can be network intensive.

   There is also a filters module also which can be combined to filter the data

   *More to Follow*

** License

   MIT License

   See Semantic Scholar License page https://www.semanticscholar.org/product/api/license
   to view the API License.

