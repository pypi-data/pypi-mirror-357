{% set pyproject = load_file_data('../pyproject.toml', from_recipe_dir=True) %}
{% set project = pyproject['project'] %}

{% set name = project['name'] %}

{% set version_file_path = '../' + name + '/_version.py' %}

# Check if file exists before trying to read it
{% set version = '' %}
{% if os.path.exists(version_file_path) %}
    {% set version_file_content = open(version_file_path, 'r').read() %}
    {% set version = version_file_content.split('=')[1].strip().strip('"\'') %}
{% else %}
    # Fallback to git-based version
    {% set version = environ.get('GIT_DESCRIBE_TAG', '0.0.0') %}
{% endif %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  path: ..

build:
  number: 0
  skip: True  # [py<39]
  script: {{ PYTHON }} -m pip install . --no-deps --no-build-isolation -vv

requirements:
  host:
    - python
    - pip
    {% for dep in pyproject['build-system']['requires'] %}
    - {{ dep.lower() }}
    {% endfor %}
  run:
    - python
    {% for dep in pyproject['project']['dependencies'] %}
    - {{ dep.lower() }}
    {% endfor %}

test:
  imports:
    - mailgun
    - mailgun.handlers
    - mailgun.examples
  source_files:
    - tests/tests.py
  requires:
    - pip
    - pytest
  commands:
    - pip check
    # TODO: Add environment variables for tests
    #- pytest tests.py -vv

about:
  home: {{ project['urls']['Homepage'] }}
  dev_url: {{ project['urls']['Repository'] }}
  doc_url: {{ project['urls']['Documentation'] }}
  summary: {{ project['description'] }}
  # TODO: Add the description
  # description: |
  #
  license: {{ project['license']['text'] }}
  license_family: {{ project['license']['text'].split('-')[0] }}
  license_file: LICENSE
