[project]
name = "htty"
version = "0.1.18"
description = "A python wrapper around ht (a headless terminal utility)"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Matt Rixman", email = "MatrixManAtYrService@users.noreply.github.com"},
]
keywords = ["terminal", "emulator", "testing", "cli"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Testing",
    "Topic :: Terminals :: Terminal Emulators/X Terminals",
]
dependencies = [
    "ansi2html>=1.9.2",
]

[project.urls]
Homepage = "https://github.com/MatrixManAtYrService/htty"
Repository = "https://github.com/MatrixManAtYrService/htty"
"Bug Tracker" = "https://github.com/MatrixManAtYrService/htty/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/htty"]

[project.scripts]
htty = "htty.cli:cli"
htty-ht = "htty.ht:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"

# Test markers for different test categories
markers = [
    "fast: marks tests as fast unit tests",
    "slow: marks tests as slow integration tests", 
    "dist: marks tests as distribution tests requiring Docker",
]

[dependency-groups]
dev = [
    "pytest>=7.0,<8.0",
    "fawltydeps>=0.20.0,<1.0",
    "pdoc>=14.0.0,<15.0",
    "pyright>=1.1.402",
    "ruff>=0.12.0",
    "build>=1.2.2.post1",
    "hatchling>=1.27.0",
]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort (import sorting)
]

fixable = ["ALL"]

[tool.ruff.lint.isort]
known-first-party = ["htty"]
force-single-line = false
combine-as-imports = true

[tool.pyright]
typeCheckingMode = "strict"
reportMissingTypeStubs = "error"
reportUnknownMemberType = "error"
reportUnknownArgumentType = "error"
reportUnknownVariableType = "error"
reportUnknownParameterType = "error"
reportMissingParameterType = "error"
reportMissingReturnType = "error"
reportUntypedFunctionDecorator = "error"
reportUntypedClassDecorator = "error"
reportUntypedBaseClass = "error"
reportUntypedNamedTuple = "error"

include = ["src"]

exclude = [
    "tests/**",
    "test_release/**",
]
