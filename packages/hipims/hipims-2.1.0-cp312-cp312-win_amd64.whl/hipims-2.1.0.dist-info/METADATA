Metadata-Version: 2.2
Name: hipims
Version: 2.1.0
Summary: HiPIMS names for High-Performance Integrated hydrodynamic Modelling System. It uses state-of-art numerical schemes (Godunov-type finite volume) to solve the 2D shallow water equations for flood simulations. To support high-resolution flood simulations, HiPIMS is implemented on multiple GPUs (Graphics Processing Unit) using CUDA/C++ languages to achieve high-performance computing.
Author-email: Xue Tong <x.tong2@lboro.ac.uk>, Jiaheng Zhao <jiaheng.zhao@fmglobal.com>
Maintainer-email: Xue Tong <x.tong2@lboro.ac.uk>
License: Copyright (c) 2018 The Python Packaging Authority
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Project-URL: Homepage, https://example.com
Project-URL: Documentation, https://readthedocs.org
Project-URL: Repository, https://github.com/me/spam.git
Project-URL: Changelog, https://github.com/me/spam/blob/master/CHANGELOG.md
Keywords: flood,flooding,flood-modelling
Classifier: Development Status :: 4 - Beta
Classifier: Programming Language :: Python
Classifier: Programming Language :: C++
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Requires-Dist: matplotlib
Requires-Dist: seaborn
Requires-Dist: rasterio
Requires-Dist: geopandas
Requires-Dist: spicy
Requires-Dist: openpyxl

# High-Performance Integrated hydrodynamic Modelling System ***hybrid***

This is a beta version inhouse code of Hemlab used for high-performance flooding simulation.


## About
HiPIMS names for High-Performance Integrated hydrodynamic Modelling System. It uses state-of-art numerical schemes (Godunov-type finite volume) to solve the 2D shallow water equations for flood simulations. To support high-resolution flood simulations, HiPIMS is implemented on multiple GPUs (Graphics Processing Unit) using CUDA/C++ languages to achieve high-performance computing. To find out how to use the model, please see the wiki.

### Contributing
HiPIMS is maintained by the Hydro-Environmental Modelling Labarotory [URL](https://www.hemlab.org/), a research hub for technological innovation and interdisciplinary collaboration. We warmly welcome the hydro-environmental modelling community to contribute to the project, believing that this project will benefit the whole community.

 [Qiuhua Liang](https://www.lboro.ac.uk/departments/abce/staff/qiuhua-liang/), ([Q.Liang@lboro.ac.uk](mailto:Q.Liang@lboro.ac.uk)) is the Head of HEMLab.

#### Authors
Jiaheng Zhao, HemLab ([jiaheng.zhao@fmglobal.com](mailto:jiaheng.zhao@fmglobal.comk))

Xue Tong, Loughborough University ([x.tong2@lboro.ac.uk](mailto:x.tong2@lboro.ac.uk))  
  
## License
This is a beta version inhouse code of Hemlab and can only be used and extended if you are a ***member of hemlab***. If not, please contact Qiuhua Liang (q.liang@lboro.ac.uk) for more information.

## Requirements
HiPMS deployment requires the following software to be installed on the build machine.
- GCC and G++ >= 10
- Python >= 3.8
- pip
- The CUDA Toolkit 12.1 (see https://developer.nvidia.com/cuda-12-1-0-download-archive)
- torch for CUDA 12.1(pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121)

## Install
cd .../HiPIMS_2024
pip install .
