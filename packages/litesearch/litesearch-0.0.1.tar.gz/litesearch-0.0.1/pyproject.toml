[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "litesearch"
version = "0.0.1"
description = "A unified and extensible AI-oriented search abstraction layer"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "xmingc", email = "chenxm35@gmail.com"}
]
maintainers = [
    {name = "xmingc", email = "chenxm35@gmail.com"}
]
keywords = ["search", "ai", "semantic", "vector", "rag", "llm", "web-scraping"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Indexing/Search",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    "requests>=2.28.0",
    "Crawl4AI>=0.6.3",
    "beautifulsoup4>=4.11.0",
    "aiohttp>=3.8.0",
    "asyncio>=3.4.3",
    "pydantic>=1.10.0",
    "typing-extensions>=4.0.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
    "autoflake>=2.0.0",
    "hatch>=1.14.0"
]
vector = [
    "weaviate-client>=3.20.0",
    "chromadb>=0.4.0",
    "faiss-cpu>=1.7.0",
    "pinecone-client>=2.2.0",
    "sentence-transformers>=2.2.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]

[project.urls]
Homepage = "https://github.com/caesar0301/litesearch"
Documentation = "https://litesearch.readthedocs.io"
Repository = "https://github.com/caesar0301/litesearch.git"
"Bug Tracker" = "https://github.com/caesar0301/litesearch/issues"
"Changelog" = "https://github.com/caesar0301/litesearch/blob/main/CHANGELOG.md"

[tool.hatch.build.targets.wheel]
packages = ["src/litesearch"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/README.md",
    "/LICENSE",
    "/CHANGELOG.md",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 120
known_first_party = ["litesearch"]

[tool.flake8]
max-line-length = 120
extend-ignore = ["E203", "W503"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/litesearch",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/litesearch"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 