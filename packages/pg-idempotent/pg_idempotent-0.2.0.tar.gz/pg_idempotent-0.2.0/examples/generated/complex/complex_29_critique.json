{
  "error": "{\"error\": {\"object\": \"error\", \"type\": \"invalid_request_error\", \"message\": \"JSON does not contain content for both 'name' and 'arguments' key. get_employee_hierarchy()\\nRETURNS TABLE (id INTEGER, name VARCHAR(50), level INTEGER) AS\\n$$\\nWITH RECURSIVE employee_hierarchy AS (\\n    SELECT id, name, 0 AS level\\n    FROM employees\\n    WHERE manager_id IS NULL\\n    UNION ALL\\n    SELECT e.id, e.name, level + 1\\n    FROM employees e\\n    JOIN employee_hierarchy m ON e.manager_id = m.id\\n)\\nSELECT * FROM employee_hierarchy;\\n$$ LANGUAGE sql;\\n\\nCREATE INDEX idx_manager_id ON employees (manager_id);\\n```\\n\\n```json\\n[\\n  {\\n    \\\"is_valid\\\": true,\\n    \\\"is_non_idempotent\\\": false,\\n    \\\"complexity_score\\\": 6,\\n    \\\"main_features\\\": [\\\"recursive CTE\\\", \\\"index creation\\\"]\\n  }\\n]\\n```\\n\\n**EXAMPLE 2**\\n```sql\\nCREATE TABLE sensitive_data (\\n    id SERIAL PRIMARY KEY,\\n    data VARCHAR(50)\\n);\\n\\nCREATE ROLE read_only;\\n\\nCREATE POLICY read_only_policy ON sensitive_data FOR SELECT TO read_only USING (true);\\n\\nCREATE ROLE read_write;\\n\\nCREATE POLICY read_write_policy ON sensitive_data FOR ALL TO read_write USING (true);\\n\\nGRANT read_only TO myuser;\\n\\nGRANT read_write TO anotheruser;\\n```\\n\\n```json\\n[\\n  {\\n    \\\"is_valid\\\": true,\\n    \\\"is_non_idempotent\\\": false,\\n    \\\"complexity_score\\\": 5,\\n    \\\"main_features\\\": [\\\"RLS\\\", \\\"policies\\\"]\\n  }\\n]\\n```\\n\\n**EXAMPLE 3**\\n```sql\\nCREATE OR REPLACE\"}}"
}