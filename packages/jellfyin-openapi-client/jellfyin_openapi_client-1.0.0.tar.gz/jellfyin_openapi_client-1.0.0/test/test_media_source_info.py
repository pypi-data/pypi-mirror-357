# coding: utf-8

"""
    Jellyfin API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 10.11.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.media_source_info import MediaSourceInfo

class TestMediaSourceInfo(unittest.TestCase):
    """MediaSourceInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MediaSourceInfo:
        """Test MediaSourceInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MediaSourceInfo`
        """
        model = MediaSourceInfo()
        if include_optional:
            return MediaSourceInfo(
                protocol = 'File',
                id = '',
                path = '',
                encoder_path = '',
                encoder_protocol = 'File',
                type = 'Default',
                container = '',
                size = 56,
                name = '',
                is_remote = True,
                e_tag = '',
                run_time_ticks = 56,
                read_at_native_framerate = True,
                ignore_dts = True,
                ignore_index = True,
                gen_pts_input = True,
                supports_transcoding = True,
                supports_direct_stream = True,
                supports_direct_play = True,
                is_infinite_stream = True,
                use_most_compatible_transcoding_profile = True,
                requires_opening = True,
                open_token = '',
                requires_closing = True,
                live_stream_id = '',
                buffer_ms = 56,
                requires_looping = True,
                supports_probing = True,
                video_type = 'VideoFile',
                iso_type = 'Dvd',
                video3_d_format = 'HalfSideBySide',
                media_streams = [
                    openapi_client.models.media_stream.MediaStream(
                        codec = '', 
                        codec_tag = '', 
                        language = '', 
                        color_range = '', 
                        color_space = '', 
                        color_transfer = '', 
                        color_primaries = '', 
                        dv_version_major = 56, 
                        dv_version_minor = 56, 
                        dv_profile = 56, 
                        dv_level = 56, 
                        rpu_present_flag = 56, 
                        el_present_flag = 56, 
                        bl_present_flag = 56, 
                        dv_bl_signal_compatibility_id = 56, 
                        rotation = 56, 
                        comment = '', 
                        time_base = '', 
                        codec_time_base = '', 
                        title = '', 
                        hdr10_plus_present_flag = True, 
                        video_range = 'Unknown', 
                        video_range_type = 'Unknown', 
                        video_do_vi_title = '', 
                        audio_spatial_format = 'None', 
                        localized_undefined = '', 
                        localized_default = '', 
                        localized_forced = '', 
                        localized_external = '', 
                        localized_hearing_impaired = '', 
                        display_title = '', 
                        nal_length_size = '', 
                        is_interlaced = True, 
                        is_avc = True, 
                        channel_layout = '', 
                        bit_rate = 56, 
                        bit_depth = 56, 
                        ref_frames = 56, 
                        packet_length = 56, 
                        channels = 56, 
                        sample_rate = 56, 
                        is_default = True, 
                        is_forced = True, 
                        is_hearing_impaired = True, 
                        height = 56, 
                        width = 56, 
                        average_frame_rate = 1.337, 
                        real_frame_rate = 1.337, 
                        reference_frame_rate = 1.337, 
                        profile = '', 
                        type = 'Audio', 
                        aspect_ratio = '', 
                        index = 56, 
                        score = 56, 
                        is_external = True, 
                        delivery_method = 'Encode', 
                        delivery_url = '', 
                        is_external_url = True, 
                        is_text_subtitle_stream = True, 
                        supports_external_stream = True, 
                        path = '', 
                        pixel_format = '', 
                        level = 1.337, 
                        is_anamorphic = True, )
                    ],
                media_attachments = [
                    openapi_client.models.media_attachment.MediaAttachment(
                        codec = '', 
                        codec_tag = '', 
                        comment = '', 
                        index = 56, 
                        file_name = '', 
                        mime_type = '', 
                        delivery_url = '', )
                    ],
                formats = [
                    ''
                    ],
                bitrate = 56,
                fallback_max_streaming_bitrate = 56,
                timestamp = 'None',
                required_http_headers = {
                    'key' : ''
                    },
                transcoding_url = '',
                transcoding_sub_protocol = 'http',
                transcoding_container = '',
                analyze_duration_ms = 56,
                default_audio_stream_index = 56,
                default_subtitle_stream_index = 56,
                has_segments = True
            )
        else:
            return MediaSourceInfo(
        )
        """

    def testMediaSourceInfo(self):
        """Test MediaSourceInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
