# coding: utf-8

"""
    Jellyfin API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 10.11.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.user_data_changed_message import UserDataChangedMessage

class TestUserDataChangedMessage(unittest.TestCase):
    """UserDataChangedMessage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UserDataChangedMessage:
        """Test UserDataChangedMessage
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UserDataChangedMessage`
        """
        model = UserDataChangedMessage()
        if include_optional:
            return UserDataChangedMessage(
                data = openapi_client.models.user_data_change_info.UserDataChangeInfo(
                    user_id = '', 
                    user_data_list = [
                        openapi_client.models.user_item_data_dto.UserItemDataDto(
                            rating = 1.337, 
                            played_percentage = 1.337, 
                            unplayed_item_count = 56, 
                            playback_position_ticks = 56, 
                            play_count = 56, 
                            is_favorite = True, 
                            likes = True, 
                            last_played_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            played = True, 
                            key = '', 
                            item_id = '', )
                        ], ),
                message_id = '',
                message_type = 'ForceKeepAlive'
            )
        else:
            return UserDataChangedMessage(
        )
        """

    def testUserDataChangedMessage(self):
        """Test UserDataChangedMessage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
