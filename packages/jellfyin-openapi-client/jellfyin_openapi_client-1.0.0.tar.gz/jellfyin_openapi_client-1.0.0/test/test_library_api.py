# coding: utf-8

"""
    Jellyfin API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 10.11.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.library_api import LibraryApi


class TestLibraryApi(unittest.TestCase):
    """LibraryApi unit test stubs"""

    def setUp(self) -> None:
        self.api = LibraryApi()

    def tearDown(self) -> None:
        pass

    def test_delete_item(self) -> None:
        """Test case for delete_item

        Deletes an item from the library and filesystem.
        """
        pass

    def test_delete_items(self) -> None:
        """Test case for delete_items

        Deletes items from the library and filesystem.
        """
        pass

    def test_get_ancestors(self) -> None:
        """Test case for get_ancestors

        Gets all parents of an item.
        """
        pass

    def test_get_critic_reviews(self) -> None:
        """Test case for get_critic_reviews

        Gets critic review for an item.
        """
        pass

    def test_get_download(self) -> None:
        """Test case for get_download

        Downloads item media.
        """
        pass

    def test_get_file(self) -> None:
        """Test case for get_file

        Get the original file of an item.
        """
        pass

    def test_get_item_counts(self) -> None:
        """Test case for get_item_counts

        Get item counts.
        """
        pass

    def test_get_library_options_info(self) -> None:
        """Test case for get_library_options_info

        Gets the library options info.
        """
        pass

    def test_get_media_folders(self) -> None:
        """Test case for get_media_folders

        Gets all user media folders.
        """
        pass

    def test_get_physical_paths(self) -> None:
        """Test case for get_physical_paths

        Gets a list of physical paths from virtual folders.
        """
        pass

    def test_get_similar_albums(self) -> None:
        """Test case for get_similar_albums

        Gets similar items.
        """
        pass

    def test_get_similar_artists(self) -> None:
        """Test case for get_similar_artists

        Gets similar items.
        """
        pass

    def test_get_similar_items(self) -> None:
        """Test case for get_similar_items

        Gets similar items.
        """
        pass

    def test_get_similar_movies(self) -> None:
        """Test case for get_similar_movies

        Gets similar items.
        """
        pass

    def test_get_similar_shows(self) -> None:
        """Test case for get_similar_shows

        Gets similar items.
        """
        pass

    def test_get_similar_trailers(self) -> None:
        """Test case for get_similar_trailers

        Gets similar items.
        """
        pass

    def test_get_theme_media(self) -> None:
        """Test case for get_theme_media

        Get theme songs and videos for an item.
        """
        pass

    def test_get_theme_songs(self) -> None:
        """Test case for get_theme_songs

        Get theme songs for an item.
        """
        pass

    def test_get_theme_videos(self) -> None:
        """Test case for get_theme_videos

        Get theme videos for an item.
        """
        pass

    def test_post_added_movies(self) -> None:
        """Test case for post_added_movies

        Reports that new movies have been added by an external source.
        """
        pass

    def test_post_added_series(self) -> None:
        """Test case for post_added_series

        Reports that new episodes of a series have been added by an external source.
        """
        pass

    def test_post_updated_media(self) -> None:
        """Test case for post_updated_media

        Reports that new movies have been added by an external source.
        """
        pass

    def test_post_updated_movies(self) -> None:
        """Test case for post_updated_movies

        Reports that new movies have been added by an external source.
        """
        pass

    def test_post_updated_series(self) -> None:
        """Test case for post_updated_series

        Reports that new episodes of a series have been added by an external source.
        """
        pass

    def test_refresh_library(self) -> None:
        """Test case for refresh_library

        Starts a library scan.
        """
        pass


if __name__ == '__main__':
    unittest.main()
