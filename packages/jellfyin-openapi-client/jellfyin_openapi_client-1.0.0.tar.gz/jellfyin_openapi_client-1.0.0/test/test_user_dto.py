# coding: utf-8

"""
    Jellyfin API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 10.11.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.user_dto import UserDto

class TestUserDto(unittest.TestCase):
    """UserDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UserDto:
        """Test UserDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UserDto`
        """
        model = UserDto()
        if include_optional:
            return UserDto(
                name = '',
                server_id = '',
                server_name = '',
                id = '',
                primary_image_tag = '',
                has_password = True,
                has_configured_password = True,
                has_configured_easy_password = True,
                enable_auto_login = True,
                last_login_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_activity_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                configuration = openapi_client.models.user_configuration.UserConfiguration(
                    audio_language_preference = '', 
                    play_default_audio_track = True, 
                    subtitle_language_preference = '', 
                    display_missing_episodes = True, 
                    grouped_folders = [
                        ''
                        ], 
                    subtitle_mode = 'Default', 
                    display_collections_view = True, 
                    enable_local_password = True, 
                    ordered_views = [
                        ''
                        ], 
                    latest_items_excludes = [
                        ''
                        ], 
                    my_media_excludes = [
                        ''
                        ], 
                    hide_played_in_latest = True, 
                    remember_audio_selections = True, 
                    remember_subtitle_selections = True, 
                    enable_next_episode_auto_play = True, 
                    cast_receiver_id = '', ),
                policy = openapi_client.models.user_policy.UserPolicy(
                    is_administrator = True, 
                    is_hidden = True, 
                    enable_collection_management = True, 
                    enable_subtitle_management = True, 
                    enable_lyric_management = True, 
                    is_disabled = True, 
                    max_parental_rating = 56, 
                    max_parental_sub_rating = 56, 
                    blocked_tags = [
                        ''
                        ], 
                    allowed_tags = [
                        ''
                        ], 
                    enable_user_preference_access = True, 
                    access_schedules = [
                        openapi_client.models.access_schedule.AccessSchedule(
                            id = 56, 
                            user_id = '', 
                            day_of_week = 'Sunday', 
                            start_hour = 1.337, 
                            end_hour = 1.337, )
                        ], 
                    block_unrated_items = [
                        'Movie'
                        ], 
                    enable_remote_control_of_other_users = True, 
                    enable_shared_device_control = True, 
                    enable_remote_access = True, 
                    enable_live_tv_management = True, 
                    enable_live_tv_access = True, 
                    enable_media_playback = True, 
                    enable_audio_playback_transcoding = True, 
                    enable_video_playback_transcoding = True, 
                    enable_playback_remuxing = True, 
                    force_remote_source_transcoding = True, 
                    enable_content_deletion = True, 
                    enable_content_deletion_from_folders = [
                        ''
                        ], 
                    enable_content_downloading = True, 
                    enable_sync_transcoding = True, 
                    enable_media_conversion = True, 
                    enabled_devices = [
                        ''
                        ], 
                    enable_all_devices = True, 
                    enabled_channels = [
                        ''
                        ], 
                    enable_all_channels = True, 
                    enabled_folders = [
                        ''
                        ], 
                    enable_all_folders = True, 
                    invalid_login_attempt_count = 56, 
                    login_attempts_before_lockout = 56, 
                    max_active_sessions = 56, 
                    enable_public_sharing = True, 
                    blocked_media_folders = [
                        ''
                        ], 
                    blocked_channels = [
                        ''
                        ], 
                    remote_client_bitrate_limit = 56, 
                    authentication_provider_id = '', 
                    password_reset_provider_id = '', 
                    sync_play_access = 'CreateAndJoinGroups', ),
                primary_image_aspect_ratio = 1.337
            )
        else:
            return UserDto(
        )
        """

    def testUserDto(self):
        """Test UserDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
