# coding: utf-8

"""
    Jellyfin API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 10.11.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.encoding_options import EncodingOptions

class TestEncodingOptions(unittest.TestCase):
    """EncodingOptions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EncodingOptions:
        """Test EncodingOptions
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EncodingOptions`
        """
        model = EncodingOptions()
        if include_optional:
            return EncodingOptions(
                encoding_thread_count = 56,
                transcoding_temp_path = '',
                fallback_font_path = '',
                enable_fallback_font = True,
                enable_audio_vbr = True,
                down_mix_audio_boost = 1.337,
                down_mix_stereo_algorithm = 'None',
                max_muxing_queue_size = 56,
                enable_throttling = True,
                throttle_delay_seconds = 56,
                enable_segment_deletion = True,
                segment_keep_seconds = 56,
                hardware_acceleration_type = 'none',
                encoder_app_path = '',
                encoder_app_path_display = '',
                vaapi_device = '',
                qsv_device = '',
                enable_tonemapping = True,
                enable_vpp_tonemapping = True,
                enable_video_toolbox_tonemapping = True,
                tonemapping_algorithm = 'none',
                tonemapping_mode = 'auto',
                tonemapping_range = 'auto',
                tonemapping_desat = 1.337,
                tonemapping_peak = 1.337,
                tonemapping_param = 1.337,
                vpp_tonemapping_brightness = 1.337,
                vpp_tonemapping_contrast = 1.337,
                h264_crf = 56,
                h265_crf = 56,
                encoder_preset = 'auto',
                deinterlace_double_rate = True,
                deinterlace_method = 'yadif',
                enable_decoding_color_depth10_hevc = True,
                enable_decoding_color_depth10_vp9 = True,
                enable_decoding_color_depth10_hevc_rext = True,
                enable_decoding_color_depth12_hevc_rext = True,
                enable_enhanced_nvdec_decoder = True,
                prefer_system_native_hw_decoder = True,
                enable_intel_low_power_h264_hw_encoder = True,
                enable_intel_low_power_hevc_hw_encoder = True,
                enable_hardware_encoding = True,
                allow_hevc_encoding = True,
                allow_av1_encoding = True,
                enable_subtitle_extraction = True,
                hardware_decoding_codecs = [
                    ''
                    ],
                allow_on_demand_metadata_based_keyframe_extraction_for_extensions = [
                    ''
                    ]
            )
        else:
            return EncodingOptions(
        )
        """

    def testEncodingOptions(self):
        """Test EncodingOptions"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
