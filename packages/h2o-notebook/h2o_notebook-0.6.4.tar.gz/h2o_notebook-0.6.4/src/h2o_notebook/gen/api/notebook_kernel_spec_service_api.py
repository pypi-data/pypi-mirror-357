"""
    ai/h2o/notebook/v1/base_types.proto

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: version not set
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from h2o_notebook.gen.api_client import ApiClient, Endpoint as _Endpoint
from h2o_notebook.gen.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from h2o_notebook.gen.model.required_notebook_kernel_spec_resource import RequiredNotebookKernelSpecResource
from h2o_notebook.gen.model.rpc_status import RpcStatus
from h2o_notebook.gen.model.v1_create_notebook_kernel_spec_response import V1CreateNotebookKernelSpecResponse
from h2o_notebook.gen.model.v1_get_notebook_kernel_spec_response import V1GetNotebookKernelSpecResponse
from h2o_notebook.gen.model.v1_list_notebook_kernel_specs_response import V1ListNotebookKernelSpecsResponse
from h2o_notebook.gen.model.v1_notebook_kernel_spec import V1NotebookKernelSpec
from h2o_notebook.gen.model.v1_update_notebook_kernel_spec_response import V1UpdateNotebookKernelSpecResponse


class NotebookKernelSpecServiceApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.notebook_kernel_spec_service_create_notebook_kernel_spec_endpoint = _Endpoint(
            settings={
                'response_type': (V1CreateNotebookKernelSpecResponse,),
                'auth': [],
                'endpoint_path': '/v1/{parent}/notebookKernelSpecs',
                'operation_id': 'notebook_kernel_spec_service_create_notebook_kernel_spec',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'parent',
                    'notebook_kernel_spec',
                    'notebook_kernel_spec_id',
                ],
                'required': [
                    'parent',
                    'notebook_kernel_spec',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'parent',
                ]
            },
            root_map={
                'validations': {
                    ('parent',): {

                        'regex': {
                            'pattern': r'workspaces\/[^\/]+',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'parent':
                        (str,),
                    'notebook_kernel_spec':
                        (V1NotebookKernelSpec,),
                    'notebook_kernel_spec_id':
                        (str,),
                },
                'attribute_map': {
                    'parent': 'parent',
                    'notebook_kernel_spec_id': 'notebookKernelSpecId',
                },
                'location_map': {
                    'parent': 'path',
                    'notebook_kernel_spec': 'body',
                    'notebook_kernel_spec_id': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.notebook_kernel_spec_service_delete_notebook_kernel_spec_endpoint = _Endpoint(
            settings={
                'response_type': (bool, date, datetime, dict, float, int, list, str, none_type,),
                'auth': [],
                'endpoint_path': '/v1/{name_3}',
                'operation_id': 'notebook_kernel_spec_service_delete_notebook_kernel_spec',
                'http_method': 'DELETE',
                'servers': None,
            },
            params_map={
                'all': [
                    'name_3',
                ],
                'required': [
                    'name_3',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'name_3',
                ]
            },
            root_map={
                'validations': {
                    ('name_3',): {

                        'regex': {
                            'pattern': r'workspaces\/[^\/]+\/notebookKernelSpecs\/[^\/]+',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'name_3':
                        (str,),
                },
                'attribute_map': {
                    'name_3': 'name_3',
                },
                'location_map': {
                    'name_3': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.notebook_kernel_spec_service_get_notebook_kernel_spec_endpoint = _Endpoint(
            settings={
                'response_type': (V1GetNotebookKernelSpecResponse,),
                'auth': [],
                'endpoint_path': '/v1/{name_5}',
                'operation_id': 'notebook_kernel_spec_service_get_notebook_kernel_spec',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'name_5',
                ],
                'required': [
                    'name_5',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'name_5',
                ]
            },
            root_map={
                'validations': {
                    ('name_5',): {

                        'regex': {
                            'pattern': r'workspaces\/[^\/]+\/notebookKernelSpecs\/[^\/]+',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'name_5':
                        (str,),
                },
                'attribute_map': {
                    'name_5': 'name_5',
                },
                'location_map': {
                    'name_5': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.notebook_kernel_spec_service_list_notebook_kernel_specs_endpoint = _Endpoint(
            settings={
                'response_type': (V1ListNotebookKernelSpecsResponse,),
                'auth': [],
                'endpoint_path': '/v1/{parent}/notebookKernelSpecs',
                'operation_id': 'notebook_kernel_spec_service_list_notebook_kernel_specs',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'parent',
                    'page_size',
                    'page_token',
                ],
                'required': [
                    'parent',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'parent',
                ]
            },
            root_map={
                'validations': {
                    ('parent',): {

                        'regex': {
                            'pattern': r'workspaces\/[^\/]+',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'parent':
                        (str,),
                    'page_size':
                        (int,),
                    'page_token':
                        (str,),
                },
                'attribute_map': {
                    'parent': 'parent',
                    'page_size': 'pageSize',
                    'page_token': 'pageToken',
                },
                'location_map': {
                    'parent': 'path',
                    'page_size': 'query',
                    'page_token': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.notebook_kernel_spec_service_update_notebook_kernel_spec_endpoint = _Endpoint(
            settings={
                'response_type': (V1UpdateNotebookKernelSpecResponse,),
                'auth': [],
                'endpoint_path': '/v1/{notebookKernelSpec.name}',
                'operation_id': 'notebook_kernel_spec_service_update_notebook_kernel_spec',
                'http_method': 'PATCH',
                'servers': None,
            },
            params_map={
                'all': [
                    'notebook_kernel_spec_name',
                    'update_mask',
                    'notebook_kernel_spec',
                ],
                'required': [
                    'notebook_kernel_spec_name',
                    'update_mask',
                    'notebook_kernel_spec',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'notebook_kernel_spec_name',
                ]
            },
            root_map={
                'validations': {
                    ('notebook_kernel_spec_name',): {

                        'regex': {
                            'pattern': r'workspaces\/[^\/]+\/notebookKernelSpecs\/[^\/]+',  # noqa: E501
                        },
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'notebook_kernel_spec_name':
                        (str,),
                    'update_mask':
                        (str,),
                    'notebook_kernel_spec':
                        (RequiredNotebookKernelSpecResource,),
                },
                'attribute_map': {
                    'notebook_kernel_spec_name': 'notebookKernelSpec.name',
                    'update_mask': 'updateMask',
                },
                'location_map': {
                    'notebook_kernel_spec_name': 'path',
                    'update_mask': 'query',
                    'notebook_kernel_spec': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

    def notebook_kernel_spec_service_create_notebook_kernel_spec(
        self,
        parent,
        notebook_kernel_spec,
        **kwargs
    ):
        """Creates a new NotebookKernelSpec.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.notebook_kernel_spec_service_create_notebook_kernel_spec(parent, notebook_kernel_spec, async_req=True)
        >>> result = thread.get()

        Args:
            parent (str): Required. The resource name of the workspace to associate with the NotebookKernelSpec. Format is `workspaces/*`.
            notebook_kernel_spec (V1NotebookKernelSpec): Required. The NotebookKernelSpec resource to create.

        Keyword Args:
            notebook_kernel_spec_id (str): Optional. Specify the NotebookKernelSpec ID, which will become a part of the NotebookKernelSpec resource name. If not specified, the server will generate one.  It must: - contain 1-63 characters - contain only lowercase alphanumeric characters or hyphen ('-') - start with an alphabetic character - end with an alphanumeric character  This matches a regular expression: ^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            V1CreateNotebookKernelSpecResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['parent'] = \
            parent
        kwargs['notebook_kernel_spec'] = \
            notebook_kernel_spec
        return self.notebook_kernel_spec_service_create_notebook_kernel_spec_endpoint.call_with_http_info(**kwargs)

    def notebook_kernel_spec_service_delete_notebook_kernel_spec(
        self,
        name_3,
        **kwargs
    ):
        """Deletes a NotebookKernelSpec.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.notebook_kernel_spec_service_delete_notebook_kernel_spec(name_3, async_req=True)
        >>> result = thread.get()

        Args:
            name_3 (str): Required. NotebookKernelSpec resource name. Format is `workspaces/*/notebookKernelSpecs/*`.

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            bool, date, datetime, dict, float, int, list, str, none_type
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['name_3'] = \
            name_3
        return self.notebook_kernel_spec_service_delete_notebook_kernel_spec_endpoint.call_with_http_info(**kwargs)

    def notebook_kernel_spec_service_get_notebook_kernel_spec(
        self,
        name_5,
        **kwargs
    ):
        """Returns a specific NotebookKernelSpec.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.notebook_kernel_spec_service_get_notebook_kernel_spec(name_5, async_req=True)
        >>> result = thread.get()

        Args:
            name_5 (str): Required. The name of the NotebookKernelSpec to retrieve. Format is `workspaces/*/notebookKernelSpecs/*`.

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            V1GetNotebookKernelSpecResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['name_5'] = \
            name_5
        return self.notebook_kernel_spec_service_get_notebook_kernel_spec_endpoint.call_with_http_info(**kwargs)

    def notebook_kernel_spec_service_list_notebook_kernel_specs(
        self,
        parent,
        **kwargs
    ):
        """Returns a collection of NotebookKernelSpecs.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.notebook_kernel_spec_service_list_notebook_kernel_specs(parent, async_req=True)
        >>> result = thread.get()

        Args:
            parent (str): Required. The resource name of the workspace to associate with the NotebookKernelSpec. Format is `workspaces/*`.

        Keyword Args:
            page_size (int): Optional. Maximum number of NotebookKernelSpecs to return in a response. If unspecified (or set to 0), at most 50 NotebookKernelSpecs will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.. [optional]
            page_token (str): Optional. Leave unset to receive the initial page. To list any subsequent pages use the value of 'next_page_token' returned from the ListNotebookKernelSpecsResponse.. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            V1ListNotebookKernelSpecsResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['parent'] = \
            parent
        return self.notebook_kernel_spec_service_list_notebook_kernel_specs_endpoint.call_with_http_info(**kwargs)

    def notebook_kernel_spec_service_update_notebook_kernel_spec(
        self,
        notebook_kernel_spec_name,
        update_mask,
        notebook_kernel_spec,
        **kwargs
    ):
        """Updates a NotebookKernelSpec.  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.notebook_kernel_spec_service_update_notebook_kernel_spec(notebook_kernel_spec_name, update_mask, notebook_kernel_spec, async_req=True)
        >>> result = thread.get()

        Args:
            notebook_kernel_spec_name (str): Output only. Resource name. Format is `workspaces/*/notebookKernelSpecs/*`.
            update_mask (str): Required. The list of paths referencing which fields to update. Update mask must be non-empty.  Allowed field paths are: - display_name - kernel_image - kernel_template - disabled Paths are case sensitive (must match exactly).  To update all allowed fields, specify exactly one path with value \"*\".
            notebook_kernel_spec (RequiredNotebookKernelSpecResource): Required. NotebookKernelSpec resource.

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            V1UpdateNotebookKernelSpecResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['notebook_kernel_spec_name'] = \
            notebook_kernel_spec_name
        kwargs['update_mask'] = \
            update_mask
        kwargs['notebook_kernel_spec'] = \
            notebook_kernel_spec
        return self.notebook_kernel_spec_service_update_notebook_kernel_spec_endpoint.call_with_http_info(**kwargs)

