name: Publish Python Package

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags like v1.2.0, v1.3.0, etc.

permissions:
  contents: write  # Allow write access to create releases

jobs:
  build-and-publish:
    runs-on: ubuntu-latest  # Runs the job on an Ubuntu environment

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4  # Checkout the code from the repository

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'  # Use any Python 3.x version available (you can specify an exact version like 3.9 or 3.10)

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip  # Upgrade pip to the latest version
        pip install build  # Install the 'build' package to build the distribution

    - name: Build package
      run: python -m build  # Build the Python package (it will create the distribution)

    - name: Publish package to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        python -m pip install --upgrade pip
        pip install twine
        twine upload dist/*

    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create "${GITHUB_REF_NAME}" --generate-notes --title "${GITHUB_REF_NAME}"