@book{Doherty:2015,
    author = {{Doherty}, J.},
    title = {Calibration and Uncertainty Analysis for Complex Environmental Models},
    publisher = {Watermark Numerical Computing},
    address = {Brisbane, Australia},
    year = {2015},
    isbn = {978-0-9943786-0-6}
}

@article{JONES:2003,
  author    = {J. W. Jones and G. Hoogenboom and C. H. Porter and K. J. Boote and W. D. Batchelor and L. A. Hunt and P. W. Wilkens and U. Singh and A. J. Gijsman and J. T. Ritchie},
  title     = {The {DSSAT} cropping system model},
  journal   = {European Journal of Agronomy},
  volume    = {18},
  number    = {3},
  pages     = {235-265},
  year      = {2003},
  note      = {Modelling Cropping Systems: Science, Software and Applications},
  issn      = {1161-0301},
  doi       = {10.1016/S1161-0301(02)00107-7},
  url       = {https://www.sciencedirect.com/science/article/pii/S1161030102001077},
  keywords  = {Crop simulation, Weather, Research tool, Decision aid},
  abstract  = {The decision support system for agrotechnology transfer (DSSAT) has been in use for the last 15 years by researchers worldwide. This package incorporates models of 16 different crops with software that facilitates the evaluation and application of the crop models for different purposes. Over the last few years, it has become increasingly difficult to maintain the DSSAT crop models, partly due to the fact that there were different sets of computer code for different crops with little attention to software design at the level of crop models themselves. Thus, the DSSAT crop models have been re-designed and programmed to facilitate more efficient incorporation of new scientific advances, applications, documentation and maintenance. The basis for the new DSSAT cropping system model (CSM) design is a modular structure in which components separate along scientific discipline lines and are structured to allow easy replacement or addition of modules. It has one Soil module, a Crop Template module which can simulate different crops by defining species input files, an interface to add individual crop models if they have the same design and interface, a Weather module, and a module for dealing with competition for light and water among the soil, plants, and atmosphere. It is also designed for incorporation into various application packages, ranging from those that help researchers adapt and test the CSM to those that operate the DSSAT--CSM to simulate production over time and space for different purposes. In this paper, we describe this new DSSAT--CSM design as well as approaches used to model the primary scientific components (soil, crop, weather, and management). In addition, the paper describes data requirements and methods used for model evaluation. We provide an overview of the hundreds of published studies in which the DSSAT crop models have been used for various applications. The benefits of the new, re-designed DSSAT--CSM will provide considerable opportunities to its developers and others in the scientific community for greater cooperation in interdisciplinary research and in the application of knowledge to solve problems at field, farm, and higher levels.}
}

@article{Kasampalis:2018,
    author = {{Kasampalis}, D. A. and {Alexandridis}, T. K. and {Deva}, C. and {Challinor}, A. and {Moshou}, D. and {Zalidis}, G.},
    title = {Contribution of Remote Sensing on Crop Models: A Review},
    journal = {Journal of Imaging},
    year = {2018},
    volume = {4},
    number = {4},
    article-number = {52},
    doi = {10.3390/jimaging4040052},
    url = {https://doi.org/10.3390/jimaging4040052}
}

@article{Ma:2020,
    author = {{Ma}, H. and {Malone}, R. W. and {Jiang}, T. and {Yao}, N. and {Chen}, S. and {Song}, L. and {Feng}, H. and {Yu}, Q. and {He}, J.},
    title = {Estimating crop genetic parameters for DSSAT with modified PEST software},
    journal = {European Journal of Agronomy},
    year = {2020},
    volume = {115},
    pages = {126017},
    issn = {1161-0301},
    doi = {10.1016/j.eja.2020.126017},
    url = {https://www.sciencedirect.com/science/article/pii/S1161030120300253}
}

@misc{Vargas-Rojas:2024,
    author = {{Vargas-Rojas}, L. and {Wang}, D. and {Reynolds}, M.},
    title = {How Can We Streamline Wheat Model Calibration with Remote Sensing?},
    year = {2024},
    note = {[Abstract]},
    journal = {ASA, CSSA, SSSA International Annual Meeting},
    address = {San Antonio, TX},
    url = {https://scisoc.confex.com/scisoc/2024am/meetingapp.cgi/Paper/161215}
}

@article{White:2016,
    title = {A python framework for environmental model uncertainty analysis},
    journal = {Environmental Modelling & Software},
    volume = {85},
    pages = {217-228},
    year = {2016},
    issn = {1364-8152},
    doi = {https://doi.org/10.1016/j.envsoft.2016.08.017},
    url = {https://www.sciencedirect.com/science/article/pii/S1364815216305461},
    author = {Jeremy T. White and Michael N. Fienen and John E. Doherty},
    keywords = {Uncertainty analysis, FOSM, Python, Model independent, Highly-parameterized, Data worth analysis},
    abstract = {We have developed pyEMU, a python framework for Environmental Modeling Uncertainty analyses, open-source tool that is non-intrusive, easy-to-use, computationally efficient, and scalable to highly-parameterized inverse problems. The framework implements several types of linear (first-order, second-moment (FOSM)) and non-linear uncertainty analyses. The FOSM-based analyses can also be completed prior to parameter estimation to help inform important modeling decisions, such as parameterization and objective function formulation. Complete workflows for several types of FOSM-based and non-linear analyses are documented in example notebooks implemented using Jupyter that are available in the online pyEMU repository. Example workflows include basic parameter and forecast analyses, data worth analyses, and error-variance analyses, as well as usage of parameter ensemble generation and management capabilities. These workflows document the necessary steps and provides insights into the results, with the goal of educating users not only in how to apply pyEMU, but also in the underlying theory of applied uncertainty quantification.}
}

