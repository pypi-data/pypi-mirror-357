[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "qubots"
version = "1.1.3"
description = "A collaborative optimization framework for creating optimization tools."
authors = [
    { name = "Ioannis D. Leonidas", email = "gleonidas303@gmail.com" }
]
license = { file = "LICENSE" }
readme = "README.md"
requires-python = ">=3.9"
keywords = [
    "optimization",
    "quantum",
    "classical",
    "community",
    "operations-research",
    "decision-variables",
    "routing",
    "scheduling",
    "logistics",
    "finance",
    "energy",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent"
]
dependencies = [
    "typer>=0.9.0",
    "requests>=2.28.0",
    "python-dotenv>=0.19.0",
    "numpy>=1.20.0",
    "pandas>=1.3.0",
]

[project.optional-dependencies]
# Domain-specific dependencies
routing = [
    "ortools>=9.0.0",
    "matplotlib>=3.5.0",
]
continuous = [
    "casadi>=3.5.0",
    "scipy>=1.7.0",
]
finance = [
    "cvxpy>=1.2.0",
    "yfinance>=0.1.70",
    "scipy>=1.7.0",
]
energy = [
    "pyomo>=6.4.0",
    "matplotlib>=3.5.0",
]
fantasy_football = [
    "ortools>=9.0.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
]

# Development dependencies
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.8.0",
    "pytest-benchmark>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=0.991",
    "pre-commit>=2.20.0",
    "tox>=3.25.0",
    "psutil>=5.8.0",  # For enhanced debugging and system monitoring
]

# Testing dependencies
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.8.0",
    "pytest-benchmark>=4.0.0",
    "pytest-xdist>=2.5.0",
    "psutil>=5.8.0",  # For enhanced debugging and system monitoring
]

# Documentation dependencies
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
    "sphinx-autodoc-typehints>=1.19.0",
]

# All optional dependencies
all = [
    "ortools>=9.0.0",
    "casadi>=3.5.0",
    "cvxpy>=1.2.0",
    "pyomo>=6.4.0",
    "yfinance>=0.1.70",
    "scipy>=1.7.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "jupyter>=1.0.0",
]

[project.urls]
"Homepage" = "https://rastion.com"
"Documentation" = "https://rastion.com/docs"
"Repository" = "https://github.com/Rastion/qubots"
"Bug Tracker" = "https://github.com/Rastion/qubots/issues"
"Changelog" = "https://github.com/Rastion/qubots/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["."]
include = ["qubots*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
qubots = ["py.typed"]

# Testing configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "benchmark: marks tests as benchmarks",
    "rastion: marks tests requiring Rastion platform",
]
addopts = [
    "--strict-markers",
    "--tb=short",
    "--cov=qubots",
    "--cov-report=term-missing",
    "--cov-report=html",
]

# Coverage configuration
[tool.coverage.run]
source = ["qubots"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "setup.py",
    "*/examples/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

# Black formatting
[tool.black]
line-length = 100
target-version = ["py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# mypy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "ortools.*",
    "casadi.*",
    "cvxpy.*",
    "pyomo.*",
    "matplotlib.*",
    "seaborn.*",
]
ignore_missing_imports = true
