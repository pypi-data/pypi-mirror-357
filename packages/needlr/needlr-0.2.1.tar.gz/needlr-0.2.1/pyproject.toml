[project]
name = "needlr"
version = "0.2.1"
description = "Needlr provides a unified cross-experience Microsoft Fabric SDK."
readme = "README.md"
requires-python = ">=3.8"
authors = [
     {name = "Tonio Lora", email = "tonio.lora@microsoft.com"},
     {name = "Tim Brown", email = "timothy.brown@microsoft.com"},
     {name = "Emily Nguyen", email = "emily.nguyen@microsoft.com"},
     {name = "Bret Myers", email = "bret.myers@microsoft.com"},
     {name = "Will Johnson", email = "will.johnson@microsoft.com"}
]
dependencies = [
    "msal>=1.31.0",
    "pydantic>=2.8.0",
    "pyodbc>=5.2.0",
    "requests>=2.32.3",
]

classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Information Technology",
  "Intended Audience :: System Administrators",
  "Topic :: Software Development",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12"
]

[tool.setuptools]
py-modules = []

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["needlr*"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[project.optional-dependencies]
dev = [
    "annotated-types==0.7.0",
    "azure-identity>=1.19.0",
    "azure-storage-file-datalake>=12.18.0",
    "pytest>=8.3.4",
    "pytest-order==1.2.1",
    "python-dotenv==1.0.1",
    "ruff==0.7.1",
    "sphinx>=7.1.2",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--verbose"
testpaths = [
    "tests"
]
