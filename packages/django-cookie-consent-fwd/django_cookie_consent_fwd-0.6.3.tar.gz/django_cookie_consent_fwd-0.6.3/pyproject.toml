[build-system]
requires = ["setuptools>=61.0.0"]
build-backend = "setuptools.build_meta"

[project]
name = "django-cookie-consent-fwd"
version = "0.6.3"
description = "Django cookie consent application"
authors = [
    {name = "Informatika Mihelac", email = "bmihelac@mihelac.org"}
]
readme = "README.md"
license = {file = "LICENSE"}
keywords = ["cookies", "cookie-consent", "cookie bar"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: Django",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "django>=4.2",
    "django-appconf",
    "django-modeltranslation>=0.18.0",
]

[project.urls]
"Source Code (fork)" = "https://github.com/FWDhr/django-cookie-consent-fwd"
Documentation = "https://django-cookie-consent.readthedocs.io/en/latest/"
Changelog = "https://github.com/jazzband/django-cookie-consent/blob/master/docs/changelog.rst"
"Bug Tracker" = "https://github.com/jazzband/django-cookie-consent/issues"
"Source Code" = "https://github.com/jazzband/django-cookie-consent"

[project.optional-dependencies]
tests = [
    "pytest",
    "pytest-django",
    "pytest-playwright",
    "tox",
    "isort",
    "black",
    "flake8",
]
coverage = [
    "pytest-cov",
]
docs = [
    "sphinx",
    "sphinx-rtd-theme",
]
release = [
    "tbump",
]

[tool.setuptools.packages.find]
include = ["cookie_consent*"]
namespaces = true

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
"cookie_consent" = [
    "locale/*/LC_MESSAGES/*.po",
    "locale/*/LC_MESSAGES/*.mo",
]

[tool.isort]
profile = "black"
combine_as_imports = true
skip = ["env", ".tox", ".history", ".eggs"]
known_django = "django"
known_first_party="cookie_consent"
sections=["FUTURE", "STDLIB", "DJANGO", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.pytest.ini_options]
testpaths = ["tests"]
DJANGO_SETTINGS_MODULE = "testapp.settings"
markers = [
    "e2e: mark tests as end-to-end tests, using playwright (deselect with '-m \"not e2e\"')",
]

[tool.bumpversion]
current_version = "0.1.0"
files = [
    {filename = "pyproject.toml"},
    {filename = "README.rst"},
    {filename = "docs/conf.py"},
]

[tool.coverage.run]
branch = true
source = ["cookie_consent"]
omit = [
    # migrations run while django initializes the test db
    "*/migrations/*",
]

[tool.coverage.report]
skip_covered = true
exclude_also = [
    "if (typing\\.)?TYPE_CHECKING:",
    "@(typing\\.)?overload",
    "class .*\\(.*Protocol.*\\):",
    "@(abc\\.)?abstractmethod",
    "raise NotImplementedError",
    "\\.\\.\\.",
    "pass",
]
