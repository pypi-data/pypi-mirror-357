name: Build and Upload to PyPI

on: [push, pull_request]

jobs:
  build_sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Build sdist
        run: |
          python -m pip install -U pip build
          python -m build --sdist -Csetup-args=-Dsdist=true

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: ./dist/*.tar.gz

  build_wheels:
    runs-on: windows-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v4
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-expat
            mingw-w64-x86_64-icu
            mingw-w64-x86_64-harfbuzz
            mingw-w64-x86_64-freetype
            mingw-w64-x86_64-fontconfig
            mingw-w64-x86_64-cairo
            mingw-w64-x86_64-curl-winssl
            mingw-w64-x86_64-libjpeg-turbo
            mingw-w64-x86_64-libwebp
            mingw-w64-x86_64-meson
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-pkgconf
            mingw-w64-x86_64-python
            mingw-w64-x86_64-python-pip
            mingw-w64-x86_64-gcc

      - name: Checkout plutobook
        uses: actions/checkout@v4
        with:
          repository: plutoprint/plutobook
          path: plutobook
      - name: Build plutobook
        run: |
          cd plutobook
          meson setup build \
            --prefix='${{ github.workspace }}/plutobook-win-x64' \
            --buildtype=release \
            --wrap-mode=nodownload \
            --prefer-static \
            -Dcpp_link_args='-static -static-libgcc -static-libstdc++ -lwinpthread' \
            -Dcpp_args='-DCAIRO_WIN32_STATIC_BUILD -DCURL_STATICLIB -DU_STATIC_IMPLEMENTATION'
          meson install --strip -C build

      - name: Copy build dependencies
        run: |
          sed -i '/^Requires\.private/d' plutobook-win-x64/lib/pkgconfig/plutobook.pc
          cp -v /mingw64/bin/pkgconf.exe plutobook-win-x64/bin
          cp -v /mingw64/bin/libpkgconf-*.dll plutobook-win-x64/bin

      - name: Upload plutobook
        uses: actions/upload-artifact@v4
        with:
          name: plutobook-win-x64
          path: plutobook-win-x64/

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.0.0
        env:
          CIBW_BUILD: cp38-win_amd64 cp39-win_amd64 cp310-win_amd64 cp311-win_amd64 cp312-win_amd64
          CIBW_BEFORE_BUILD_WINDOWS: pip install delvewheel
          CIBW_ENVIRONMENT_WINDOWS:
            PKG_CONFIG='${{ github.workspace }}/plutobook-win-x64/bin/pkgconf.exe'
            PKG_CONFIG_PATH='${{ github.workspace }}/plutobook-win-x64/lib/pkgconfig'
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS:
            delvewheel repair -vv -w {dest_dir} {wheel} --add-path ${{ github.workspace }}/plutobook-win-x64/bin
          CIBW_TEST_COMMAND:
            python -c "import plutoprint; print(plutoprint.__build_info__)"

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels
          path: ./wheelhouse/*.whl

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: cibw-*
          merge-multiple: true

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
