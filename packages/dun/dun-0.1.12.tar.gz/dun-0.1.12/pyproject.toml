[tool.poetry]
name = "dun"
version = "0.1.12"
description = "Dynamiczny procesor danych z automatycznym wykrywaniem bibliotek"
authors = ["Tom Sapletta <info@softreck.dev>"]
readme = "README.md"
license = "MIT"
packages = [
    { include = "dun", from = "src" },
]

include = [
    "README.md",
    "LICENSE",
    "pyproject.toml",
    "start.sh",
    "setup_test_emails.py",
    "docker-compose.yml",
    "Dockerfile",
    "docker/*",
]

[tool.poetry.dependencies]
python = "^3.11"
lxml = "^4.9.0"
beautifulsoup4 = "^4.12.0"
Pillow = "^10.0.0"
python-magic = "^0.4.27"
python-dateutil = "^2.8.2"
requests = "^2.31.0"
ujson = "^5.8.0"
tqdm = "^4.66.0"
pytz = "^2023.3"
pandas = "^2.0.0"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
jinja2 = "^3.1.2"
pydantic = "^2.5.0"
loguru = "^0.7.2"
python-dotenv = "^1.0.0"

[tool.poetry.scripts]
dun = "dun.__main__:main"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
black = "^23.11.0"
isort = "^5.12.0"
mypy = "^1.5.1"
flake8 = "^6.1.0"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=dun --cov-report=term-missing"
log_cli = true
log_cli_level = "INFO"

[tool.coverage.run]
source = ["dun"]
omit = ["**/__init__.py"]

[tool.coverage.report]
show_missing = true
skip_covered = true

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88

