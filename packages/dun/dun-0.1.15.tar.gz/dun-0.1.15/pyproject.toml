[tool.poetry]
name = "dun"
version = "0.1.15"
description = "Dynamiczny procesor danych z automatycznym wykrywaniem bibliotek"
authors = ["Tom Sapletta <info@softreck.dev>"]
readme = "README.md"
license = "MIT"
packages = [
    { include = "dun", from = "src" },
]

include = [
    "README.md",
    "LICENSE",
    "pyproject.toml",
    "start.sh",
    "setup_test_emails.py",
    "docker-compose.yml",
    "Dockerfile",
    "docker/*",
]

[tool.poetry.dependencies]
python = "^3.11"
# Core dependencies
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
python-dotenv = "^1.0.0"
loguru = "^0.7.2"
rich = "^13.6.0"

# Data processing
pandas = "^2.0.0"
numpy = "^1.26.0"
python-dateutil = "^2.8.2"

# Networking
requests = "^2.31.0"
aiohttp = "^3.8.6"

# Web framework (for future API endpoints)
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}

# Optional dependencies for specific features
ollama = {version = "^0.1.5", optional = true}

[tool.poetry.extras]
ollama = ["ollama"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100
select = ["E", "F", "I"]
ignore = [
    "E203",  # Whitespace before ':' (handled by black)
    "E501",  # Line too long (handled by black)
]

[tool.ruff.isort]
known-first-party = ["dun"]

[tool.black]
line-length = 100
target-version = ["py311"]
include = '\.pyi?$'

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_calls = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true

[[tool.mypy.overrides]]
module = ["pandas.*", "numpy.*", "fastapi.*"]
ignore_missing_imports = true

[tool.poetry.scripts]
dun = "dun.__main__:main"
format = "scripts.format:main"
lint = "scripts.lint:main"
test = "scripts.test:main"

[tool.isort]
profile = "black"
line_length = 88

[tool.flake8]
max-line-length = 88
extend-ignore = "E203, E266, E501, W503, F403, F401"
max-complexity = 18
select = "B,C,E,F,W,T4,B9"
per-file-ignores = [
    "__init__.py: F401",
    "tests/*: F403, F405, F811",
    "examples/*: E402",
    "**/migrations/*: E501",
    "**/templates/*: E501",
    "**/admin.py: E128",
    "**/models.py: E128",
    "**/views.py: E128",
    "**/urls.py: E128"
]

