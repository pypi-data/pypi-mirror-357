Metadata-Version: 2.4
Name: pyrokinetics
Version: 0.8.0
Summary: Python package for running and analysing gyrokinetic simulations
Author-email: Bhavin Patel <bhavin.s.patel@ukaea.uk>
License:   GNU LESSER GENERAL PUBLIC LICENSE
                               Version 3, 29 June 2007
        
         Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>
         Everyone is permitted to copy and distribute verbatim copies
         of this license document, but changing it is not allowed.
        
        
          This version of the GNU Lesser General Public License incorporates
        the terms and conditions of version 3 of the GNU General Public
        License, supplemented by the additional permissions listed below.
        
          0. Additional Definitions.
        
          As used herein, "this License" refers to version 3 of the GNU Lesser
        General Public License, and the "GNU GPL" refers to version 3 of the GNU
        General Public License.
        
          "The Library" refers to a covered work governed by this License,
        other than an Application or a Combined Work as defined below.
        
          An "Application" is any work that makes use of an interface provided
        by the Library, but which is not otherwise based on the Library.
        Defining a subclass of a class defined by the Library is deemed a mode
        of using an interface provided by the Library.
        
          A "Combined Work" is a work produced by combining or linking an
        Application with the Library.  The particular version of the Library
        with which the Combined Work was made is also called the "Linked
        Version".
        
          The "Minimal Corresponding Source" for a Combined Work means the
        Corresponding Source for the Combined Work, excluding any source code
        for portions of the Combined Work that, considered in isolation, are
        based on the Application, and not on the Linked Version.
        
          The "Corresponding Application Code" for a Combined Work means the
        object code and/or source code for the Application, including any data
        and utility programs needed for reproducing the Combined Work from the
        Application, but excluding the System Libraries of the Combined Work.
        
          1. Exception to Section 3 of the GNU GPL.
        
          You may convey a covered work under sections 3 and 4 of this License
        without being bound by section 3 of the GNU GPL.
        
          2. Conveying Modified Versions.
        
          If you modify a copy of the Library, and, in your modifications, a
        facility refers to a function or data to be supplied by an Application
        that uses the facility (other than as an argument passed when the
        facility is invoked), then you may convey a copy of the modified
        version:
        
           a) under this License, provided that you make a good faith effort to
           ensure that, in the event an Application does not supply the
           function or data, the facility still operates, and performs
           whatever part of its purpose remains meaningful, or
        
           b) under the GNU GPL, with none of the additional permissions of
           this License applicable to that copy.
        
          3. Object Code Incorporating Material from Library Header Files.
        
          The object code form of an Application may incorporate material from
        a header file that is part of the Library.  You may convey such object
        code under terms of your choice, provided that, if the incorporated
        material is not limited to numerical parameters, data structure
        layouts and accessors, or small macros, inline functions and templates
        (ten or fewer lines in length), you do both of the following:
        
           a) Give prominent notice with each copy of the object code that the
           Library is used in it and that the Library and its use are
           covered by this License.
        
           b) Accompany the object code with a copy of the GNU GPL and this license
           document.
        
          4. Combined Works.
        
          You may convey a Combined Work under terms of your choice that,
        taken together, effectively do not restrict modification of the
        portions of the Library contained in the Combined Work and reverse
        engineering for debugging such modifications, if you also do each of
        the following:
        
           a) Give prominent notice with each copy of the Combined Work that
           the Library is used in it and that the Library and its use are
           covered by this License.
        
           b) Accompany the Combined Work with a copy of the GNU GPL and this license
           document.
        
           c) For a Combined Work that displays copyright notices during
           execution, include the copyright notice for the Library among
           these notices, as well as a reference directing the user to the
           copies of the GNU GPL and this license document.
        
           d) Do one of the following:
        
               0) Convey the Minimal Corresponding Source under the terms of this
               License, and the Corresponding Application Code in a form
               suitable for, and under terms that permit, the user to
               recombine or relink the Application with a modified version of
               the Linked Version to produce a modified Combined Work, in the
               manner specified by section 6 of the GNU GPL for conveying
               Corresponding Source.
        
               1) Use a suitable shared library mechanism for linking with the
               Library.  A suitable mechanism is one that (a) uses at run time
               a copy of the Library already present on the user's computer
               system, and (b) will operate properly with a modified version
               of the Library that is interface-compatible with the Linked
               Version.
        
           e) Provide Installation Information, but only if you would otherwise
           be required to provide such information under section 6 of the
           GNU GPL, and only to the extent that such information is
           necessary to install and execute a modified version of the
           Combined Work produced by recombining or relinking the
           Application with a modified version of the Linked Version. (If
           you use option 4d0, the Installation Information must accompany
           the Minimal Corresponding Source and Corresponding Application
           Code. If you use option 4d1, you must provide the Installation
           Information in the manner specified by section 6 of the GNU GPL
           for conveying Corresponding Source.)
        
          5. Combined Libraries.
        
          You may place library facilities that are a work based on the
        Library side by side in a single library together with other library
        facilities that are not Applications and are not covered by this
        License, and convey such a combined library under terms of your
        choice, if you do both of the following:
        
           a) Accompany the combined library with a copy of the same work based
           on the Library, uncombined with any other library facilities,
           conveyed under the terms of this License.
        
           b) Give prominent notice with the combined library that part of it
           is a work based on the Library, and explaining where to find the
           accompanying uncombined form of the same work.
        
          6. Revised Versions of the GNU Lesser General Public License.
        
          The Free Software Foundation may publish revised and/or new versions
        of the GNU Lesser General Public License from time to time. Such new
        versions will be similar in spirit to the present version, but may
        differ in detail to address new problems or concerns.
        
          Each version is given a distinguishing version number. If the
        Library as you received it specifies that a certain numbered version
        of the GNU Lesser General Public License "or any later version"
        applies to it, you have the option of following the terms and
        conditions either of that published version or of any later version
        published by the Free Software Foundation. If the Library as you
        received it does not specify a version number of the GNU Lesser
        General Public License, you may choose any version of the GNU Lesser
        General Public License ever published by the Free Software Foundation.
        
          If the Library as you received it specifies that a proxy can decide
        whether future versions of the GNU Lesser General Public License shall
        apply, that proxy's public statement of acceptance of any version is
        permanent authorization for you to choose that version for the
        Library.
        
Project-URL: Source, https://github.com/pyro-kinetics/pyrokinetics
Project-URL: Tracker, https://github.com/pyro-kinetics/pyrokinetics/issues
Project-URL: Documentation, https://pyrokinetics.readthedocs.io/en/latest/
Keywords: gyrokinetics,analysis,plasma,research
Classifier: Programming Language :: Python
Classifier: Development Status :: 3 - Alpha
Classifier: Natural Language :: English
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Scientific/Engineering :: Physics
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy<=2.1.0,>=1.20.3
Requires-Dist: matplotlib>=3.3.4
Requires-Dist: f90nml>=1.4.2
Requires-Dist: scipy>=1.10.1
Requires-Dist: h5py>=2.10
Requires-Dist: netCDF4>=1.5.6
Requires-Dist: path>=15.1.2
Requires-Dist: wheel>=0.36
Requires-Dist: freeqdsk~=0.5.0
Requires-Dist: cleverdict>=1.9.1
Requires-Dist: xarray<=2024.11.0,>=0.10
Requires-Dist: pint~=0.23
Requires-Dist: pint-xarray==0.4
Requires-Dist: contourpy~=1.0
Requires-Dist: xrft>=1.0.0
Requires-Dist: idspy-dictionaries==34000.2.0
Requires-Dist: idspy-toolkit==0.6.5
Requires-Dist: pyloidal~=0.2.0
Requires-Dist: xmltodict~=0.13.0
Requires-Dist: typing-extensions>=4.6.0
Requires-Dist: simplejson>=3.17.6
Requires-Dist: jetto-tools
Requires-Dist: setuptools; python_version >= "3.12"
Requires-Dist: periodictable
Requires-Dist: toml
Requires-Dist: sympy
Requires-Dist: shapely
Provides-Extra: docs
Requires-Dist: sphinx>=5.3; extra == "docs"
Requires-Dist: sphinx_autodoc_typehints>=1.19; extra == "docs"
Requires-Dist: sphinx-book-theme>=0.4.0rc1; extra == "docs"
Requires-Dist: myst_parser>=0.14.0; extra == "docs"
Provides-Extra: tests
Requires-Dist: pytest>=3.3.0; extra == "tests"
Requires-Dist: pytest-cov; extra == "tests"
Requires-Dist: pyrokinetics-plugin-examples==0.2.1; extra == "tests"
Provides-Extra: linting
Requires-Dist: black; extra == "linting"
Requires-Dist: isort; extra == "linting"
Requires-Dist: flake8; extra == "linting"
Dynamic: license-file

[![Documentation Status](https://readthedocs.org/projects/pyrokinetics/badge/?version=latest)](https://pyrokinetics.readthedocs.io/en/latest/?badge=latest)
[![Tests](https://github.com/pyro-kinetics/pyrokinetics/workflows/tests/badge.svg?branch=unstable)](https://github.com/pyro-kinetics/pyrokinetics/actions?query=workflow%3Atests)
[![Available on pypi](https://img.shields.io/pypi/v/pyrokinetics.svg)](https://pypi.org/project/pyrokinetics/)
[![Formatted with black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/python/black)
[![Code coverage](https://codecov.io/gh/pyro-kinetics/pyrokinetics/branch/unstable/graph/badge.svg)](https://codecov.io/gh/pyro-kinetics/pyrokinetics)
[![DOI](https://joss.theoj.org/papers/10.21105/joss.05866/status.svg)](https://doi.org/10.21105/joss.05866)


# Pyrokinetics

This project aims to standardise gyrokinetic analysis. 

A general pyro object can be loaded either from simulation/experimental data or from an existing gyrokinetics file. 

In general pyrokinetics can do the following

* Read data in from:
    * Gyrokinetic input files
    * Simulations outputs
* Write input files for various GK codes
* Generate N-D pyro object for scans
* Read in gyrokinetic outputs
* Standardise analysis of gk outputs

At a minimum pyrokinetics needs the local geometry and species data. Example scripts can be found in the examples folder

## Documentation

Documentation can be found at [readthedocs](https://pyrokinetics.readthedocs.io/en/latest/).

## Installation 

Pyrokinetics requires a minimum Python version of 3.9. It may be necessary to upgrade
`pip` to install:

```bash
$ pip install --upgrade pip
```

To install the latest release:

```bash
$ pip install pyrokinetics
```

Otherwise, to install from source:

```bash 
$ git clone https://github.com/pyro-kinetics/pyrokinetics.git
$ cd pyrokinetics
$ pip install .
```

If you are planning on developing pyrokinetics use the following instead to install:

```bash 
$ pip install -e .[docs,tests]
```

Note that currently the installation of pyrokinetics requires an available Fortran compiler

## Testing

To run the tests:

```bash
$ pip install -e .[tests]
$ pytest --cov .
```

## Basic Usage

The simplest action in Pyrokinetics is to convert a gyrokinetics input file for code
'X' into an equivalent input file for code 'Y'. The easiest way to achieve this is to
use a `Pyro` object, which manages the various other classes in the API. For example,
to convert a GS2 input file to a CGYRO input file:

```python
>>> from pyrokinetics import Pyro
>>> pyro = Pyro(gk_file="my_gs2_file.in") # file type is automatically inferred
>>> pyro.write_gk_file("input.cgyro", gk_code="CGYRO")
```

There are many other features in Pyrokinetics, such as methods for building gyrokinetics
input files using global plasma equilibria and/or kinetics profiles. There are also
methods for analysing and comparing the results from gyrokinetics code runs. Please
[read the docs](https://pyrokinetics.readthedocs.io/en/latest/#) for more information.

## Command Line Interface

After installing, simple pyrokinetics operations can be performed on the command line
using either of the following methods:

```bash
$ python3 -m pyrokinetics {args...}
$ pyro {args...}
```

For example, to convert a GS2 input file to CGYRO:

```bash
$ pyro convert CGYRO "my_gs2_file.in" -o "input.cgyro"
```

You can get help on how to use the command line interface or any of its subcommands
by providing `-h` or `--help`:

```bash
$ pyro --help
$ pyro convert --help
```

## Docker

Pyrokinetics provides a `Dockerfile` from which you can build and run Docker containers.
To do so, you must have [Docker](https://docs.docker.com/engine/install/) installed on
your system. To build a local container:

```bash
$ docker build . -t pyrokinetics
```

It can then be run using:

```bash
$ docker run -it --rm -v ./path/to/local:/mymount pyrokinetics
```

where:

- `-it` runs an interactive shell.
- `--rm` deletes the Docker instance after use.
- `-v ./path/to/local:/mymount` mounts the local directory `./path/to/local` to the
  directory `/mymount` within the Docker container.

The container runs an IPython interpreter, with Pyrokinetics already installed. Note
that you will need to `import` Pyrokinetics before it can be used.

## Code structure 

Pyro object comprised of 

* Equilibrium
   * LocalGeometry
      * Miller
      * Fourier (to be added)
* Kinetics
   * LocalSpecies 
* Numerics
* GKCodes
* GKOutput
   * For nonlinear simulations
      * Fields (field, kx, ky, theta, time)
      * Fluxes (field, species, moment, ky, theta, time)
   * For linear simulations
      * Fields (field, kx, ky, theta, time)
      * Fluxes (field, species, moment, ky, theta, time)
      * Eigenfunctions (field, ky, theta, time)
      * Eigenvalues - growth rate and mode freq (ky, time)

There also exists the PyroScan object which allows you to make a N-D parameter scan of Pyro objects


## Supports sources of Equilibrium data
pyrokinetics currently supports
* [GEQDSK](https://w3.pppl.gov/ntcc/TORAY/G_EQDSK.pdf)
* [TRANSP](https://w3.pppl.gov/~pshare/help/body_transp_hlp.html#outfile56.html)
* [GACODE](https://gafusion.github.io/doc/input_gacode.html)
* [IMAS](https://conferences.iaea.org/event/251/contributions/20713/attachments/11191/16492/IMAS%20Tutorial%20-%20Pinches.pdf)

Future formats to be added are
* CHEASE


## Supported sources of Kinetic data

Sources of kinetic profile data currently supported are
* SCENE
* JETTO
* TRANSP
* GACODE
* PFILE
* IMAS

Future codes to be add 
* SimDB
* OMFIT

## Supported GK codes

The following gk codes are supported in pyrokinetics

* CGYRO
* GS2
* GENE
* TGLF
* GKW
* STELLA
* GX

## Note on units

The pyro object uses standardised reference values to normalise the results. It will automatically handle converting to a GK codes standard units.

Note any scans/parameter changes made will be in standard pyro units so please account for this.

Reference values
- $T_{ref} = T_e$ Electron temperature at flux surface
- $n_{ref} = n_e$ Electron density at flux surface
- $m_{ref} = m_D$ Deuterium mass
- $v_{ref} = c_s = \sqrt{T_e/m_D}$ Ion sound speed at flux surface
- $B_{ref} = B_0$ Toroidal field at centre of the flux surface
- $L_{ref} = a$ Minor radius of the last closed flux surface
- $t_{ref} = a/c_s$ Ion sound time at flux surface
- $\rho_{ref} = \frac{c_s}{eB_0/m_D}$ Ion Larmor radius at flux surface

It is possible to change the reference units but proceed with caution
  
## Used By

This project is used by the following institutions

- UKAEA
- University of York


Copyright owned by UKAEA. Pyrokinetics is licensed under LGPL-3.0, and is free to use, modify, and distribute.
  
