[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "grammlog"
dynamic = ["version"]
description = "Structured logging to JSONL with support for asynchronous logging via asyncio"
authors = [{ name = "GrammAcc" }]
maintainers = [{ name = "GrammAcc" }]
readme = "README.md"
# Corresponds to the License-Expression used to display the license on the pypi page.
license = "MIT"
# Indicates the actual license file that should be included in the sdist.
# Hatch will automatically include a file named "LICENSE", but explicit is better
# than implicit... especially when lawyers are involved.
license-files = { paths = ["LICENSE"] }
requires-python = ">=3.10"
keywords = ["logging", "structured-logging", "json-logging", "asyncio"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: File Formats :: JSON",
    "Topic :: System :: Logging",
    "Topic :: Utilities",
    "Typing :: Typed",
]

[project.urls]
homepage = "https://github.com/GrammAcc/grammlog"
bug_tracker = "https://github.com/GrammAcc/grammlog/issues"
documentation = "https://grammacc.github.io/grammlog"
repository = "https://github.com/GrammAcc/grammlog"

[project.optional-dependencies]
dev = ["hatch"]


[tool.hatch.version]
path = "src/grammlog/__init__.py"


[tool.hatch.build]
ignore-vcs = true
include = ["py.typed"]


[tool.hatch.build.targets.sdist]
include = ["src"]
# Hatch doesn't support 2.4 yet.
core-metadata-version = "2.3"

[tool.hatch.build.targets.wheel]
packages = ["src/grammlog"]
# Hatch doesn't support 2.4 yet.
core-metadata-version = "2.3"


[tool.hatch.envs.default]
python = "3.12"
dependencies = ["black", "flake8", "isort", "mypy"]

[tool.hatch.envs.default.scripts]
typecheck = "mypy -p grammlog"
format = ["isort --atomic .", "black ."]
lint = "flake8 src test documentation"
test = "hatch run +py=3.12 test:all {args}"
cov = "hatch run +py=3.12 test:cov"
doctest = [
    "python -m doctest src/grammlog.py {args}",
    "python -m doctest README.md {args}",
]
ci = [
    "hatch run test:all",
    "- hatch run cov",
    "hatch run doctest",
    "hatch run typecheck",
    "hatch run lint",
]
all = [
    "hatch run format",
    "- hatch run test:all",
    "- hatch run cov",
    "- hatch run doctest",
    "- hatch run typecheck",
    "- hatch run lint",
]


[tool.hatch.envs.test]
description = "Test suite"
dependencies = [
    "pytest",
    "pytest-cov",
    # See: https://github.com/pytest-dev/pytest-asyncio/issues/706
    "pytest-asyncio==0.21.2",
]

[[tool.hatch.envs.test.matrix]]
python = ["3.10", "3.11", "3.12"]

[tool.hatch.envs.test.scripts]
all = "pytest {args}"
cov = "pytest --cov-config=pyproject.toml --cov-report html:htmlcov --cov=grammlog"


[tool.hatch.envs.docs]
description = "Documentation generation and utilities"
dependencies = ["pdoc"]

[tool.hatch.envs.docs.scripts]
build = [
    "python documentation/build.py",
    "pdoc 'grammlog' --docformat='google' --output-directory='docs'",
]
serve = "python documentation/serve.py"


[tool.pytest.ini_options]
log_file = "testsuite.log"
log_file_level = "WARNING"
addopts = "--import-mode=importlib --show-capture=no"
asyncio_mode = "auto"


[tool.mypy]
check_untyped_defs = true


[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_also = [
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
fail_under = 90


[tool.isort]
profile = "black"
skip_gitignore = true
force_grid_wrap = 2


[tool.black]
line-length = 100
