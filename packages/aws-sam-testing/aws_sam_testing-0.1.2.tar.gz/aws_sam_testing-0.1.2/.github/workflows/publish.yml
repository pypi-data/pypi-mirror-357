name: Publish to PyPI

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v0.1.0, v1.0.0, etc.

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for trusted publishing
      contents: write  # Required for creating releases
      actions: read    # Required for workflow permissions
      packages: write  # Required for package publishing
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for tags
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true

    - name: Install dependencies
      run: |
        uv sync --all-extras --dev

    - name: Build package
      run: |
        uv build
    
    - name: Publish to PyPI
      run: |
        uv publish
      env:
        UV_PUBLISH_USERNAME: __token__
        UV_PUBLISH_PASSWORD: ${{ secrets.UV_PUBLISH_PASSWORD }}
    
    - name: Generate release notes
      id: release_notes
      run: |
        # Get the current tag
        TAG=${GITHUB_REF#refs/tags/}
        
        # Get the previous tag
        PREV_TAG=$(git describe --tags --abbrev=0 $TAG^ 2>/dev/null || echo "")
        
        # Generate changelog
        if [ -z "$PREV_TAG" ]; then
          echo "First release" > release_notes.md
        else
          echo "## What's Changed" > release_notes.md
          echo "" >> release_notes.md
          git log --pretty=format:"* %s (%h)" $PREV_TAG..$TAG >> release_notes.md
        fi
        
        echo "" >> release_notes.md
        echo "" >> release_notes.md
        echo "## Installation" >> release_notes.md
        echo "" >> release_notes.md
        echo "\`\`\`bash" >> release_notes.md
        echo "pip install aws-sam-testing==$TAG" >> release_notes.md
        echo "\`\`\`" >> release_notes.md
        echo "" >> release_notes.md
        echo "## Links" >> release_notes.md
        echo "" >> release_notes.md
        echo "* [PyPI Package](https://pypi.org/project/aws-sam-testing/$TAG/)" >> release_notes.md
        echo "* [Documentation](https://github.com/martin-macak/aws-sam-testing#readme)" >> release_notes.md
        
        # Set the tag name for later use
        echo "tag=$TAG" >> $GITHUB_OUTPUT
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        name: Release ${{ steps.release_notes.outputs.tag }}
        body_path: release_notes.md
        files: |
          dist/*
        draft: false
        prerelease: false