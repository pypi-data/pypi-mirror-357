[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "jdxpy"
version = "0.1.2"
description = "A Python library for development experience enhancement"
authors = [
    {name = "DxPy Developers", email = "jdxpy-developers@sugarperson.net"}
]
maintainers = [
    {name = "DxPy Developers", email = "jdxpy-developers@sugarperson.net"}
]
license = {text = "Apache-2.0"}
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["dx", "development", "experience", "tools"]

[project.urls]
Homepage = "https://github.com/sugarperson-net/jdxpy"
Repository = "https://github.com/sugarperson-net/jdxpy"
Documentation = "https://jdxpy.readthedocs.io"
Changelog = "https://github.com/sugarperson-net/jdxpy/blob/main/CHANGELOG.md"
"Bug Tracker" = "https://github.com/sugarperson-net/jdxpy/issues"

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=23.0",
    "flake8>=6.0",
    "mypy>=1.0",
    "pre-commit>=3.0",
]
docs = [
    "sphinx>=6.0",
    "sphinx-rtd-theme>=1.0",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | \.env
  | build
  | dist
  | \.cursor
  | docs/_build
)/
'''
# 文字列の正規化を有効化
skip-string-normalization = false
# マジックコンマを有効化
skip-magic-trailing-comma = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=jdxpy",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["src", "tests"]
known_first_party = ["jdxpy"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
default_section = "THIRDPARTY"
force_sort_within_sections = true
lexicographical = true
group_by_package = true
skip_glob = ["*/__pycache__/*", "*/build/*", "*/dist/*", "*/.tox/*"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
# 除外パターン
exclude = [
    "^build/",
    "^dist/",
    "^\\.venv/",
    "^\\.tox/",
    "docs/",
]
# ファイル別設定
[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.bandit]
# 除外するテストID（セキュリティに問題のない警告を除外）
skips = [
    "B101",  # assert_used（テストでのassert使用）
    "B601",  # paramiko_calls（意図的なSSH接続）
]
# 除外するパス
exclude_dirs = ["tests", "build", "dist"]
# 信頼度レベル（LOW, MEDIUM, HIGH）
confidence = "MEDIUM"
# 重要度レベル（LOW, MEDIUM, HIGH）
severity = "MEDIUM"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2
