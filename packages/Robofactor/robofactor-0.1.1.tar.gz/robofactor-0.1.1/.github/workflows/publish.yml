# This workflow will build and publish the Python package to PyPI when a release
# is published. It uses PyPI's trusted publishing feature for
# secure, passwordless deployment.
#
# For more information, see:
# - https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
# - https://github.com/pypa/gh-action-pypi-publish

name: Publish Python Package to PyPI on Release

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch all history for all branches and tags for version extraction
          fetch-depth: 0

      - name: Validate and Extract Version
        id: extract_version
        run: |
          if [[ "${{ github.ref }}" =~ ^refs/tags/v([0-9]+\.[0-9]+\.[0-9]+)$ ]]; then
            echo "version=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
          else
            echo "Error: Tag is not in a valid semantic versioning format (e.g., v1.2.3)"
            exit 1
          fi
        shell: bash

      - name: Update pyproject.toml version
        run: |
          set -e
          VERSION="${{ steps.extract_version.outputs.version }}"
          echo "Updating pyproject.toml to version ${VERSION}"
          sed -i "s/^version = \".*\"/version = \"${VERSION}\"/" pyproject.toml
          echo "Verifying pyproject.toml:"
          grep "version =" pyproject.toml

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Build package
        run: uv build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-package
          path: dist/
          # Increase retention to reduce risk of expiration between jobs.
          retention-days: 7

  pypi-publish:
    name: Upload release to PyPI
    if: github.event_name == 'release' && github.event.action == 'published'
    # This job depends on the build job completing successfully.
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/robofactor
    permissions:
      # This permission is required for trusted publishing.
      id-token: write
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: python-package
          path: dist/

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
