[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "dynamic-data-set"
version = "0.1.0"
description = "A CLI tool to convert CSV files to Parquet format, Parquet files to CSV, and display formatted content of data files."
readme = "README.md"
license = { file = "LICENSE" }
authors = [{ name = "KingYen.", email = "1696918097@qq.com" }]
maintainers = [{ name = "KingYen.", email = "1696918097@qq.com" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]
keywords = ["csv", "parquet", "data", "conversion", "cli"]
requires-python = ">=3.10"
dependencies = ["pandas>=2.0.0", "typer>=0.9.0"]

[project.optional-dependencies]
dev = ["pytest>=7.0.0", "pytest-cov>=4.0.0", "pre-commit>=3.0.0"]
test = ["pytest>=7.0.0", "pytest-cov>=4.0.0"]

[project.urls]
Homepage = "https://github.com/Wenrh2004/dynamic-data-set"
Repository = "https://github.com/Wenrh2004/dynamic-data-set"
Documentation = "https://github.com/Wenrh2004/dynamic-data-set#readme"
"Bug Reports" = "https://github.com/Wenrh2004/dynamic-data-set/issues"

[project.scripts]
dynamic-data-set = "dynamic_data_set.cli:app"
dds = "dynamic_data_set.cli:app"

[tool.hatch.build.targets.wheel]
packages = ["src/dynamic_data_set"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=dynamic_data_set",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
# Exclude commonly ignored directories.
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "build",
    "dist",
    "node_modules",
    "site-packages",
]

# Set line length and target Python version.
line-length = 88
indent-width = 4
target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes and pycodestyle rules.
select = ["E", "F"]
ignore = []
fixable = ["ALL"]

[tool.ruff.format]
# Use double quotes for strings.
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[dependency-groups]
dev = ["pytest-cov>=6.2.1"]
