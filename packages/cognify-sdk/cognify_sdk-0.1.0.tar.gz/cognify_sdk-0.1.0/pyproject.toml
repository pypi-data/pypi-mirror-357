[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "cognify-sdk"
version = "0.1.0"
description = "Python SDK for Cognify AI platform"
readme = "README.md"
license = "MIT"
requires-python = ">=3.11"
authors = [
    { name = "Cognify Team", email = "support@cognify.ai" },
]
keywords = ["cognify", "ai", "sdk", "api", "rag", "documents"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "httpx>=0.25.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "typing-extensions>=4.0.0",
    "python-dotenv>=1.0.0",
    "PyJWT>=2.8.0",
    "cryptography>=41.0.0",
    "python-dateutil>=2.8.0",
    "aiofiles>=23.2.0",
    "python-multipart>=0.0.6",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "httpx-mock>=0.10.0",

    # Code formatting and linting
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "pylint>=2.17.0",
    "ruff>=0.1.0",

    # Type checking
    "mypy>=1.0.0",
    "types-python-dateutil>=2.8.0",
    "types-requests>=2.31.0",

    # Security and quality
    "bandit>=1.7.0",
    "safety>=2.3.0",

    # Development tools
    "pre-commit>=3.0.0",
    "build>=0.10.0",
    "twine>=4.0.0",
    "wheel>=0.40.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.20.0",
]

[project.urls]
Homepage = "https://github.com/cognify-ai/cognify-py-sdk"
Documentation = "https://cognify-py-sdk.readthedocs.io"
Repository = "https://github.com/cognify-ai/cognify-py-sdk"
Issues = "https://github.com/cognify-ai/cognify-py-sdk/issues"

[tool.hatch.build.targets.wheel]
packages = ["cognify_sdk"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true



# Coverage configuration

exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=cognify_sdk",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=90",
    "--strict-markers",
    "--strict-config",
]
asyncio_mode = "auto"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "performance: Performance tests",
]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"tests/*" = ["B011"]



[tool.coverage.run]
source = ["cognify_sdk"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
