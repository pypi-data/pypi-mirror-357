name: Update Changelog on Release

on:
  release:
    types: [published]

permissions:
  contents: write
  pull-requests: write

jobs:
  update-changelog:
    runs-on: runner-set
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Update changelog
        run: |
          # Get release information
          RELEASE_TAG="${{ github.event.release.tag_name }}"
          RELEASE_NAME="${{ github.event.release.name }}"
          RELEASE_BODY=$(cat << 'EOF'
          ${{ github.event.release.body }}
          EOF
          )
          RELEASE_DATE=$(date -u +"%Y-%m-%d")
          
          # Create temporary file with new release entry
          cat > release_entry.md << EOF
          ## [$RELEASE_TAG] - $RELEASE_DATE
          
          ### Release: $RELEASE_NAME
          
          $RELEASE_BODY
          
          ---
          
          EOF
          
          # Check if changelog exists
          if [ -f "docs/changelog.md" ]; then
            # Create a backup
            cp docs/changelog.md docs/changelog.md.bak
            
            # Check if file has a header (usually starts with # Changelog)
            if grep -q "^# " docs/changelog.md; then
              # Extract header (everything before the first ## or empty line after #)
              awk '/^# /{print; getline; while(!/^##/ && NF>0){print; getline}} /^##/{exit}' docs/changelog.md > header.md
              
              # Extract existing content (everything from first ## onwards)
              awk '/^##/{f=1} f' docs/changelog.md > content.md
              
              # Combine: header + new release + existing content
              cat header.md > docs/changelog.md
              echo "" >> docs/changelog.md
              cat release_entry.md >> docs/changelog.md
              cat content.md >> docs/changelog.md
            else
              # No header, just prepend the new release
              cat release_entry.md > temp_changelog.md
              cat docs/changelog.md >> temp_changelog.md
              mv temp_changelog.md docs/changelog.md
            fi
            
            # Clean up temporary files
            rm -f header.md content.md release_entry.md docs/changelog.md.bak
          else
            # Create new changelog with header
            cat > docs/changelog.md << EOF
          # Changelog
          
          All notable changes to this project will be documented in this file.
          
          The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
          and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).
          
          EOF
            cat release_entry.md >> docs/changelog.md
            rm release_entry.md
          fi
      
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "docs: Update changelog for ${{ github.event.release.tag_name }}"
          title: "docs: Update changelog for ${{ github.event.release.tag_name }}"
          body: |
            This PR automatically updates the changelog with the latest release information.
            
            **Release**: ${{ github.event.release.tag_name }}
            **Name**: ${{ github.event.release.name }}
            
            Please review the changes to ensure the formatting is correct.
          branch: changelog-update-${{ github.event.release.tag_name }}
          delete-branch: true
          labels: |
            documentation
            automated
