[build-system]
requires = ["hatchling", "httpx>=0.24.0"]
build-backend = "hatchling.build"

[project]
name = "langhook"
version = "0.3.26"
description = "LangHook Python SDK and Server - Make any event from anywhere instantly understandable and actionable by anyone"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "LangHook Team", email = "team@langhook.dev"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]
requires-python = ">=3.12"
dependencies = [
    # Base SDK dependencies only
    "httpx>=0.24.0",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
server = [
    # Server framework dependencies
    "fastapi>=0.111.0",
    "uvicorn[standard]>=0.29.0",
    "structlog>=23.0.0",
    "nats-py>=2.9.0",
    "redis[hiredis]>=5.0.0",
    # Mapping and transformation dependencies
    "jsonata>=0.2.0",
    "cloudevents>=1.11.0",
    "jsonschema>=4.0.0",
    "langchain>=0.1.0",
    "langchain-openai>=0.2.0",
    "prometheus-client>=0.16.0",
    "openai>=1.0.0",
    "python-dotenv>=1.1.0",
    "PyYAML>=6.0",
    # Database dependencies
    "sqlalchemy>=2.0.0",
    "psycopg2-binary>=2.9.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "httpx>=0.24.0",
    "pytest-mock>=3.10.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "build",
]

[project.scripts]
langhook-dlq-show = "langhook.cli.dlq_show:main"
langhook-streams = "langhook.cli.stream_manager:main"
langhook = "langhook.main:main"

[project.urls]
Homepage = "https://github.com/convolabai/langhook"
Repository = "https://github.com/convolabai/langhook"
Issues = "https://github.com/convolabai/langhook/issues"

[tool.ruff]
target-version = "py312"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_optional = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.hatch.build]
packages = ["langhook"]          # bundle Python package
include = ["langhook/static/**"]# still useful for the sdist
[tool.hatch.build.force-include] # NEW â€“ mapping, not list
"langhook/static" = "langhook/static"   # copy the whole dir into wheel/sdist