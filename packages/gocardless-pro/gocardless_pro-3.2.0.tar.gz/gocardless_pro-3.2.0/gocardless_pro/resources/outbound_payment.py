# WARNING: Do not edit by hand, this file was generated by Crank:
#
#   https://github.com/gocardless/crank
#

class OutboundPayment(object):
    """A thin wrapper around a outbound_payment, providing easy access to its
    attributes.

    Example:
      outbound_payment = client.outbound_payments.get()
      outbound_payment.id
    """

    def __init__(self, attributes, api_response):
        self.attributes = attributes
        self.api_response = api_response

    @property
    def amount(self):
        return self.attributes.get('amount')
  

    @property
    def created_at(self):
        return self.attributes.get('created_at')
  

    @property
    def currency(self):
        return self.attributes.get('currency')
  

    @property
    def description(self):
        return self.attributes.get('description')
  

    @property
    def execution_date(self):
        return self.attributes.get('execution_date')
  

    @property
    def id(self):
        return self.attributes.get('id')
  

    @property
    def is_withdrawal(self):
        return self.attributes.get('is_withdrawal')
  

    @property
    def links(self):
        return self.Links(self.attributes.get('links'))
  

    @property
    def metadata(self):
        return self.attributes.get('metadata')
  

    @property
    def reference(self):
        return self.attributes.get('reference')
  

    @property
    def scheme(self):
        return self.attributes.get('scheme')
  

    @property
    def status(self):
        return self.attributes.get('status')
  

    @property
    def verifications(self):
        return self.Verifications(self.attributes.get('verifications'))
  


  

  

  

  

  

  

  

  
    class Links(object):
        """Wrapper for the response's 'links' attribute."""

        def __init__(self, attributes):
            self.attributes = attributes
    
        @property
        def creditor(self):
            return self.attributes.get('creditor')
    
        @property
        def customer(self):
            return self.attributes.get('customer')
    
        @property
        def recipient_bank_account(self):
            return self.attributes.get('recipient_bank_account')
    
  

  

  

  

  

  
    class Verifications(object):
        """Wrapper for the response's 'verifications' attribute."""

        def __init__(self, attributes):
            self.attributes = attributes
    
        @property
        def recipient_bank_account_holder_verification(self):
            return self.attributes.get('recipient_bank_account_holder_verification')
    
  

