# WARNING: Do not edit by hand, this file was generated by Crank:
#
#   https://github.com/gocardless/crank
#

import json

import pytest
import requests
import responses

from gocardless_pro.errors import MalformedResponseError
from gocardless_pro import resources
from gocardless_pro import list_response

from .. import helpers
  

@responses.activate
def test_logos_create_for_creditor():
    fixture = helpers.load_fixture('logos')['create_for_creditor']
    helpers.stub_response(fixture)
    response = helpers.client.logos.create_for_creditor(*fixture['url_params'])
    body = fixture['body']['logos']

    assert isinstance(response, resources.Logo)
    assert responses.calls[-1].request.headers.get('Idempotency-Key') is not None
    assert response.id == body.get('id')

@responses.activate
def test_timeout_logos_create_for_creditor_retries():
    fixture = helpers.load_fixture('logos')['create_for_creditor']
    with helpers.stub_timeout_then_response(fixture) as rsps:
      response = helpers.client.logos.create_for_creditor(*fixture['url_params'])
      assert len(rsps.calls) == 2
      assert rsps.calls[0].request.headers.get('Idempotency-Key') == rsps.calls[1].request.headers.get('Idempotency-Key')
    body = fixture['body']['logos']

    assert isinstance(response, resources.Logo)

def test_502_logos_create_for_creditor_retries():
    fixture = helpers.load_fixture('logos')['create_for_creditor']
    with helpers.stub_502_then_response(fixture) as rsps:
      response = helpers.client.logos.create_for_creditor(*fixture['url_params'])
      assert len(rsps.calls) == 2
      assert rsps.calls[0].request.headers.get('Idempotency-Key') == rsps.calls[1].request.headers.get('Idempotency-Key')
    body = fixture['body']['logos']

    assert isinstance(response, resources.Logo)
  
