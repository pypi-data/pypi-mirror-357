# WARNING: Do not edit by hand, this file was generated by Crank:
#
#   https://github.com/gocardless/crank
#

class NegativeBalanceLimit(object):
    """A thin wrapper around a negative_balance_limit, providing easy access to its
    attributes.

    Example:
      negative_balance_limit = client.negative_balance_limits.get()
      negative_balance_limit.id
    """

    def __init__(self, attributes, api_response):
        self.attributes = attributes
        self.api_response = api_response

    @property
    def balance_limit(self):
        return self.attributes.get('balance_limit')
  

    @property
    def created_at(self):
        return self.attributes.get('created_at')
  

    @property
    def currency(self):
        return self.attributes.get('currency')
  

    @property
    def id(self):
        return self.attributes.get('id')
  

    @property
    def links(self):
        return self.Links(self.attributes.get('links'))
  


  

  

  

  

  
    class Links(object):
        """Wrapper for the response's 'links' attribute."""

        def __init__(self, attributes):
            self.attributes = attributes
    
        @property
        def creator_user(self):
            return self.attributes.get('creator_user')
    
        @property
        def creditor(self):
            return self.attributes.get('creditor')
    
  

