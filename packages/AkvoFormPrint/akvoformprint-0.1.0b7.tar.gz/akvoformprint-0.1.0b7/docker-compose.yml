version: "3.9"

services:
  # Development service that watches for changes
  dev:
    build: .
    volumes:
      - .:/app
      - ./examples/output:/app/examples/output
    environment:
      - PYTHONPATH=/app/src
    command: >
      sh -c "pip install watchdog &&
             watchmedo auto-restart --directory=/app/examples --pattern=*.py --recursive -- python examples/basic_example.py"

  # Basic example with default parser
  basic:
    build: .
    volumes:
      - ./examples:/app/examples
      - ./examples/output:/app/examples/output
    environment:
      - PYTHONPATH=/app/src
    command: python examples/basic_example.py

  # Flow form example
  flow:
    build: .
    volumes:
      - ./examples:/app/examples
      - ./examples/output:/app/examples/output
    environment:
      - PYTHONPATH=/app/src
    command: python examples/flow_example.py

  # ARF form example
  arf:
    build: .
    volumes:
      - ./examples:/app/examples
      - ./examples/output:/app/examples/output
    environment:
      - PYTHONPATH=/app/src
    command: python examples/arf_example.py

  # Webform example
  webform:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    command: python examples/webform_example.py

  # Custom styling example
  custom:
    build: .
    volumes:
      - ./examples:/app/examples
      - ./examples/output:/app/examples/output
    environment:
      - PYTHONPATH=/app/src
    command: python examples/custom_example.py

  # Run all examples
  examples:
    build: .
    volumes:
      - ./examples:/app/examples
      - ./examples/output:/app/examples/output
    environment:
      - PYTHONPATH=/app/src
    command: >
      sh -c "python examples/basic_example.py &&
             python examples/flow_example.py &&
             python examples/arf_example.py &&
             python examples/webform_example.py &&
             python examples/custom_example.py"

  # Run tests
  test:
    build: .
    volumes:
      - .:/app
    command: ./run_tests.sh

  # Release service
  release:
    build:
      context: .
      dockerfile: Dockerfile.release
      args:
        GIT_USER_NAME: ${GIT_USER_NAME:-}
        GIT_USER_EMAIL: ${GIT_USER_EMAIL:-}
        PYPI_TOKEN: ${PYPI_TOKEN:-}
        GITHUB_TOKEN: ${GITHUB_TOKEN:-}
    environment:
      - TWINE_USERNAME=__token__
      - TWINE_PASSWORD=${PYPI_TOKEN:-}
      - GITHUB_TOKEN=${GITHUB_TOKEN:-}
      - GIT_USER_NAME=${GIT_USER_NAME:-}
      - GIT_USER_EMAIL=${GIT_USER_EMAIL:-}
    volumes:
      - .:/app
