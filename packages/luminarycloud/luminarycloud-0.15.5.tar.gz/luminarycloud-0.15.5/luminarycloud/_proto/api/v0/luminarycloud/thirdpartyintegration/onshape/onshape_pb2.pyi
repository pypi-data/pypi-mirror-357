"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class GetAuthenticationStatusRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___GetAuthenticationStatusRequest = GetAuthenticationStatusRequest

class GetAuthenticationStatusReply(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AUTH_ACTIVE_FIELD_NUMBER: builtins.int
    auth_active: builtins.bool
    def __init__(
        self,
        *,
        auth_active: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["auth_active", b"auth_active"]) -> None: ...

global___GetAuthenticationStatusReply = GetAuthenticationStatusReply

class OnshapePath(google.protobuf.message.Message):
    """Provides the full description necessary to reference an element in Onshape."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    COMPANY_PREFIX_FIELD_NUMBER: builtins.int
    DOCUMENT_ID_FIELD_NUMBER: builtins.int
    W_OR_V_FIELD_NUMBER: builtins.int
    WV_ID_FIELD_NUMBER: builtins.int
    ELEMENT_ID_FIELD_NUMBER: builtins.int
    company_prefix: builtins.str
    """Used in the initial prefix of Onshape, https://{company_prefix}.onshape.com/...
    It is often just "cad".
    """
    document_id: builtins.str
    w_or_v: builtins.str
    """If w_or_v is "v", then onshape_wvid is a version id,
    otherwise it should be "w" and is a workspace id.
    """
    wv_id: builtins.str
    element_id: builtins.str
    def __init__(
        self,
        *,
        company_prefix: builtins.str = ...,
        document_id: builtins.str = ...,
        w_or_v: builtins.str = ...,
        wv_id: builtins.str = ...,
        element_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["company_prefix", b"company_prefix", "document_id", b"document_id", "element_id", b"element_id", "w_or_v", b"w_or_v", "wv_id", b"wv_id"]) -> None: ...

global___OnshapePath = OnshapePath

class FetchVariablesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PATH_FIELD_NUMBER: builtins.int
    @property
    def path(self) -> global___OnshapePath: ...
    def __init__(
        self,
        *,
        path: global___OnshapePath | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["path", b"path"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["path", b"path"]) -> None: ...

global___FetchVariablesRequest = FetchVariablesRequest

class FetchVariablesReply(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMES_FIELD_NUMBER: builtins.int
    @property
    def names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        names: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["names", b"names"]) -> None: ...

global___FetchVariablesReply = FetchVariablesReply
