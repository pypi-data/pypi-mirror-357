name: Test, Verify, and Publish to PyPI

on:
  push:
    # will only run on tags pushed (TODO: restrict to main)
    tags:
      - 'v*'

jobs:
  test:
    name: Run tests before release
    uses: ./.github/workflows/test-package.yaml
    with:
      python-version: '3.11'

  pypi-publish:
    name: Build, verify version, and upload release to PyPI
    runs-on: ubuntu-latest
    needs: test
    environment: pypi
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          # consistent version for building
          python-version: '3.11'

      - name: Verify that tag version matches pyproject.toml version
        run: |
          TAG_VERSION="${{ github.ref_name }}"
          TAG_VERSION_NUM="${TAG_VERSION#v}"
          PYPROJECT_VERSION=$(python -c "import tomllib; f = open('pyproject.toml', 'rb'); data = tomllib.load(f); print(data['project']['version'])")

          if [ "$TAG_VERSION_NUM" != "$PYPROJECT_VERSION" ]; then
            echo "Error: Git tag version ($TAG_VERSION_NUM) does not match pyproject.toml version ($PYPROJECT_VERSION)."
            exit 1
          fi

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Verify uv installation
        run: uv --version

      - name: Install dependencies
        run: uv sync --all-extras --dev

      - name: Build package using flit
        run: uv run flit build

      - name: List files in dist/
        run: ls -l dist/

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          # Explicitly skip existing files instead of erroring
          skip-existing: true
