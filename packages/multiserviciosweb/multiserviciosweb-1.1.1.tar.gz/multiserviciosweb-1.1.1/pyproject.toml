[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "multiserviciosweb"
version = "1.1.1"
authors = [
    {name = "Edson Burgos", email = "edsonburgosmacedo@gmail.com"},
]
description = "Validate, calculate and obtain CURP information in México."
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.7"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]
keywords = ["valida", "curp", "méxico", "client", "api"]
dependencies = [
    "requests>=2.25.0",
    "python-dotenv>=0.19.0"
]

[project.urls]
Homepage = "https://valida-curp.com.mx/"
Repository = "https://github.com/EdsonBurgosMsWeb/valida-curp-client-py"
"Bug Reports" = "https://github.com/EdsonBurgosMsWeb/valida-curp-client-py/issues"
Documentation = "https://api.valida-curp.com.mx/documentacion/"

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
]

[tool.setuptools.packages.find]
include = ["MultiServiciosWeb*"]

[tool.black]
line-length = 88
target-version = ['py37']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--strict-markers --strict-config --cov=MultiServiciosWeb"

[tool.coverage.run]
source = ["MultiServiciosWeb"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]