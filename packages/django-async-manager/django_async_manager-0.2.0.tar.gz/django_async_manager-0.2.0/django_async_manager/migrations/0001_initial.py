# Generated by Django 4.2 on 2025-04-18 20:12

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CrontabSchedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "minute",
                    models.CharField(
                        default="*",
                        help_text="Minute field, e.g. '*' or '0,15,30,45'",
                        max_length=64,
                    ),
                ),
                (
                    "hour",
                    models.CharField(
                        default="*",
                        help_text="Hour field, e.g. '*' or '0,12'",
                        max_length=64,
                    ),
                ),
                (
                    "day_of_week",
                    models.CharField(
                        default="*",
                        help_text="Day of week field, e.g. '*' or 'mon-fri'",
                        max_length=64,
                    ),
                ),
                (
                    "day_of_month",
                    models.CharField(
                        default="*",
                        help_text="Day of month field, e.g. '*' or '1,15'",
                        max_length=64,
                    ),
                ),
                (
                    "month_of_year",
                    models.CharField(
                        default="*",
                        help_text="Month of year field, e.g. '*' or '1,6,12'",
                        max_length=64,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("in_progress", "In progress"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("canceled", "Canceled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        choices=[
                            (1, "low"),
                            (2, "medium"),
                            (3, "high"),
                            (4, "critical"),
                        ],
                        default=2,
                    ),
                ),
                (
                    "arguments",
                    models.JSONField(help_text="JSON containing function arguments"),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "scheduled_at",
                    models.DateTimeField(
                        blank=True, help_text="Task will run at this time", null=True
                    ),
                ),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "timeout",
                    models.IntegerField(
                        default=300, help_text="Max execution time in seconds"
                    ),
                ),
                ("attempts", models.IntegerField(default=0)),
                (
                    "max_retries",
                    models.IntegerField(
                        default=1,
                        help_text="Max number of retries before marking as failed",
                    ),
                ),
                (
                    "worker_id",
                    models.CharField(
                        blank=True,
                        help_text="Identifier of the worker that processed this task",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "last_errors",
                    models.JSONField(
                        default=list, help_text="Stores last 5 error messages"
                    ),
                ),
                (
                    "archived",
                    models.BooleanField(
                        default=False,
                        help_text="If true, this task is archived for performance reasons",
                    ),
                ),
                (
                    "queue",
                    models.CharField(
                        default="default",
                        help_text="Name of the queue for routing tasks",
                        max_length=50,
                    ),
                ),
                (
                    "autoretry",
                    models.BooleanField(
                        default=True,
                        help_text="Automatically retry the job in case of an error",
                    ),
                ),
                (
                    "retry_delay",
                    models.IntegerField(
                        default=60,
                        help_text="Initial delay (in seconds) before retrying",
                    ),
                ),
                (
                    "retry_backoff",
                    models.FloatField(
                        default=2.0,
                        help_text="Multiplier for exponential increase in delay",
                    ),
                ),
                (
                    "dependencies",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Tasks that must be completed before this one runs",
                        related_name="dependent_tasks",
                        to="django_async_manager.task",
                    ),
                ),
            ],
            options={
                "ordering": ["-priority", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="PeriodicTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Unique name for the periodic task.",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "task_name",
                    models.CharField(
                        help_text="Name of the registered task function to be executed.",
                        max_length=255,
                    ),
                ),
                (
                    "arguments",
                    models.JSONField(
                        default=list,
                        help_text="List of positional arguments for the task.",
                    ),
                ),
                (
                    "kwargs",
                    models.JSONField(
                        default=dict,
                        help_text="Dictionary of keyword arguments for the task.",
                    ),
                ),
                ("enabled", models.BooleanField(default=True)),
                ("last_run_at", models.DateTimeField(blank=True, null=True)),
                ("total_run_count", models.PositiveIntegerField(default=0)),
                (
                    "crontab",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="periodic_tasks",
                        to="django_async_manager.crontabschedule",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(fields=["status"], name="django_asyn_status_b2c4da_idx"),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["priority"], name="django_asyn_priorit_0df280_idx"
            ),
        ),
    ]
