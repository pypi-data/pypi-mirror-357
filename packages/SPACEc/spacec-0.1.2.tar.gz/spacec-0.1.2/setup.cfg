[metadata]
description = SPatial Analysis for CodEX data (SPACEc)
name = SPACEc
author = yuqiyuqitan
author_email = tanyuqi527@gmail.com
license = MIT
license_files = LICENSE.txt
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://github.com/yuqiyuqitan/SPACEc
project_urls = 
	Documentation = https://spacec.readthedocs.io/
	Source = https://github.com/yuqiyuqitan/SPACEc
	Tracker = https://github.com/yuqiyuqitan/SPACEc/issues
platforms = any
classifiers = 
	Development Status :: 4 - Beta
	Programming Language :: Python

[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir = 
	=src
python_requires = >=3.9,<3.11
install_requires = 
	importlib-metadata; python_version<"3.8"
	tqdm
	joblib
	pandas
	yellowbrick
	statsmodels
	scikit-learn
	scikit-image
	scanpy
	networkx
	tensorly
	cellpose==3.0.11
	torch<2.6
	concave_hull
	pyFlowSOM
	TissUUmaps==3.1.1.6
	Flask==2.0.0
	Werkzeug==2.3.8
	GitPython               # for downloading STELLAR from Git repo
	igraph
	leidenalg; sys_platform != "darwin" or platform_machine != "arm64"
	louvain; sys_platform != "darwin" or platform_machine != "arm64"
	python-louvain==0.1
	matplotlib==3.9
	panel
	watchfiles
	networkx<3.4
	pyvips
	openslide-python
	deepcell; sys_platform != "darwin" or platform_machine != "arm64"
	geopandas
	shapely
	descartes

[options.packages.find]
where = src
exclude = 
	tests

[options.extras_require]
rapids = 
	rapids-singlecell[rapids11]
stellar = 
	torch==1.12.0+cu113
	torchvision==0.13.0+cu113
	torchaudio==0.12.0+cu113
	torch-scatter==2.1.0
	torch-sparse==0.6.16
	torch-cluster==1.6.0
	torch-spline-conv==1.2.1
	torch-geometric==2.2.0
testing = 
	setuptools
	pytest
	pytest-cov

[options.entry_points]

[tool:pytest]
addopts = 
	--cov spacec --cov-report term-missing
	--verbose
	-m "not slow and not skip and not gpu"
norecursedirs = 
	dist
	build
	.tox
testpaths = tests
markers = 
	slow: mark tests as slow (run with '-m slow')
	skip: mark tests to be skipped (run with '-m skip')
	gpu:  mark tests that require GPUs (run with '-m gpu')

[devpi:upload]
no_vcs = 1
formats = bdist_wheel

[flake8]
max_line_length = 88
extend_ignore = E203, W503
exclude = 
	.tox
	build
	dist
	.eggs
	docs/conf.py

[pyscaffold]
version = 4.5
package = spacec
extensions = 
	github_actions
	markdown
	pre_commit

[egg_info]
tag_build = 
tag_date = 0

