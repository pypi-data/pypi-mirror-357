interactions:
  - request:
      body: null
      headers:
        Accept:
          - '*/*'
        Accept-Encoding:
          - gzip, deflate
        Connection:
          - keep-alive
        User-Agent:
          - pygitguardian/1.20.0 (Linux;py3.11.10)
      method: GET
      uri: https://api.gitguardian.com/v1/metadata
    response:
      body:
        string:
          '{"version":"v2.193.0","preferences":{"marketplaces__aws_product_url":"http://aws.amazon.com/marketplace/pp/prodview-mrmulzykamba6","on_premise__restrict_signup":true,"on_premise__is_email_server_configured":true,"on_premise__default_sso_config_api_id":null,"on_premise__default_sso_config_force_sso":null,"onboarding__segmentation_v1_enabled":true,"general__maximum_payload_size":26214400,"general__mutual_tls_mode":"disabled","general__signup_enabled":true},"secret_scan_preferences":{"maximum_documents_per_scan":20,"maximum_document_size":1048576},"remediation_messages":{"pre_commit":">
          How to remediate\n\n  Since the secret was detected before the commit was
          made:\n  1. replace the secret with its reference (e.g. environment variable).\n  2.
          commit again.\n\n> [Apply with caution] If you want to bypass ggshield (false
          positive or other reason), run:\n  - if you use the pre-commit framework:\n\n    SKIP=ggshield
          git commit -m \"<your message>\"\n    ","pre_push":"> How to remediate\n\n  Since
          the secret was detected before the push BUT after the commit, you need to:\n  1.
          rewrite the git history making sure to replace the secret with its reference
          (e.g. environment variable).\n  2. push again.\n\n  To prevent having to rewrite
          git history in the future, setup ggshield as a pre-commit hook:\n    https://docs.gitguardian.com/ggshield-docs/integrations/git-hooks/pre-commit\n\n>
          [Apply with caution] If you want to bypass ggshield (false positive or other
          reason), run:\n  - if you use the pre-commit framework:\n\n    SKIP=ggshield-push
          git push","pre_receive":"> How to remediate\n\n  A pre-receive hook set server
          side prevented you from pushing secrets.\n\n  Since the secret was detected
          during the push BUT after the commit, you need to:\n  1. rewrite the git history
          making sure to replace the secret with its reference (e.g. environment variable).\n  2.
          push again.\n\n  To prevent having to rewrite git history in the future, setup
          ggshield as a pre-commit hook:\n    https://docs.gitguardian.com/ggshield-docs/integrations/git-hooks/pre-commit\n\n>
          [Apply with caution] If you want to bypass ggshield (false positive or other
          reason), run:\n\n    git push -o breakglass"}}'
      headers:
        access-control-expose-headers:
          - X-App-Version
        allow:
          - GET, HEAD, OPTIONS
        content-length:
          - '2198'
        content-type:
          - application/json
        cross-origin-opener-policy:
          - same-origin
        date:
          - Tue, 22 Apr 2025 13:23:46 GMT
        referrer-policy:
          - strict-origin-when-cross-origin
        server:
          - istio-envoy
        strict-transport-security:
          - max-age=31536000; includeSubDomains
        transfer-encoding:
          - chunked
        vary:
          - Accept-Encoding,Cookie
        x-app-version:
          - v2.193.0
        x-content-type-options:
          - nosniff
          - nosniff
        x-envoy-upstream-service-time:
          - '39'
        x-frame-options:
          - DENY
          - SAMEORIGIN
        x-secrets-engine-version:
          - 2.136.1
        x-xss-protection:
          - 1; mode=block
      status:
        code: 200
        message: OK
  - request:
      body:
        '[{"filename": "commit://patch/test", "document": "@@ -0,0 +2 @@\n+# gg
        token\n+apikey = \"8a784aab7090f6a4ba3b9f7a6594e2e727007a26590b58ed314e4b9ed4536479sRZlRup3xvtMVfiHWAanbe712Jtc3nY8veZux5raL1bhpaxiv0rfyhFoAIMZUCh2Njyk7gRVsSQFPrEphSJnxa16SIdWKb03sRft770LUTTYTAy3IM18A7Su4HjiHlGA9ihLj9ou3luadfRAATlKH6kAZwTw289Kq9uip67zxyWkUJdh6PTeFpMgCh3AhHcZ21VeZHlu12345\";\n"}]'
      headers:
        Accept:
          - '*/*'
        Accept-Encoding:
          - gzip, deflate
        Connection:
          - keep-alive
        Content-Length:
          - '367'
        Content-Type:
          - application/json
        GGShield-Command-Id:
          - 06608330-4f04-423e-be77-1ebaa3be7453
        GGShield-Command-Path:
          - external
        GGShield-OS-Name:
          - ubuntu
        GGShield-OS-Version:
          - '24.04'
        GGShield-Python-Version:
          - 3.11.10
        GGShield-Version:
          - 1.38.1
        User-Agent:
          - pygitguardian/1.20.0 (Linux;py3.11.10)
        mode:
          - path
        scan_options:
          - '{"show_secrets": false, "ignored_detectors_count": 0, "ignored_matches_count":
            0, "ignored_paths_count": 0, "ignore_known_secrets": false, "with_incident_details":
            false, "has_prereceive_remediation_message": false, "all_secrets": false}'
      method: POST
      uri: https://api.gitguardian.com/v1/multiscan?all_secrets=True
    response:
      body:
        string:
          '[{"policy_break_count":1,"policies":["Secrets detection"],"policy_breaks":[{"type":"GitGuardian
          Development Secret","detector_name":"gitguardian_test_token","detector_group_name":"gitguardian_test_token","documentation_url":"https://docs.gitguardian.com/secrets-detection/secrets-detection-engine/detectors/specifics/gitguardian_test_token","policy":"Secrets
          detection","matches":[{"type":"apikey","match":"8a784aab7090f6a4ba3b9f7a6594e2e727007a26590b58ed314e4b9ed4536479sRZlRup3xvtMVfiHWAanbe712Jtc3nY8veZux5raL1bhpaxiv0rfyhFoAIMZUCh2Njyk7gRVsSQFPrEphSJnxa16SIdWKb03sRft770LUTTYTAy3IM18A7Su4HjiHlGA9ihLj9ou3luadfRAATlKH6kAZwTw289Kq9uip67zxyWkUJdh6PTeFpMgCh3AhHcZ21VeZHlu12345","index_start":37,"index_end":305,"line_start":3,"line_end":3}],"is_excluded":false,"exclude_reason":null,"incident_url":"https://dashboard.gitguardian.com/workspace/518431/incidents/9787735","known_secret":true,"validity":"no_checker","diff_kind":"addition"}],"is_diff":true}]'
      headers:
        access-control-expose-headers:
          - X-App-Version
        allow:
          - POST, OPTIONS
        content-length:
          - '954'
        content-type:
          - application/json
        cross-origin-opener-policy:
          - same-origin
        date:
          - Tue, 22 Apr 2025 13:23:47 GMT
        referrer-policy:
          - strict-origin-when-cross-origin
        server:
          - istio-envoy
        strict-transport-security:
          - max-age=31536000; includeSubDomains
        vary:
          - Cookie
        x-app-version:
          - v2.193.0
        x-content-type-options:
          - nosniff
          - nosniff
        x-envoy-upstream-service-time:
          - '92'
        x-frame-options:
          - DENY
          - SAMEORIGIN
        x-secrets-engine-version:
          - 2.136.1
        x-xss-protection:
          - 1; mode=block
      status:
        code: 200
        message: OK
version: 1
