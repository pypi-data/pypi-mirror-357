# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: qwak/kube_deployment_captain/deployment.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n-qwak/kube_deployment_captain/deployment.proto\x12\x1cqwak.kube.deployment.captain\x1a\x1egoogle/protobuf/wrappers.proto\"\x84\x02\n\x1dKubeAdvancedDeploymentOptions\x12\x19\n\x11number_of_workers\x18\x01 \x01(\x05\x12\x1f\n\x17http_request_timeout_ms\x18\x02 \x01(\x05\x12/\n\x0b\x64\x61\x65mon_mode\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.BoolValue\x12\x1b\n\x13\x63ustom_iam_role_arn\x18\x04 \x01(\t\x12\x16\n\x0emax_batch_size\x18\x05 \x01(\x05\x12(\n deployment_process_timeout_limit\x18\x06 \x01(\x05\x12\x17\n\x0fpurchase_option\x18\x07 \x01(\t\"\xaf\x01\n\x13KubeServingStrategy\x12G\n\x0frealtime_config\x18\x01 \x01(\x0b\x32,.qwak.kube.deployment.captain.RealTimeConfigH\x00\x12\x43\n\rstream_config\x18\x02 \x01(\x0b\x32*.qwak.kube.deployment.captain.StreamConfigH\x00\x42\n\n\x08Strategy\"\xb5\x01\n\x0f\x41utoScalingSpec\x12\x19\n\x11min_replica_count\x18\x01 \x01(\x05\x12\x19\n\x11max_replica_count\x18\x02 \x01(\x05\x12\x18\n\x10polling_interval\x18\x03 \x01(\x05\x12\x18\n\x10\x63ool_down_period\x18\x04 \x01(\x05\x12\x38\n\x08triggers\x18\x05 \x03(\x0b\x32&.qwak.kube.deployment.captain.Triggers\"i\n\x08Triggers\x12M\n\x12prometheus_trigger\x18\x01 \x01(\x0b\x32/.qwak.kube.deployment.captain.PrometheusTriggerH\x00\x42\x0e\n\x0ctrigger_type\"\x90\x01\n\x11PrometheusTrigger\x12\x13\n\x0bmetric_name\x18\x01 \x01(\t\x12\x11\n\tthreshold\x18\x02 \x01(\x05\x12\r\n\x05query\x18\x03 \x01(\t\x12\x44\n\x0bmetric_type\x18\x04 \x01(\x0e\x32/.qwak.kube.deployment.captain.TriggerMetricType\"W\n\x0eRealTimeConfig\x12\'\n\x1fselected_variation_mapping_name\x18\x01 \x01(\t\x12\x1c\n\x14\x61ssumed_iam_role_arn\x18\x02 \x01(\t\"[\n\x0cStreamConfig\x12:\n\x05kafka\x18\x01 \x01(\x0b\x32).qwak.kube.deployment.captain.KafkaConfigH\x00\x42\x0f\n\rconfiguration\"\xb7\x05\n\x0bKafkaConfig\x12\x44\n\x08\x63onsumer\x18\x01 \x01(\x0b\x32\x32.qwak.kube.deployment.captain.KafkaConfig.Consumer\x12\x44\n\x08producer\x18\x02 \x01(\x0b\x32\x32.qwak.kube.deployment.captain.KafkaConfig.Producer\x12\x0f\n\x07workers\x18\x03 \x01(\x05\x1a\x9b\x02\n\x08\x43onsumer\x12\x18\n\x10\x62ootstrap_server\x18\x01 \x03(\t\x12\r\n\x05topic\x18\x02 \x01(\t\x12\r\n\x05group\x18\x03 \x01(\t\x12\x0f\n\x07timeout\x18\x04 \x01(\x05\x12[\n\x10\x61uto_offset_type\x18\x05 \x01(\x0e\x32\x41.qwak.kube.deployment.captain.KafkaConfig.Consumer.AutoOffSetType\x12\x16\n\x0emax_batch_size\x18\x06 \x01(\x05\x12\x18\n\x10max_poll_latency\x18\x07 \x01(\x01\"7\n\x0e\x41utoOffSetType\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0c\n\x08\x45\x41RLIEST\x10\x01\x12\n\n\x06LATEST\x10\x02\x1a\xec\x01\n\x08Producer\x12\x18\n\x10\x62ootstrap_server\x18\x01 \x03(\t\x12\r\n\x05topic\x18\x02 \x01(\t\x12\\\n\x10\x63ompression_type\x18\x03 \x01(\x0e\x32\x42.qwak.kube.deployment.captain.KafkaConfig.Producer.CompressionType\"Y\n\x0f\x43ompressionType\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x10\n\x0cUNCOMPRESSED\x10\x01\x12\x08\n\x04GZIP\x10\x02\x12\n\n\x06SNAPPY\x10\x03\x12\x07\n\x03LZ4\x10\x04\x12\x08\n\x04ZSTD\x10\x05\"\xa9\x05\n\x12KubeDeploymentSize\x12\x16\n\x0enumber_of_pods\x18\x01 \x01(\x05\x12\x0b\n\x03\x63pu\x18\x02 \x01(\x02\x12\x15\n\rmemory_amount\x18\x03 \x01(\x05\x12Q\n\x0cmemory_units\x18\x04 \x01(\x0e\x32;.qwak.kube.deployment.captain.KubeDeploymentSize.MemoryUnit\x12T\n\rgpu_resources\x18\x05 \x01(\x0b\x32=.qwak.kube.deployment.captain.KubeDeploymentSize.GpuResources\x1an\n\x0cGpuResources\x12J\n\x08gpu_type\x18\x01 \x01(\x0e\x32\x38.qwak.kube.deployment.captain.KubeDeploymentSize.GpuType\x12\x12\n\ngpu_amount\x18\x02 \x01(\x05\"\x90\x02\n\x07GpuType\x12\x0f\n\x0bINVALID_GPU\x10\x00\x12\x0e\n\nNVIDIA_K80\x10\x01\x12\x0f\n\x0bNVIDIA_V100\x10\x02\x12\x0f\n\x0bNVIDIA_A100\x10\x03\x12\r\n\tNVIDIA_T4\x10\x04\x12\x0f\n\x0bNVIDIA_A10G\x10\x05\x12\r\n\tNVIDIA_L4\x10\x06\x12\x14\n\x10NVIDIA_T4_1_4_15\x10\x07\x12\x14\n\x10NVIDIA_T4_1_8_30\x10\x08\x12\x15\n\x11NVIDIA_T4_1_16_60\x10\t\x12\x1e\n\x1aNVIDIA_A100_80GB_8_96_1360\x10\n\x12\x16\n\x12NVIDIA_V100_1_8_52\x10\x0b\x12\x18\n\x14NVIDIA_V100_4_32_208\x10\x0c\"+\n\nMemoryUnit\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x07\n\x03MIB\x10\x01\x12\x07\n\x03GIB\x10\x02\"\xc3\x01\n\x1dKubeRuntimeDeploymentSettings\x12_\n\x11root_logger_level\x18\x01 \x01(\x0e\x32\x44.qwak.kube.deployment.captain.KubeRuntimeDeploymentSettings.LogLevel\"A\n\x08LogLevel\x12\x0b\n\x07NOT_SET\x10\x00\x12\t\n\x05\x45RROR\x10\x01\x12\x08\n\x04WARN\x10\x02\x12\x08\n\x04INFO\x10\x03\x12\t\n\x05\x44\x45\x42UG\x10\x04*|\n\x11TriggerMetricType\x12!\n\x1dTRIGGER_METRIC_TYPE_NOT_VALID\x10\x00\x12\x1d\n\x19TRIGGER_METRIC_TYPE_VALUE\x10\x01\x12%\n!TRIGGER_METRIC_TYPE_AVERAGE_VALUE\x10\x02*;\n\x12KubeDeploymentType\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0c\n\x08REALTIME\x10\x01\x12\n\n\x06STREAM\x10\x02\x42+\n\'com.qwak.ai.kube.deployment.captain.apiP\x01\x62\x06proto3')

_TRIGGERMETRICTYPE = DESCRIPTOR.enum_types_by_name['TriggerMetricType']
TriggerMetricType = enum_type_wrapper.EnumTypeWrapper(_TRIGGERMETRICTYPE)
_KUBEDEPLOYMENTTYPE = DESCRIPTOR.enum_types_by_name['KubeDeploymentType']
KubeDeploymentType = enum_type_wrapper.EnumTypeWrapper(_KUBEDEPLOYMENTTYPE)
TRIGGER_METRIC_TYPE_NOT_VALID = 0
TRIGGER_METRIC_TYPE_VALUE = 1
TRIGGER_METRIC_TYPE_AVERAGE_VALUE = 2
UNKNOWN = 0
REALTIME = 1
STREAM = 2


_KUBEADVANCEDDEPLOYMENTOPTIONS = DESCRIPTOR.message_types_by_name['KubeAdvancedDeploymentOptions']
_KUBESERVINGSTRATEGY = DESCRIPTOR.message_types_by_name['KubeServingStrategy']
_AUTOSCALINGSPEC = DESCRIPTOR.message_types_by_name['AutoScalingSpec']
_TRIGGERS = DESCRIPTOR.message_types_by_name['Triggers']
_PROMETHEUSTRIGGER = DESCRIPTOR.message_types_by_name['PrometheusTrigger']
_REALTIMECONFIG = DESCRIPTOR.message_types_by_name['RealTimeConfig']
_STREAMCONFIG = DESCRIPTOR.message_types_by_name['StreamConfig']
_KAFKACONFIG = DESCRIPTOR.message_types_by_name['KafkaConfig']
_KAFKACONFIG_CONSUMER = _KAFKACONFIG.nested_types_by_name['Consumer']
_KAFKACONFIG_PRODUCER = _KAFKACONFIG.nested_types_by_name['Producer']
_KUBEDEPLOYMENTSIZE = DESCRIPTOR.message_types_by_name['KubeDeploymentSize']
_KUBEDEPLOYMENTSIZE_GPURESOURCES = _KUBEDEPLOYMENTSIZE.nested_types_by_name['GpuResources']
_KUBERUNTIMEDEPLOYMENTSETTINGS = DESCRIPTOR.message_types_by_name['KubeRuntimeDeploymentSettings']
_KAFKACONFIG_CONSUMER_AUTOOFFSETTYPE = _KAFKACONFIG_CONSUMER.enum_types_by_name['AutoOffSetType']
_KAFKACONFIG_PRODUCER_COMPRESSIONTYPE = _KAFKACONFIG_PRODUCER.enum_types_by_name['CompressionType']
_KUBEDEPLOYMENTSIZE_GPUTYPE = _KUBEDEPLOYMENTSIZE.enum_types_by_name['GpuType']
_KUBEDEPLOYMENTSIZE_MEMORYUNIT = _KUBEDEPLOYMENTSIZE.enum_types_by_name['MemoryUnit']
_KUBERUNTIMEDEPLOYMENTSETTINGS_LOGLEVEL = _KUBERUNTIMEDEPLOYMENTSETTINGS.enum_types_by_name['LogLevel']
KubeAdvancedDeploymentOptions = _reflection.GeneratedProtocolMessageType('KubeAdvancedDeploymentOptions', (_message.Message,), {
  'DESCRIPTOR' : _KUBEADVANCEDDEPLOYMENTOPTIONS,
  '__module__' : 'qwak.kube_deployment_captain.deployment_pb2'
  # @@protoc_insertion_point(class_scope:qwak.kube.deployment.captain.KubeAdvancedDeploymentOptions)
  })
_sym_db.RegisterMessage(KubeAdvancedDeploymentOptions)

KubeServingStrategy = _reflection.GeneratedProtocolMessageType('KubeServingStrategy', (_message.Message,), {
  'DESCRIPTOR' : _KUBESERVINGSTRATEGY,
  '__module__' : 'qwak.kube_deployment_captain.deployment_pb2'
  # @@protoc_insertion_point(class_scope:qwak.kube.deployment.captain.KubeServingStrategy)
  })
_sym_db.RegisterMessage(KubeServingStrategy)

AutoScalingSpec = _reflection.GeneratedProtocolMessageType('AutoScalingSpec', (_message.Message,), {
  'DESCRIPTOR' : _AUTOSCALINGSPEC,
  '__module__' : 'qwak.kube_deployment_captain.deployment_pb2'
  # @@protoc_insertion_point(class_scope:qwak.kube.deployment.captain.AutoScalingSpec)
  })
_sym_db.RegisterMessage(AutoScalingSpec)

Triggers = _reflection.GeneratedProtocolMessageType('Triggers', (_message.Message,), {
  'DESCRIPTOR' : _TRIGGERS,
  '__module__' : 'qwak.kube_deployment_captain.deployment_pb2'
  # @@protoc_insertion_point(class_scope:qwak.kube.deployment.captain.Triggers)
  })
_sym_db.RegisterMessage(Triggers)

PrometheusTrigger = _reflection.GeneratedProtocolMessageType('PrometheusTrigger', (_message.Message,), {
  'DESCRIPTOR' : _PROMETHEUSTRIGGER,
  '__module__' : 'qwak.kube_deployment_captain.deployment_pb2'
  # @@protoc_insertion_point(class_scope:qwak.kube.deployment.captain.PrometheusTrigger)
  })
_sym_db.RegisterMessage(PrometheusTrigger)

RealTimeConfig = _reflection.GeneratedProtocolMessageType('RealTimeConfig', (_message.Message,), {
  'DESCRIPTOR' : _REALTIMECONFIG,
  '__module__' : 'qwak.kube_deployment_captain.deployment_pb2'
  # @@protoc_insertion_point(class_scope:qwak.kube.deployment.captain.RealTimeConfig)
  })
_sym_db.RegisterMessage(RealTimeConfig)

StreamConfig = _reflection.GeneratedProtocolMessageType('StreamConfig', (_message.Message,), {
  'DESCRIPTOR' : _STREAMCONFIG,
  '__module__' : 'qwak.kube_deployment_captain.deployment_pb2'
  # @@protoc_insertion_point(class_scope:qwak.kube.deployment.captain.StreamConfig)
  })
_sym_db.RegisterMessage(StreamConfig)

KafkaConfig = _reflection.GeneratedProtocolMessageType('KafkaConfig', (_message.Message,), {

  'Consumer' : _reflection.GeneratedProtocolMessageType('Consumer', (_message.Message,), {
    'DESCRIPTOR' : _KAFKACONFIG_CONSUMER,
    '__module__' : 'qwak.kube_deployment_captain.deployment_pb2'
    # @@protoc_insertion_point(class_scope:qwak.kube.deployment.captain.KafkaConfig.Consumer)
    })
  ,

  'Producer' : _reflection.GeneratedProtocolMessageType('Producer', (_message.Message,), {
    'DESCRIPTOR' : _KAFKACONFIG_PRODUCER,
    '__module__' : 'qwak.kube_deployment_captain.deployment_pb2'
    # @@protoc_insertion_point(class_scope:qwak.kube.deployment.captain.KafkaConfig.Producer)
    })
  ,
  'DESCRIPTOR' : _KAFKACONFIG,
  '__module__' : 'qwak.kube_deployment_captain.deployment_pb2'
  # @@protoc_insertion_point(class_scope:qwak.kube.deployment.captain.KafkaConfig)
  })
_sym_db.RegisterMessage(KafkaConfig)
_sym_db.RegisterMessage(KafkaConfig.Consumer)
_sym_db.RegisterMessage(KafkaConfig.Producer)

KubeDeploymentSize = _reflection.GeneratedProtocolMessageType('KubeDeploymentSize', (_message.Message,), {

  'GpuResources' : _reflection.GeneratedProtocolMessageType('GpuResources', (_message.Message,), {
    'DESCRIPTOR' : _KUBEDEPLOYMENTSIZE_GPURESOURCES,
    '__module__' : 'qwak.kube_deployment_captain.deployment_pb2'
    # @@protoc_insertion_point(class_scope:qwak.kube.deployment.captain.KubeDeploymentSize.GpuResources)
    })
  ,
  'DESCRIPTOR' : _KUBEDEPLOYMENTSIZE,
  '__module__' : 'qwak.kube_deployment_captain.deployment_pb2'
  # @@protoc_insertion_point(class_scope:qwak.kube.deployment.captain.KubeDeploymentSize)
  })
_sym_db.RegisterMessage(KubeDeploymentSize)
_sym_db.RegisterMessage(KubeDeploymentSize.GpuResources)

KubeRuntimeDeploymentSettings = _reflection.GeneratedProtocolMessageType('KubeRuntimeDeploymentSettings', (_message.Message,), {
  'DESCRIPTOR' : _KUBERUNTIMEDEPLOYMENTSETTINGS,
  '__module__' : 'qwak.kube_deployment_captain.deployment_pb2'
  # @@protoc_insertion_point(class_scope:qwak.kube.deployment.captain.KubeRuntimeDeploymentSettings)
  })
_sym_db.RegisterMessage(KubeRuntimeDeploymentSettings)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\'com.qwak.ai.kube.deployment.captain.apiP\001'
  _TRIGGERMETRICTYPE._serialized_start=2752
  _TRIGGERMETRICTYPE._serialized_end=2876
  _KUBEDEPLOYMENTTYPE._serialized_start=2878
  _KUBEDEPLOYMENTTYPE._serialized_end=2937
  _KUBEADVANCEDDEPLOYMENTOPTIONS._serialized_start=112
  _KUBEADVANCEDDEPLOYMENTOPTIONS._serialized_end=372
  _KUBESERVINGSTRATEGY._serialized_start=375
  _KUBESERVINGSTRATEGY._serialized_end=550
  _AUTOSCALINGSPEC._serialized_start=553
  _AUTOSCALINGSPEC._serialized_end=734
  _TRIGGERS._serialized_start=736
  _TRIGGERS._serialized_end=841
  _PROMETHEUSTRIGGER._serialized_start=844
  _PROMETHEUSTRIGGER._serialized_end=988
  _REALTIMECONFIG._serialized_start=990
  _REALTIMECONFIG._serialized_end=1077
  _STREAMCONFIG._serialized_start=1079
  _STREAMCONFIG._serialized_end=1170
  _KAFKACONFIG._serialized_start=1173
  _KAFKACONFIG._serialized_end=1868
  _KAFKACONFIG_CONSUMER._serialized_start=1346
  _KAFKACONFIG_CONSUMER._serialized_end=1629
  _KAFKACONFIG_CONSUMER_AUTOOFFSETTYPE._serialized_start=1574
  _KAFKACONFIG_CONSUMER_AUTOOFFSETTYPE._serialized_end=1629
  _KAFKACONFIG_PRODUCER._serialized_start=1632
  _KAFKACONFIG_PRODUCER._serialized_end=1868
  _KAFKACONFIG_PRODUCER_COMPRESSIONTYPE._serialized_start=1779
  _KAFKACONFIG_PRODUCER_COMPRESSIONTYPE._serialized_end=1868
  _KUBEDEPLOYMENTSIZE._serialized_start=1871
  _KUBEDEPLOYMENTSIZE._serialized_end=2552
  _KUBEDEPLOYMENTSIZE_GPURESOURCES._serialized_start=2122
  _KUBEDEPLOYMENTSIZE_GPURESOURCES._serialized_end=2232
  _KUBEDEPLOYMENTSIZE_GPUTYPE._serialized_start=2235
  _KUBEDEPLOYMENTSIZE_GPUTYPE._serialized_end=2507
  _KUBEDEPLOYMENTSIZE_MEMORYUNIT._serialized_start=2509
  _KUBEDEPLOYMENTSIZE_MEMORYUNIT._serialized_end=2552
  _KUBERUNTIMEDEPLOYMENTSETTINGS._serialized_start=2555
  _KUBERUNTIMEDEPLOYMENTSETTINGS._serialized_end=2750
  _KUBERUNTIMEDEPLOYMENTSETTINGS_LOGLEVEL._serialized_start=2685
  _KUBERUNTIMEDEPLOYMENTSETTINGS_LOGLEVEL._serialized_end=2750
# @@protoc_insertion_point(module_scope)
