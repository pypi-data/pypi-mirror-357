# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: qwak/user_application/common/v0/resources.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n/qwak/user_application/common/v0/resources.proto\x12\x1fqwak.user_application.common.v0\"u\n\x0c\x43puResources\x12\x0b\n\x03\x63pu\x18\x01 \x01(\x02\x12\x15\n\rmemory_amount\x18\x02 \x01(\x05\x12\x41\n\x0cmemory_units\x18\x03 \x01(\x0e\x32+.qwak.user_application.common.v0.MemoryUnit\"^\n\x0cGpuResources\x12:\n\x08gpu_type\x18\x01 \x01(\x0e\x32(.qwak.user_application.common.v0.GpuType\x12\x12\n\ngpu_amount\x18\x02 \x01(\x05\"s\n SparkClusterResourceTemplateSpec\x12O\n\x08template\x18\x01 \x01(\x0e\x32=.qwak.user_application.common.v0.SparkClusterResourceTemplate\"\xc3\x01\n\x1aSparkResourceConfiguration\x12\x15\n\rdriver_memory\x18\x01 \x01(\t\x12\x14\n\x0c\x64river_cores\x18\x02 \x01(\x05\x12\x19\n\x11initial_executors\x18\x03 \x01(\x05\x12\x15\n\rmin_executors\x18\x04 \x01(\x05\x12\x15\n\rmax_executors\x18\x05 \x01(\x05\x12\x17\n\x0f\x65xecutor_memory\x18\x06 \x01(\t\x12\x16\n\x0e\x65xecutor_cores\x18\x07 \x01(\x05\"5\n\x1ePodComputeResourceTemplateSpec\x12\x13\n\x0btemplate_id\x18\x01 \x01(\t\"\xcb\x02\n\x13PodComputeResources\x12P\n\x11optimization_type\x18\x01 \x01(\x0e\x32\x35.qwak.user_application.common.v0.NodeOptimizationType\x12\x44\n\rcpu_resources\x18\x02 \x01(\x0b\x32-.qwak.user_application.common.v0.CpuResources\x12\x44\n\rgpu_resources\x18\x03 \x01(\x0b\x32-.qwak.user_application.common.v0.GpuResources\x12V\n\rtemplate_spec\x18\x04 \x01(\x0b\x32?.qwak.user_application.common.v0.PodComputeResourceTemplateSpec\"t\n\x15SparkComputeResources\x12[\n\x16resource_configuration\x18\x01 \x01(\x0b\x32;.qwak.user_application.common.v0.SparkResourceConfiguration\"\xe5\x01\n\x1b\x43lientSparkComputeResources\x12Z\n\rtemplate_spec\x18\x01 \x01(\x0b\x32\x41.qwak.user_application.common.v0.SparkClusterResourceTemplateSpecH\x00\x12]\n\x16resource_configuration\x18\x02 \x01(\x0b\x32;.qwak.user_application.common.v0.SparkResourceConfigurationH\x00\x42\x0b\n\tresources\"\xe9\x02\n\x19\x43lientPodComputeResources\x12U\n\x16node_optimization_type\x18\x01 \x01(\x0e\x32\x35.qwak.user_application.common.v0.NodeOptimizationType\x12X\n\rtemplate_spec\x18\x02 \x01(\x0b\x32?.qwak.user_application.common.v0.PodComputeResourceTemplateSpecH\x00\x12\x46\n\rcpu_resources\x18\x03 \x01(\x0b\x32-.qwak.user_application.common.v0.CpuResourcesH\x00\x12\x46\n\rgpu_resources\x18\x04 \x01(\x0b\x32-.qwak.user_application.common.v0.GpuResourcesH\x00\x42\x0b\n\tresources*7\n\nMemoryUnit\x12\x17\n\x13INVALID_MEMORY_UNIT\x10\x00\x12\x07\n\x03MIB\x10\x01\x12\x07\n\x03GIB\x10\x02*\x95\x02\n\x07GpuType\x12\x14\n\x10INVALID_GPU_TYPE\x10\x00\x12\x0e\n\nNVIDIA_K80\x10\x01\x12\x0f\n\x0bNVIDIA_V100\x10\x02\x12\x0f\n\x0bNVIDIA_A100\x10\x03\x12\r\n\tNVIDIA_T4\x10\x04\x12\x0f\n\x0bNVIDIA_A10G\x10\x05\x12\r\n\tNVIDIA_L4\x10\x06\x12\x14\n\x10NVIDIA_T4_1_4_15\x10\x07\x12\x14\n\x10NVIDIA_T4_1_8_30\x10\x08\x12\x15\n\x11NVIDIA_T4_1_16_60\x10\t\x12\x1e\n\x1aNVIDIA_A100_80GB_8_96_1360\x10\n\x12\x16\n\x12NVIDIA_V100_1_8_52\x10\x0b\x12\x18\n\x14NVIDIA_V100_4_32_208\x10\x0c*\x88\x02\n\x1cSparkClusterResourceTemplate\x12\"\n\x1eSPARK_CLUSTER_RESOURCE_INVALID\x10\x00\x12 \n\x1cSPARK_CLUSTER_RESOURCE_SMALL\x10\x01\x12!\n\x1dSPARK_CLUSTER_RESOURCE_MEDIUM\x10\x02\x12 \n\x1cSPARK_CLUSTER_RESOURCE_LARGE\x10\x03\x12\x1d\n\x19SPARK_CLUSTER_RESOURCE_XL\x10\x04\x12\x1e\n\x1aSPARK_CLUSTER_RESOURCE_2XL\x10\x05\x12\x1e\n\x1aSPARK_CLUSTER_RESOURCE_3XL\x10\x06*\x8a\x01\n\x14NodeOptimizationType\x12\x1d\n\x19NODE_OPTIMIZATION_INVALID\x10\x00\x12\x1a\n\x16NODE_OPTIMIZATION_NONE\x10\x01\x12\x19\n\x15NODE_OPTIMIZATION_CPU\x10\x02\x12\x1c\n\x18NODE_OPTIMIZATION_MEMORY\x10\x03\x42\xc5\x01\n&com.qwak.ai.user_application.common.v0P\x01Z\x98\x01github.com/qwak-ai/qwak-platform/services/core/go/admiral/user-application-value-api/pb/qwak/user_application_value/common/v0;user_application_common_v0b\x06proto3')

_MEMORYUNIT = DESCRIPTOR.enum_types_by_name['MemoryUnit']
MemoryUnit = enum_type_wrapper.EnumTypeWrapper(_MEMORYUNIT)
_GPUTYPE = DESCRIPTOR.enum_types_by_name['GpuType']
GpuType = enum_type_wrapper.EnumTypeWrapper(_GPUTYPE)
_SPARKCLUSTERRESOURCETEMPLATE = DESCRIPTOR.enum_types_by_name['SparkClusterResourceTemplate']
SparkClusterResourceTemplate = enum_type_wrapper.EnumTypeWrapper(_SPARKCLUSTERRESOURCETEMPLATE)
_NODEOPTIMIZATIONTYPE = DESCRIPTOR.enum_types_by_name['NodeOptimizationType']
NodeOptimizationType = enum_type_wrapper.EnumTypeWrapper(_NODEOPTIMIZATIONTYPE)
INVALID_MEMORY_UNIT = 0
MIB = 1
GIB = 2
INVALID_GPU_TYPE = 0
NVIDIA_K80 = 1
NVIDIA_V100 = 2
NVIDIA_A100 = 3
NVIDIA_T4 = 4
NVIDIA_A10G = 5
NVIDIA_L4 = 6
NVIDIA_T4_1_4_15 = 7
NVIDIA_T4_1_8_30 = 8
NVIDIA_T4_1_16_60 = 9
NVIDIA_A100_80GB_8_96_1360 = 10
NVIDIA_V100_1_8_52 = 11
NVIDIA_V100_4_32_208 = 12
SPARK_CLUSTER_RESOURCE_INVALID = 0
SPARK_CLUSTER_RESOURCE_SMALL = 1
SPARK_CLUSTER_RESOURCE_MEDIUM = 2
SPARK_CLUSTER_RESOURCE_LARGE = 3
SPARK_CLUSTER_RESOURCE_XL = 4
SPARK_CLUSTER_RESOURCE_2XL = 5
SPARK_CLUSTER_RESOURCE_3XL = 6
NODE_OPTIMIZATION_INVALID = 0
NODE_OPTIMIZATION_NONE = 1
NODE_OPTIMIZATION_CPU = 2
NODE_OPTIMIZATION_MEMORY = 3


_CPURESOURCES = DESCRIPTOR.message_types_by_name['CpuResources']
_GPURESOURCES = DESCRIPTOR.message_types_by_name['GpuResources']
_SPARKCLUSTERRESOURCETEMPLATESPEC = DESCRIPTOR.message_types_by_name['SparkClusterResourceTemplateSpec']
_SPARKRESOURCECONFIGURATION = DESCRIPTOR.message_types_by_name['SparkResourceConfiguration']
_PODCOMPUTERESOURCETEMPLATESPEC = DESCRIPTOR.message_types_by_name['PodComputeResourceTemplateSpec']
_PODCOMPUTERESOURCES = DESCRIPTOR.message_types_by_name['PodComputeResources']
_SPARKCOMPUTERESOURCES = DESCRIPTOR.message_types_by_name['SparkComputeResources']
_CLIENTSPARKCOMPUTERESOURCES = DESCRIPTOR.message_types_by_name['ClientSparkComputeResources']
_CLIENTPODCOMPUTERESOURCES = DESCRIPTOR.message_types_by_name['ClientPodComputeResources']
CpuResources = _reflection.GeneratedProtocolMessageType('CpuResources', (_message.Message,), {
  'DESCRIPTOR' : _CPURESOURCES,
  '__module__' : 'qwak.user_application.common.v0.resources_pb2'
  # @@protoc_insertion_point(class_scope:qwak.user_application.common.v0.CpuResources)
  })
_sym_db.RegisterMessage(CpuResources)

GpuResources = _reflection.GeneratedProtocolMessageType('GpuResources', (_message.Message,), {
  'DESCRIPTOR' : _GPURESOURCES,
  '__module__' : 'qwak.user_application.common.v0.resources_pb2'
  # @@protoc_insertion_point(class_scope:qwak.user_application.common.v0.GpuResources)
  })
_sym_db.RegisterMessage(GpuResources)

SparkClusterResourceTemplateSpec = _reflection.GeneratedProtocolMessageType('SparkClusterResourceTemplateSpec', (_message.Message,), {
  'DESCRIPTOR' : _SPARKCLUSTERRESOURCETEMPLATESPEC,
  '__module__' : 'qwak.user_application.common.v0.resources_pb2'
  # @@protoc_insertion_point(class_scope:qwak.user_application.common.v0.SparkClusterResourceTemplateSpec)
  })
_sym_db.RegisterMessage(SparkClusterResourceTemplateSpec)

SparkResourceConfiguration = _reflection.GeneratedProtocolMessageType('SparkResourceConfiguration', (_message.Message,), {
  'DESCRIPTOR' : _SPARKRESOURCECONFIGURATION,
  '__module__' : 'qwak.user_application.common.v0.resources_pb2'
  # @@protoc_insertion_point(class_scope:qwak.user_application.common.v0.SparkResourceConfiguration)
  })
_sym_db.RegisterMessage(SparkResourceConfiguration)

PodComputeResourceTemplateSpec = _reflection.GeneratedProtocolMessageType('PodComputeResourceTemplateSpec', (_message.Message,), {
  'DESCRIPTOR' : _PODCOMPUTERESOURCETEMPLATESPEC,
  '__module__' : 'qwak.user_application.common.v0.resources_pb2'
  # @@protoc_insertion_point(class_scope:qwak.user_application.common.v0.PodComputeResourceTemplateSpec)
  })
_sym_db.RegisterMessage(PodComputeResourceTemplateSpec)

PodComputeResources = _reflection.GeneratedProtocolMessageType('PodComputeResources', (_message.Message,), {
  'DESCRIPTOR' : _PODCOMPUTERESOURCES,
  '__module__' : 'qwak.user_application.common.v0.resources_pb2'
  # @@protoc_insertion_point(class_scope:qwak.user_application.common.v0.PodComputeResources)
  })
_sym_db.RegisterMessage(PodComputeResources)

SparkComputeResources = _reflection.GeneratedProtocolMessageType('SparkComputeResources', (_message.Message,), {
  'DESCRIPTOR' : _SPARKCOMPUTERESOURCES,
  '__module__' : 'qwak.user_application.common.v0.resources_pb2'
  # @@protoc_insertion_point(class_scope:qwak.user_application.common.v0.SparkComputeResources)
  })
_sym_db.RegisterMessage(SparkComputeResources)

ClientSparkComputeResources = _reflection.GeneratedProtocolMessageType('ClientSparkComputeResources', (_message.Message,), {
  'DESCRIPTOR' : _CLIENTSPARKCOMPUTERESOURCES,
  '__module__' : 'qwak.user_application.common.v0.resources_pb2'
  # @@protoc_insertion_point(class_scope:qwak.user_application.common.v0.ClientSparkComputeResources)
  })
_sym_db.RegisterMessage(ClientSparkComputeResources)

ClientPodComputeResources = _reflection.GeneratedProtocolMessageType('ClientPodComputeResources', (_message.Message,), {
  'DESCRIPTOR' : _CLIENTPODCOMPUTERESOURCES,
  '__module__' : 'qwak.user_application.common.v0.resources_pb2'
  # @@protoc_insertion_point(class_scope:qwak.user_application.common.v0.ClientPodComputeResources)
  })
_sym_db.RegisterMessage(ClientPodComputeResources)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n&com.qwak.ai.user_application.common.v0P\001Z\230\001github.com/qwak-ai/qwak-platform/services/core/go/admiral/user-application-value-api/pb/qwak/user_application_value/common/v0;user_application_common_v0'
  _MEMORYUNIT._serialized_start=1717
  _MEMORYUNIT._serialized_end=1772
  _GPUTYPE._serialized_start=1775
  _GPUTYPE._serialized_end=2052
  _SPARKCLUSTERRESOURCETEMPLATE._serialized_start=2055
  _SPARKCLUSTERRESOURCETEMPLATE._serialized_end=2319
  _NODEOPTIMIZATIONTYPE._serialized_start=2322
  _NODEOPTIMIZATIONTYPE._serialized_end=2460
  _CPURESOURCES._serialized_start=84
  _CPURESOURCES._serialized_end=201
  _GPURESOURCES._serialized_start=203
  _GPURESOURCES._serialized_end=297
  _SPARKCLUSTERRESOURCETEMPLATESPEC._serialized_start=299
  _SPARKCLUSTERRESOURCETEMPLATESPEC._serialized_end=414
  _SPARKRESOURCECONFIGURATION._serialized_start=417
  _SPARKRESOURCECONFIGURATION._serialized_end=612
  _PODCOMPUTERESOURCETEMPLATESPEC._serialized_start=614
  _PODCOMPUTERESOURCETEMPLATESPEC._serialized_end=667
  _PODCOMPUTERESOURCES._serialized_start=670
  _PODCOMPUTERESOURCES._serialized_end=1001
  _SPARKCOMPUTERESOURCES._serialized_start=1003
  _SPARKCOMPUTERESOURCES._serialized_end=1119
  _CLIENTSPARKCOMPUTERESOURCES._serialized_start=1122
  _CLIENTSPARKCOMPUTERESOURCES._serialized_end=1351
  _CLIENTPODCOMPUTERESOURCES._serialized_start=1354
  _CLIENTPODCOMPUTERESOURCES._serialized_end=1715
# @@protoc_insertion_point(module_scope)
