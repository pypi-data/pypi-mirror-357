# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: qwak/feature_store/sources/streaming.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n*qwak/feature_store/sources/streaming.proto\x12\x1aqwak.feature.store.sources\"\xc4\x01\n\x0fStreamingSource\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\x42\n\x0bkafkaSource\x18\x03 \x01(\x0b\x32\'.qwak.feature.store.sources.KafkaSourceB\x02\x18\x01H\x00\x12\x42\n\rkafkaSourceV1\x18\x04 \x01(\x0b\x32).qwak.feature.store.sources.KafkaSourceV1H\x00\x42\x06\n\x04type\"\x9f\x01\n\x0bKafkaSource\x12\x18\n\x10\x62ootstrap_server\x18\x01 \x01(\t\x12\x16\n\x0e\x63onsumer_topic\x18\x02 \x01(\t\x12\x1c\n\x14username_secret_name\x18\x03 \x01(\t\x12\x1c\n\x14password_secret_name\x18\x04 \x01(\t\x12\x1e\n\x16\x63onsumer_configuration\x18\x05 \x01(\t:\x02\x18\x01\"\xbd\x04\n\rKafkaSourceV1\x12\x19\n\x11\x62ootstrap_servers\x18\x01 \x01(\t\x12\x10\n\x06\x61ssign\x18\x02 \x01(\tH\x00\x12\x13\n\tsubscribe\x18\x03 \x01(\tH\x00\x12\x1b\n\x11subscribe_pattern\x18\x04 \x01(\tH\x00\x12T\n\x0esecret_configs\x18\x07 \x03(\x0b\x32<.qwak.feature.store.sources.KafkaSourceV1.SecretConfigsEntry\x12^\n\x13passthrough_configs\x18\x08 \x03(\x0b\x32\x41.qwak.feature.store.sources.KafkaSourceV1.PassthroughConfigsEntry\x12\x44\n\x0f\x64\x65serialization\x18\t \x01(\x0b\x32+.qwak.feature.store.sources.Deserialization\x12I\n\x15\x61uthentication_method\x18\n \x01(\x0b\x32*.qwak.feature.store.sources.Authentication\x1a\x34\n\x12SecretConfigsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x39\n\x17PassthroughConfigsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x42\x15\n\x13topic_configuration\"\xd8\x01\n\x0e\x41uthentication\x12>\n\x12sasl_configuration\x18\x01 \x01(\x0b\x32 .qwak.feature.store.sources.SaslH\x00\x12@\n\x13plain_configuration\x18\x02 \x01(\x0b\x32!.qwak.feature.store.sources.PlainH\x00\x12<\n\x11ssl_configuration\x18\x03 \x01(\x0b\x32\x1f.qwak.feature.store.sources.SslH\x00\x42\x06\n\x04type\"\x05\n\x03Ssl\"\x07\n\x05Plain\"\xc4\x01\n\x04Sasl\x12\x17\n\x0fusername_secret\x18\x01 \x01(\t\x12\x17\n\x0fpassword_secret\x18\x02 \x01(\t\x12\x41\n\x0esasl_mechanism\x18\x03 \x01(\x0e\x32).qwak.feature.store.sources.SaslMechanism\x12G\n\x11security_protocol\x18\x04 \x01(\x0e\x32,.qwak.feature.store.sources.SecurityProtocol\"\xb9\x01\n\x0f\x44\x65serialization\x12M\n\x13\x63ustom_deserializer\x18\x01 \x01(\x0b\x32..qwak.feature.store.sources.CustomDeserializerH\x00\x12O\n\x14generic_deserializer\x18\x02 \x01(\x0b\x32/.qwak.feature.store.sources.GenericDeserializerH\x00\x42\x06\n\x04type\"B\n\x12\x43ustomDeserializer\x12\x15\n\rfunction_name\x18\x01 \x01(\t\x12\x15\n\rartifact_path\x18\x02 \x01(\t\"m\n\x13GenericDeserializer\x12\x46\n\x13\x64\x65serializer_format\x18\x01 \x01(\x0e\x32).qwak.feature.store.sources.MessageFormat\x12\x0e\n\x06schema\x18\x02 \x01(\t*<\n\rSaslMechanism\x12\x0f\n\x0bSCRAMSHA256\x10\x00\x12\x0f\n\x0bSCRAMSHA512\x10\x01\x12\t\n\x05PLAIN\x10\x02* \n\x10SecurityProtocol\x12\x0c\n\x08SASL_SSL\x10\x00*0\n\rMessageFormat\x12\x0b\n\x07INVALID\x10\x00\x12\x08\n\x04JSON\x10\x01\x12\x08\n\x04\x41VRO\x10\x02\x42X\n%com.qwak.ai.feature.store.sources.apiP\x01Z-qwak/featurestore/sources;featurestoresourcesb\x06proto3')

_SASLMECHANISM = DESCRIPTOR.enum_types_by_name['SaslMechanism']
SaslMechanism = enum_type_wrapper.EnumTypeWrapper(_SASLMECHANISM)
_SECURITYPROTOCOL = DESCRIPTOR.enum_types_by_name['SecurityProtocol']
SecurityProtocol = enum_type_wrapper.EnumTypeWrapper(_SECURITYPROTOCOL)
_MESSAGEFORMAT = DESCRIPTOR.enum_types_by_name['MessageFormat']
MessageFormat = enum_type_wrapper.EnumTypeWrapper(_MESSAGEFORMAT)
SCRAMSHA256 = 0
SCRAMSHA512 = 1
PLAIN = 2
SASL_SSL = 0
INVALID = 0
JSON = 1
AVRO = 2


_STREAMINGSOURCE = DESCRIPTOR.message_types_by_name['StreamingSource']
_KAFKASOURCE = DESCRIPTOR.message_types_by_name['KafkaSource']
_KAFKASOURCEV1 = DESCRIPTOR.message_types_by_name['KafkaSourceV1']
_KAFKASOURCEV1_SECRETCONFIGSENTRY = _KAFKASOURCEV1.nested_types_by_name['SecretConfigsEntry']
_KAFKASOURCEV1_PASSTHROUGHCONFIGSENTRY = _KAFKASOURCEV1.nested_types_by_name['PassthroughConfigsEntry']
_AUTHENTICATION = DESCRIPTOR.message_types_by_name['Authentication']
_SSL = DESCRIPTOR.message_types_by_name['Ssl']
_PLAIN = DESCRIPTOR.message_types_by_name['Plain']
_SASL = DESCRIPTOR.message_types_by_name['Sasl']
_DESERIALIZATION = DESCRIPTOR.message_types_by_name['Deserialization']
_CUSTOMDESERIALIZER = DESCRIPTOR.message_types_by_name['CustomDeserializer']
_GENERICDESERIALIZER = DESCRIPTOR.message_types_by_name['GenericDeserializer']
StreamingSource = _reflection.GeneratedProtocolMessageType('StreamingSource', (_message.Message,), {
  'DESCRIPTOR' : _STREAMINGSOURCE,
  '__module__' : 'qwak.feature_store.sources.streaming_pb2'
  # @@protoc_insertion_point(class_scope:qwak.feature.store.sources.StreamingSource)
  })
_sym_db.RegisterMessage(StreamingSource)

KafkaSource = _reflection.GeneratedProtocolMessageType('KafkaSource', (_message.Message,), {
  'DESCRIPTOR' : _KAFKASOURCE,
  '__module__' : 'qwak.feature_store.sources.streaming_pb2'
  # @@protoc_insertion_point(class_scope:qwak.feature.store.sources.KafkaSource)
  })
_sym_db.RegisterMessage(KafkaSource)

KafkaSourceV1 = _reflection.GeneratedProtocolMessageType('KafkaSourceV1', (_message.Message,), {

  'SecretConfigsEntry' : _reflection.GeneratedProtocolMessageType('SecretConfigsEntry', (_message.Message,), {
    'DESCRIPTOR' : _KAFKASOURCEV1_SECRETCONFIGSENTRY,
    '__module__' : 'qwak.feature_store.sources.streaming_pb2'
    # @@protoc_insertion_point(class_scope:qwak.feature.store.sources.KafkaSourceV1.SecretConfigsEntry)
    })
  ,

  'PassthroughConfigsEntry' : _reflection.GeneratedProtocolMessageType('PassthroughConfigsEntry', (_message.Message,), {
    'DESCRIPTOR' : _KAFKASOURCEV1_PASSTHROUGHCONFIGSENTRY,
    '__module__' : 'qwak.feature_store.sources.streaming_pb2'
    # @@protoc_insertion_point(class_scope:qwak.feature.store.sources.KafkaSourceV1.PassthroughConfigsEntry)
    })
  ,
  'DESCRIPTOR' : _KAFKASOURCEV1,
  '__module__' : 'qwak.feature_store.sources.streaming_pb2'
  # @@protoc_insertion_point(class_scope:qwak.feature.store.sources.KafkaSourceV1)
  })
_sym_db.RegisterMessage(KafkaSourceV1)
_sym_db.RegisterMessage(KafkaSourceV1.SecretConfigsEntry)
_sym_db.RegisterMessage(KafkaSourceV1.PassthroughConfigsEntry)

Authentication = _reflection.GeneratedProtocolMessageType('Authentication', (_message.Message,), {
  'DESCRIPTOR' : _AUTHENTICATION,
  '__module__' : 'qwak.feature_store.sources.streaming_pb2'
  # @@protoc_insertion_point(class_scope:qwak.feature.store.sources.Authentication)
  })
_sym_db.RegisterMessage(Authentication)

Ssl = _reflection.GeneratedProtocolMessageType('Ssl', (_message.Message,), {
  'DESCRIPTOR' : _SSL,
  '__module__' : 'qwak.feature_store.sources.streaming_pb2'
  # @@protoc_insertion_point(class_scope:qwak.feature.store.sources.Ssl)
  })
_sym_db.RegisterMessage(Ssl)

Plain = _reflection.GeneratedProtocolMessageType('Plain', (_message.Message,), {
  'DESCRIPTOR' : _PLAIN,
  '__module__' : 'qwak.feature_store.sources.streaming_pb2'
  # @@protoc_insertion_point(class_scope:qwak.feature.store.sources.Plain)
  })
_sym_db.RegisterMessage(Plain)

Sasl = _reflection.GeneratedProtocolMessageType('Sasl', (_message.Message,), {
  'DESCRIPTOR' : _SASL,
  '__module__' : 'qwak.feature_store.sources.streaming_pb2'
  # @@protoc_insertion_point(class_scope:qwak.feature.store.sources.Sasl)
  })
_sym_db.RegisterMessage(Sasl)

Deserialization = _reflection.GeneratedProtocolMessageType('Deserialization', (_message.Message,), {
  'DESCRIPTOR' : _DESERIALIZATION,
  '__module__' : 'qwak.feature_store.sources.streaming_pb2'
  # @@protoc_insertion_point(class_scope:qwak.feature.store.sources.Deserialization)
  })
_sym_db.RegisterMessage(Deserialization)

CustomDeserializer = _reflection.GeneratedProtocolMessageType('CustomDeserializer', (_message.Message,), {
  'DESCRIPTOR' : _CUSTOMDESERIALIZER,
  '__module__' : 'qwak.feature_store.sources.streaming_pb2'
  # @@protoc_insertion_point(class_scope:qwak.feature.store.sources.CustomDeserializer)
  })
_sym_db.RegisterMessage(CustomDeserializer)

GenericDeserializer = _reflection.GeneratedProtocolMessageType('GenericDeserializer', (_message.Message,), {
  'DESCRIPTOR' : _GENERICDESERIALIZER,
  '__module__' : 'qwak.feature_store.sources.streaming_pb2'
  # @@protoc_insertion_point(class_scope:qwak.feature.store.sources.GenericDeserializer)
  })
_sym_db.RegisterMessage(GenericDeserializer)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n%com.qwak.ai.feature.store.sources.apiP\001Z-qwak/featurestore/sources;featurestoresources'
  _STREAMINGSOURCE.fields_by_name['kafkaSource']._options = None
  _STREAMINGSOURCE.fields_by_name['kafkaSource']._serialized_options = b'\030\001'
  _KAFKASOURCE._options = None
  _KAFKASOURCE._serialized_options = b'\030\001'
  _KAFKASOURCEV1_SECRETCONFIGSENTRY._options = None
  _KAFKASOURCEV1_SECRETCONFIGSENTRY._serialized_options = b'8\001'
  _KAFKASOURCEV1_PASSTHROUGHCONFIGSENTRY._options = None
  _KAFKASOURCEV1_PASSTHROUGHCONFIGSENTRY._serialized_options = b'8\001'
  _SASLMECHANISM._serialized_start=1812
  _SASLMECHANISM._serialized_end=1872
  _SECURITYPROTOCOL._serialized_start=1874
  _SECURITYPROTOCOL._serialized_end=1906
  _MESSAGEFORMAT._serialized_start=1908
  _MESSAGEFORMAT._serialized_end=1956
  _STREAMINGSOURCE._serialized_start=75
  _STREAMINGSOURCE._serialized_end=271
  _KAFKASOURCE._serialized_start=274
  _KAFKASOURCE._serialized_end=433
  _KAFKASOURCEV1._serialized_start=436
  _KAFKASOURCEV1._serialized_end=1009
  _KAFKASOURCEV1_SECRETCONFIGSENTRY._serialized_start=875
  _KAFKASOURCEV1_SECRETCONFIGSENTRY._serialized_end=927
  _KAFKASOURCEV1_PASSTHROUGHCONFIGSENTRY._serialized_start=929
  _KAFKASOURCEV1_PASSTHROUGHCONFIGSENTRY._serialized_end=986
  _AUTHENTICATION._serialized_start=1012
  _AUTHENTICATION._serialized_end=1228
  _SSL._serialized_start=1230
  _SSL._serialized_end=1235
  _PLAIN._serialized_start=1237
  _PLAIN._serialized_end=1244
  _SASL._serialized_start=1247
  _SASL._serialized_end=1443
  _DESERIALIZATION._serialized_start=1446
  _DESERIALIZATION._serialized_end=1631
  _CUSTOMDESERIALIZER._serialized_start=1633
  _CUSTOMDESERIALIZER._serialized_end=1699
  _GENERICDESERIALIZER._serialized_start=1701
  _GENERICDESERIALIZER._serialized_end=1810
# @@protoc_insertion_point(module_scope)
