# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: qwak/builds/builds.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from _qwak_proto.qwak.deployment import deployment_pb2 as qwak_dot_deployment_dot_deployment__pb2
from _qwak_proto.qwak.builds import build_pb2 as qwak_dot_builds_dot_build__pb2
from _qwak_proto.qwak.fitness_service import status_pb2 as qwak_dot_fitness__service_dot_status__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x18qwak/builds/builds.proto\x12\x16qwak.builds.management\x1a\x1fgoogle/protobuf/timestamp.proto\x1a qwak/deployment/deployment.proto\x1a\x17qwak/builds/build.proto\x1a!qwak/fitness_service/status.proto\"\xf4\x05\n\x05\x42uild\x12\x35\n\nbuild_spec\x18\x01 \x01(\x0b\x32!.qwak.builds.management.BuildSpec\x12\x39\n\x0c\x62uild_status\x18\x02 \x01(\x0e\x32#.qwak.builds.management.BuildStatus\x12\x39\n\x0cmodel_schema\x18\x03 \x01(\x0b\x32#.qwak.builds.management.ModelSchema\x12.\n\ncreated_at\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x12\n\ncreated_by\x18\x05 \x01(\t\x12\x34\n\x10last_modified_at\x18\x06 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x18\n\x10last_modified_by\x18\x07 \x01(\t\x12V\n\x17\x64\x65ployment_build_status\x18\x08 \x01(\x0e\x32\x31.qwak.deployment.management.ModelDeploymentStatusB\x02\x18\x01\x12V\n\x14hosting_service_type\x18\t \x01(\x0e\x32\x38.qwak.deployment.management.DeploymentHostingServiceType\x12,\n\x08\x65nd_date\x18\n \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x1e\n\x16\x61vailable_environments\x18\x0b \x03(\t\x12\x1d\n\x15\x64\x65ployed_environments\x18\x0c \x03(\t\x12\x32\n\tpodStatus\x18\r \x01(\x0b\x32\x1f.qwak.fitness.service.PodStatus\x12\x16\n\x0eimage_name_tag\x18\x0e \x01(\t\x12\x41\n\x0f\x62uild_initiator\x18\x0f \x01(\x0b\x32(.qwak.builds.orchestrator.BuildInitiator\"\x86\x03\n\tBuildSpec\x12\x10\n\x08\x62uild_id\x18\x01 \x01(\t\x12\x11\n\tcommit_id\x18\x02 \x01(\t\x12\x10\n\x08model_id\x18\x03 \x01(\t\x12\x13\n\x0b\x62ranch_name\x18\x04 \x01(\t\x12\x11\n\tbranch_id\x18\x08 \x01(\t\x12\x0c\n\x04tags\x18\x05 \x03(\t\x12T\n\x1a\x65xperiment_tracking_values\x18\x06 \x01(\x0b\x32\x30.qwak.builds.management.ExperimentTrackingValues\x12G\n\x13\x62uild_configuration\x18\x07 \x01(\x0b\x32*.qwak.builds.management.BuildConfiguration\x12\x17\n\x0f\x62uild_code_path\x18\t \x01(\t\x12\x13\n\x0b\x62uild_steps\x18\n \x03(\t\x12\x16\n\x0e\x65nvironment_id\x18\x0b \x01(\t\x12\x12\n\nmodel_uuid\x18\x0c \x01(\t\x12\x13\n\x0bsdk_version\x18\r \x01(\t\"\xee\x01\n\x0bModelSchema\x12\x30\n\x08\x65ntities\x18\x01 \x03(\x0b\x32\x1e.qwak.builds.management.Entity\x12\x31\n\x08\x66\x65\x61tures\x18\x02 \x03(\x0b\x32\x1f.qwak.builds.management.Feature\x12\x37\n\x0bpredictions\x18\x03 \x03(\x0b\x32\".qwak.builds.management.Prediction\x12\x41\n\x10inference_output\x18\x04 \x03(\x0b\x32\'.qwak.builds.management.InferenceOutput\"G\n\x06\x45ntity\x12\x0c\n\x04name\x18\x01 \x01(\t\x12/\n\x04type\x18\x02 \x01(\x0b\x32!.qwak.builds.management.ValueType\"\xd0\x04\n\x07\x46\x65\x61ture\x12=\n\rbatch_feature\x18\x01 \x01(\x0b\x32$.qwak.builds.management.BatchFeatureH\x00\x12\x43\n\x10\x65xplicit_feature\x18\x02 \x01(\x0b\x32\'.qwak.builds.management.ExplicitFeatureH\x00\x12\x45\n\x12on_the_fly_feature\x18\x03 \x01(\x0b\x32\'.qwak.builds.management.OnTheFlyFeatureH\x00\x12\x45\n\x11streaming_feature\x18\x04 \x01(\x0b\x32(.qwak.builds.management.StreamingFeatureH\x00\x12=\n\rrequest_input\x18\x05 \x01(\x0b\x32$.qwak.builds.management.RequestInputH\x00\x12\\\n\x1dstreaming_aggregation_feature\x18\x06 \x01(\x0b\x32\x33.qwak.builds.management.StreamingAggregationFeatureH\x00\x12\x42\n\x10\x62\x61tch_feature_v1\x18\x07 \x01(\x0b\x32&.qwak.builds.management.BatchFeatureV1H\x00\x12J\n\x14streaming_feature_v1\x18\x08 \x01(\x0b\x32*.qwak.builds.management.StreamingFeatureV1H\x00\x42\x06\n\x04type\"\x8f\x01\n\x0fOnTheFlyFeature\x12.\n\x06\x65ntity\x18\x01 \x01(\x0b\x32\x1e.qwak.builds.management.Entity\x12\x0c\n\x04name\x18\x02 \x01(\t\x12>\n\x0fsource_features\x18\x03 \x03(\x0b\x32%.qwak.builds.management.SourceFeature\"N\n\x0e\x42\x61tchFeatureV1\x12.\n\x06\x65ntity\x18\x01 \x01(\x0b\x32\x1e.qwak.builds.management.Entity\x12\x0c\n\x04name\x18\x02 \x01(\t\"R\n\x12StreamingFeatureV1\x12.\n\x06\x65ntity\x18\x01 \x01(\x0b\x32\x1e.qwak.builds.management.Entity\x12\x0c\n\x04name\x18\x02 \x01(\t\"L\n\x0c\x42\x61tchFeature\x12.\n\x06\x65ntity\x18\x01 \x01(\x0b\x32\x1e.qwak.builds.management.Entity\x12\x0c\n\x04name\x18\x02 \x01(\t\"P\n\x10StreamingFeature\x12.\n\x06\x65ntity\x18\x01 \x01(\x0b\x32\x1e.qwak.builds.management.Entity\x12\x0c\n\x04name\x18\x02 \x01(\t\"[\n\x1bStreamingAggregationFeature\x12.\n\x06\x65ntity\x18\x01 \x01(\x0b\x32\x1e.qwak.builds.management.Entity\x12\x0c\n\x04name\x18\x02 \x01(\t\"P\n\x0f\x45xplicitFeature\x12\x0c\n\x04name\x18\x01 \x01(\t\x12/\n\x04type\x18\x02 \x01(\x0b\x32!.qwak.builds.management.ValueType\"M\n\x0cRequestInput\x12\x0c\n\x04name\x18\x01 \x01(\t\x12/\n\x04type\x18\x02 \x01(\x0b\x32!.qwak.builds.management.ValueType\"\x9b\x01\n\rSourceFeature\x12\x43\n\x10\x65xplicit_feature\x18\x01 \x01(\x0b\x32\'.qwak.builds.management.ExplicitFeatureH\x00\x12=\n\rrequest_input\x18\x02 \x01(\x0b\x32$.qwak.builds.management.RequestInputH\x00\x42\x06\n\x04type\"K\n\nPrediction\x12\x0c\n\x04name\x18\x01 \x01(\t\x12/\n\x04type\x18\x02 \x01(\x0b\x32!.qwak.builds.management.ValueType\"P\n\x0fInferenceOutput\x12\x0c\n\x04name\x18\x01 \x01(\t\x12/\n\x04type\x18\x02 \x01(\x0b\x32!.qwak.builds.management.ValueType\"\xa6\x01\n\tValueType\x12\x35\n\x04type\x18\x01 \x01(\x0e\x32\'.qwak.builds.management.ValueType.Types\"b\n\x05Types\x12\x0b\n\x07INVALID\x10\x00\x12\t\n\x05\x42YTES\x10\x01\x12\n\n\x06STRING\x10\x02\x12\t\n\x05INT32\x10\x03\x12\t\n\x05INT64\x10\x04\x12\n\n\x06\x44OUBLE\x10\x05\x12\t\n\x05\x46LOAT\x10\x06\x12\x08\n\x04\x42OOL\x10\x07\"j\n\x11ParameterCategory\"U\n\x08\x43\x61tegory\x12\x0b\n\x07INVALID\x10\x00\x12\n\n\x06\x45NTITY\x10\x01\x12\x0b\n\x07\x46\x45\x41TURE\x10\x02\x12\x0e\n\nPREDICTION\x10\x03\x12\x13\n\x0fINFERENCEOUTPUT\x10\x04\"\xae\x01\n\x14RegisterBuildRequest\x12\x35\n\nbuild_spec\x18\x01 \x01(\x0b\x32!.qwak.builds.management.BuildSpec\x12=\n\x0cmodel_schema\x18\x02 \x01(\x0b\x32#.qwak.builds.management.ModelSchemaB\x02\x18\x01\x12 \n\x14qwak_calling_user_id\x18\x03 \x01(\tB\x02\x18\x01\"i\n\x1aRegisterModelSchemaRequest\x12\x10\n\x08\x62uild_id\x18\x01 \x01(\t\x12\x39\n\x0cmodel_schema\x18\x02 \x01(\x0b\x32#.qwak.builds.management.ModelSchema\"\x91\x01\n\'RegisterExperimentTrackingValuesRequest\x12\x10\n\x08\x62uild_id\x18\x01 \x01(\t\x12T\n\x1a\x65xperiment_tracking_values\x18\x02 \x01(\x0b\x32\x30.qwak.builds.management.ExperimentTrackingValues\"*\n(RegisterExperimentTrackingValuesResponse\"z\n\x18\x45xperimentTrackingValues\x12/\n\x07metrics\x18\x01 \x03(\x0b\x32\x1e.qwak.builds.management.Metric\x12-\n\x06params\x18\x02 \x03(\x0b\x32\x1d.qwak.builds.management.Param\"\xd1\x02\n\x12\x42uildConfiguration\x12\x46\n\x10\x62uild_properties\x18\x01 \x01(\x0b\x32,.qwak.builds.management.BuildPropertiesProto\x12;\n\tbuild_env\x18\x02 \x01(\x0b\x32(.qwak.builds.management.BuildEnvironment\x12;\n\tpre_build\x18\x03 \x01(\x0b\x32(.qwak.builds.management.BuildEnvironment\x12<\n\npost_build\x18\x04 \x01(\x0b\x32(.qwak.builds.management.BuildEnvironment\x12*\n\x04step\x18\x05 \x01(\x0b\x32\x1c.qwak.builds.management.Step\x12\x0f\n\x07verbose\x18\x06 \x01(\x05\"_\n\x04Step\x12\r\n\x05tests\x18\x01 \x01(\x08\x12\x1f\n\x17validate_build_artifact\x18\x02 \x01(\x08\x12\'\n\x1fvalidate_build_artifact_timeout\x18\x03 \x01(\x05\"\xc4\x01\n\x14\x42uildPropertiesProto\x12\x10\n\x08model_id\x18\x01 \x01(\t\x12\x38\n\tmodel_uri\x18\x02 \x01(\x0b\x32%.qwak.builds.management.BuildModelUri\x12\x0c\n\x04tags\x18\x03 \x03(\t\x12\x10\n\x08\x62uild_id\x18\x04 \x01(\t\x12\x0e\n\x06\x62ranch\x18\x05 \x01(\t\x12\x18\n\x10\x65nvironment_name\x18\x06 \x01(\t\x12\x16\n\x0egpu_compatible\x18\x07 \x01(\x08\"g\n\rBuildModelUri\x12\x0b\n\x03uri\x18\x01 \x01(\t\x12\x12\n\ngit_branch\x18\x02 \x01(\t\x12\x10\n\x08main_dir\x18\x03 \x01(\t\x12#\n\x1b\x64\x65pendency_required_folders\x18\x04 \x03(\t\"\xe8\x01\n\x10\x42uildEnvironment\x12\x33\n\x06\x64ocker\x18\x01 \x01(\x0b\x32#.qwak.builds.management.DockerBuild\x12\x31\n\x05local\x18\x02 \x01(\x0b\x32\".qwak.builds.management.LocalBuild\x12\x37\n\npython_env\x18\x03 \x01(\x0b\x32#.qwak.builds.management.PythonBuild\x12\x33\n\x06remote\x18\x04 \x01(\x0b\x32#.qwak.builds.management.RemoteBuild\"\x8a\x02\n\x0b\x44ockerBuild\x12\x12\n\nbase_image\x18\x01 \x01(\t\x12\x46\n\nbuild_args\x18\x02 \x03(\x0b\x32\x32.qwak.builds.management.DockerBuild.BuildArgsEntry\x12\x10\n\x08\x65nv_vars\x18\x03 \x03(\t\x12\x10\n\x08no_cache\x18\x04 \x01(\x08\x12\x0e\n\x06params\x18\x05 \x03(\t\x12\x1c\n\x14\x61ssumed_iam_role_arn\x18\x06 \x01(\t\x12\r\n\x05\x63\x61\x63he\x18\x07 \x01(\x08\x12\x0c\n\x04push\x18\x08 \x01(\x08\x1a\x30\n\x0e\x42uildArgsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"2\n\nLocalBuild\x12\x13\n\x0b\x61ws_profile\x18\x01 \x01(\t\x12\x0f\n\x07no_push\x18\x02 \x01(\x08\"\x9b\x02\n\x0bPythonBuild\x12 \n\x18qwak_sdk_extra_index_url\x18\x01 \x01(\t\x12\x43\n\nvirtualenv\x18\x02 \x01(\x0b\x32/.qwak.builds.management.VirtualEnvironmentBuild\x12\x31\n\x05\x63onda\x18\x03 \x01(\x0b\x32\".qwak.builds.management.CondaBuild\x12\x33\n\x06poetry\x18\x04 \x01(\x0b\x32#.qwak.builds.management.PoetryBuild\x12\x1c\n\x14\x64\x65pendency_file_path\x18\x05 \x01(\t\x12\x1f\n\x17use_deprecated_resolver\x18\x06 \x01(\x08\" \n\nCondaBuild\x12\x12\n\nconda_file\x18\x01 \x01(\t\"8\n\x0bPoetryBuild\x12\x16\n\x0epython_version\x18\x01 \x01(\t\x12\x11\n\tlock_file\x18\x02 \x01(\t\"K\n\x17VirtualEnvironmentBuild\x12\x16\n\x0epython_version\x18\x01 \x01(\t\x12\x18\n\x10requirements_txt\x18\x02 \x01(\t\"a\n\x0bRemoteBuild\x12\x11\n\tis_remote\x18\x01 \x01(\x08\x12?\n\tresources\x18\x02 \x01(\x0b\x32,.qwak.builds.management.RemoteBuildResources\"\x8f\x01\n\x14RemoteBuildResources\x12\x0c\n\x04\x63pus\x18\x01 \x01(\x02\x12\x0e\n\x06memory\x18\x02 \x01(\t\x12\x33\n\x08gpu_type\x18\x03 \x01(\x0e\x32!.qwak.builds.orchestrator.GpuType\x12\x12\n\ngpu_amount\x18\x04 \x01(\x05\x12\x10\n\x08instance\x18\x05 \x01(\t\"$\n\x06Metric\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x02\"#\n\x05Param\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"\x1d\n\x1bRegisterModelSchemaResponse\"d\n\x15RegisterBuildResponse\x12\x10\n\x08\x62uild_id\x18\x01 \x01(\t\x12\x39\n\x0c\x62uild_status\x18\x02 \x01(\x0e\x32#.qwak.builds.management.BuildStatus\"\xa9\x01\n\x18UpdateBuildStatusRequest\x12\x10\n\x08\x62uild_id\x18\x01 \x01(\t\x12\x39\n\x0c\x62uild_status\x18\x02 \x01(\x0e\x32#.qwak.builds.management.BuildStatus\x12 \n\x14qwak_calling_user_id\x18\x03 \x01(\tB\x02\x18\x01\x12\x1e\n\x16\x61vailable_environments\x18\x04 \x03(\t\"\x1b\n\x19UpdateBuildStatusResponse\"A\n\x18UpdateBuildBranchRequest\x12\x10\n\x08\x62uild_id\x18\x01 \x01(\t\x12\x13\n\x0b\x62ranch_name\x18\x02 \x01(\t\"\x1b\n\x19UpdateBuildBranchResponse\"#\n\x0fGetBuildRequest\x12\x10\n\x08\x62uild_id\x18\x01 \x01(\t\"@\n\x10GetBuildResponse\x12,\n\x05\x62uild\x18\x01 \x01(\x0b\x32\x1d.qwak.builds.management.Build\"Q\n\x11ListBuildsRequest\x12\x15\n\tbranch_id\x18\x01 \x01(\tB\x02\x18\x01\x12\x12\n\nmodel_uuid\x18\x02 \x01(\t\x12\x11\n\tbuild_ids\x18\x03 \x03(\t\"C\n\x12ListBuildsResponse\x12-\n\x06\x62uilds\x18\x01 \x03(\x0b\x32\x1d.qwak.builds.management.Build*\xe8\x01\n\x0b\x42uildStatus\x12\x0b\n\x07INVALID\x10\x00\x12\x0f\n\x0bIN_PROGRESS\x10\x01\x12\x0e\n\nSUCCESSFUL\x10\x02\x12\n\n\x06\x46\x41ILED\x10\x03\x12\x1d\n\x19REMOTE_BUILD_INITIALIZING\x10\x04\x12\x1a\n\x16REMOTE_BUILD_CANCELLED\x10\x05\x12\x1a\n\x16REMOTE_BUILD_TIMED_OUT\x10\x06\x12\x18\n\x14REMOTE_BUILD_UNKNOWN\x10\x07\x12\x18\n\x14SYNCING_ENVIRONMENTS\x10\x08\x12\x14\n\x10\x46INISHED_SYNCING\x10\t2\xed\x05\n\x17\x42uildsManagementService\x12l\n\rRegisterBuild\x12,.qwak.builds.management.RegisterBuildRequest\x1a-.qwak.builds.management.RegisterBuildResponse\x12x\n\x11UpdateBuildStatus\x12\x30.qwak.builds.management.UpdateBuildStatusRequest\x1a\x31.qwak.builds.management.UpdateBuildStatusResponse\x12~\n\x13RegisterModelSchema\x12\x32.qwak.builds.management.RegisterModelSchemaRequest\x1a\x33.qwak.builds.management.RegisterModelSchemaResponse\x12\xa5\x01\n RegisterExperimentTrackingValues\x12?.qwak.builds.management.RegisterExperimentTrackingValuesRequest\x1a@.qwak.builds.management.RegisterExperimentTrackingValuesResponse\x12]\n\x08GetBuild\x12\'.qwak.builds.management.GetBuildRequest\x1a(.qwak.builds.management.GetBuildResponse\x12\x63\n\nListBuilds\x12).qwak.builds.management.ListBuildsRequest\x1a*.qwak.builds.management.ListBuildsResponseB%\n!com.qwak.ai.management.builds.apiP\x01\x62\x06proto3')

_BUILDSTATUS = DESCRIPTOR.enum_types_by_name['BuildStatus']
BuildStatus = enum_type_wrapper.EnumTypeWrapper(_BUILDSTATUS)
INVALID = 0
IN_PROGRESS = 1
SUCCESSFUL = 2
FAILED = 3
REMOTE_BUILD_INITIALIZING = 4
REMOTE_BUILD_CANCELLED = 5
REMOTE_BUILD_TIMED_OUT = 6
REMOTE_BUILD_UNKNOWN = 7
SYNCING_ENVIRONMENTS = 8
FINISHED_SYNCING = 9


_BUILD = DESCRIPTOR.message_types_by_name['Build']
_BUILDSPEC = DESCRIPTOR.message_types_by_name['BuildSpec']
_MODELSCHEMA = DESCRIPTOR.message_types_by_name['ModelSchema']
_ENTITY = DESCRIPTOR.message_types_by_name['Entity']
_FEATURE = DESCRIPTOR.message_types_by_name['Feature']
_ONTHEFLYFEATURE = DESCRIPTOR.message_types_by_name['OnTheFlyFeature']
_BATCHFEATUREV1 = DESCRIPTOR.message_types_by_name['BatchFeatureV1']
_STREAMINGFEATUREV1 = DESCRIPTOR.message_types_by_name['StreamingFeatureV1']
_BATCHFEATURE = DESCRIPTOR.message_types_by_name['BatchFeature']
_STREAMINGFEATURE = DESCRIPTOR.message_types_by_name['StreamingFeature']
_STREAMINGAGGREGATIONFEATURE = DESCRIPTOR.message_types_by_name['StreamingAggregationFeature']
_EXPLICITFEATURE = DESCRIPTOR.message_types_by_name['ExplicitFeature']
_REQUESTINPUT = DESCRIPTOR.message_types_by_name['RequestInput']
_SOURCEFEATURE = DESCRIPTOR.message_types_by_name['SourceFeature']
_PREDICTION = DESCRIPTOR.message_types_by_name['Prediction']
_INFERENCEOUTPUT = DESCRIPTOR.message_types_by_name['InferenceOutput']
_VALUETYPE = DESCRIPTOR.message_types_by_name['ValueType']
_PARAMETERCATEGORY = DESCRIPTOR.message_types_by_name['ParameterCategory']
_REGISTERBUILDREQUEST = DESCRIPTOR.message_types_by_name['RegisterBuildRequest']
_REGISTERMODELSCHEMAREQUEST = DESCRIPTOR.message_types_by_name['RegisterModelSchemaRequest']
_REGISTEREXPERIMENTTRACKINGVALUESREQUEST = DESCRIPTOR.message_types_by_name['RegisterExperimentTrackingValuesRequest']
_REGISTEREXPERIMENTTRACKINGVALUESRESPONSE = DESCRIPTOR.message_types_by_name['RegisterExperimentTrackingValuesResponse']
_EXPERIMENTTRACKINGVALUES = DESCRIPTOR.message_types_by_name['ExperimentTrackingValues']
_BUILDCONFIGURATION = DESCRIPTOR.message_types_by_name['BuildConfiguration']
_STEP = DESCRIPTOR.message_types_by_name['Step']
_BUILDPROPERTIESPROTO = DESCRIPTOR.message_types_by_name['BuildPropertiesProto']
_BUILDMODELURI = DESCRIPTOR.message_types_by_name['BuildModelUri']
_BUILDENVIRONMENT = DESCRIPTOR.message_types_by_name['BuildEnvironment']
_DOCKERBUILD = DESCRIPTOR.message_types_by_name['DockerBuild']
_DOCKERBUILD_BUILDARGSENTRY = _DOCKERBUILD.nested_types_by_name['BuildArgsEntry']
_LOCALBUILD = DESCRIPTOR.message_types_by_name['LocalBuild']
_PYTHONBUILD = DESCRIPTOR.message_types_by_name['PythonBuild']
_CONDABUILD = DESCRIPTOR.message_types_by_name['CondaBuild']
_POETRYBUILD = DESCRIPTOR.message_types_by_name['PoetryBuild']
_VIRTUALENVIRONMENTBUILD = DESCRIPTOR.message_types_by_name['VirtualEnvironmentBuild']
_REMOTEBUILD = DESCRIPTOR.message_types_by_name['RemoteBuild']
_REMOTEBUILDRESOURCES = DESCRIPTOR.message_types_by_name['RemoteBuildResources']
_METRIC = DESCRIPTOR.message_types_by_name['Metric']
_PARAM = DESCRIPTOR.message_types_by_name['Param']
_REGISTERMODELSCHEMARESPONSE = DESCRIPTOR.message_types_by_name['RegisterModelSchemaResponse']
_REGISTERBUILDRESPONSE = DESCRIPTOR.message_types_by_name['RegisterBuildResponse']
_UPDATEBUILDSTATUSREQUEST = DESCRIPTOR.message_types_by_name['UpdateBuildStatusRequest']
_UPDATEBUILDSTATUSRESPONSE = DESCRIPTOR.message_types_by_name['UpdateBuildStatusResponse']
_UPDATEBUILDBRANCHREQUEST = DESCRIPTOR.message_types_by_name['UpdateBuildBranchRequest']
_UPDATEBUILDBRANCHRESPONSE = DESCRIPTOR.message_types_by_name['UpdateBuildBranchResponse']
_GETBUILDREQUEST = DESCRIPTOR.message_types_by_name['GetBuildRequest']
_GETBUILDRESPONSE = DESCRIPTOR.message_types_by_name['GetBuildResponse']
_LISTBUILDSREQUEST = DESCRIPTOR.message_types_by_name['ListBuildsRequest']
_LISTBUILDSRESPONSE = DESCRIPTOR.message_types_by_name['ListBuildsResponse']
_VALUETYPE_TYPES = _VALUETYPE.enum_types_by_name['Types']
_PARAMETERCATEGORY_CATEGORY = _PARAMETERCATEGORY.enum_types_by_name['Category']
Build = _reflection.GeneratedProtocolMessageType('Build', (_message.Message,), {
  'DESCRIPTOR' : _BUILD,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.Build)
  })
_sym_db.RegisterMessage(Build)

BuildSpec = _reflection.GeneratedProtocolMessageType('BuildSpec', (_message.Message,), {
  'DESCRIPTOR' : _BUILDSPEC,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.BuildSpec)
  })
_sym_db.RegisterMessage(BuildSpec)

ModelSchema = _reflection.GeneratedProtocolMessageType('ModelSchema', (_message.Message,), {
  'DESCRIPTOR' : _MODELSCHEMA,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.ModelSchema)
  })
_sym_db.RegisterMessage(ModelSchema)

Entity = _reflection.GeneratedProtocolMessageType('Entity', (_message.Message,), {
  'DESCRIPTOR' : _ENTITY,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.Entity)
  })
_sym_db.RegisterMessage(Entity)

Feature = _reflection.GeneratedProtocolMessageType('Feature', (_message.Message,), {
  'DESCRIPTOR' : _FEATURE,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.Feature)
  })
_sym_db.RegisterMessage(Feature)

OnTheFlyFeature = _reflection.GeneratedProtocolMessageType('OnTheFlyFeature', (_message.Message,), {
  'DESCRIPTOR' : _ONTHEFLYFEATURE,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.OnTheFlyFeature)
  })
_sym_db.RegisterMessage(OnTheFlyFeature)

BatchFeatureV1 = _reflection.GeneratedProtocolMessageType('BatchFeatureV1', (_message.Message,), {
  'DESCRIPTOR' : _BATCHFEATUREV1,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.BatchFeatureV1)
  })
_sym_db.RegisterMessage(BatchFeatureV1)

StreamingFeatureV1 = _reflection.GeneratedProtocolMessageType('StreamingFeatureV1', (_message.Message,), {
  'DESCRIPTOR' : _STREAMINGFEATUREV1,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.StreamingFeatureV1)
  })
_sym_db.RegisterMessage(StreamingFeatureV1)

BatchFeature = _reflection.GeneratedProtocolMessageType('BatchFeature', (_message.Message,), {
  'DESCRIPTOR' : _BATCHFEATURE,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.BatchFeature)
  })
_sym_db.RegisterMessage(BatchFeature)

StreamingFeature = _reflection.GeneratedProtocolMessageType('StreamingFeature', (_message.Message,), {
  'DESCRIPTOR' : _STREAMINGFEATURE,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.StreamingFeature)
  })
_sym_db.RegisterMessage(StreamingFeature)

StreamingAggregationFeature = _reflection.GeneratedProtocolMessageType('StreamingAggregationFeature', (_message.Message,), {
  'DESCRIPTOR' : _STREAMINGAGGREGATIONFEATURE,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.StreamingAggregationFeature)
  })
_sym_db.RegisterMessage(StreamingAggregationFeature)

ExplicitFeature = _reflection.GeneratedProtocolMessageType('ExplicitFeature', (_message.Message,), {
  'DESCRIPTOR' : _EXPLICITFEATURE,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.ExplicitFeature)
  })
_sym_db.RegisterMessage(ExplicitFeature)

RequestInput = _reflection.GeneratedProtocolMessageType('RequestInput', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTINPUT,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.RequestInput)
  })
_sym_db.RegisterMessage(RequestInput)

SourceFeature = _reflection.GeneratedProtocolMessageType('SourceFeature', (_message.Message,), {
  'DESCRIPTOR' : _SOURCEFEATURE,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.SourceFeature)
  })
_sym_db.RegisterMessage(SourceFeature)

Prediction = _reflection.GeneratedProtocolMessageType('Prediction', (_message.Message,), {
  'DESCRIPTOR' : _PREDICTION,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.Prediction)
  })
_sym_db.RegisterMessage(Prediction)

InferenceOutput = _reflection.GeneratedProtocolMessageType('InferenceOutput', (_message.Message,), {
  'DESCRIPTOR' : _INFERENCEOUTPUT,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.InferenceOutput)
  })
_sym_db.RegisterMessage(InferenceOutput)

ValueType = _reflection.GeneratedProtocolMessageType('ValueType', (_message.Message,), {
  'DESCRIPTOR' : _VALUETYPE,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.ValueType)
  })
_sym_db.RegisterMessage(ValueType)

ParameterCategory = _reflection.GeneratedProtocolMessageType('ParameterCategory', (_message.Message,), {
  'DESCRIPTOR' : _PARAMETERCATEGORY,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.ParameterCategory)
  })
_sym_db.RegisterMessage(ParameterCategory)

RegisterBuildRequest = _reflection.GeneratedProtocolMessageType('RegisterBuildRequest', (_message.Message,), {
  'DESCRIPTOR' : _REGISTERBUILDREQUEST,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.RegisterBuildRequest)
  })
_sym_db.RegisterMessage(RegisterBuildRequest)

RegisterModelSchemaRequest = _reflection.GeneratedProtocolMessageType('RegisterModelSchemaRequest', (_message.Message,), {
  'DESCRIPTOR' : _REGISTERMODELSCHEMAREQUEST,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.RegisterModelSchemaRequest)
  })
_sym_db.RegisterMessage(RegisterModelSchemaRequest)

RegisterExperimentTrackingValuesRequest = _reflection.GeneratedProtocolMessageType('RegisterExperimentTrackingValuesRequest', (_message.Message,), {
  'DESCRIPTOR' : _REGISTEREXPERIMENTTRACKINGVALUESREQUEST,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.RegisterExperimentTrackingValuesRequest)
  })
_sym_db.RegisterMessage(RegisterExperimentTrackingValuesRequest)

RegisterExperimentTrackingValuesResponse = _reflection.GeneratedProtocolMessageType('RegisterExperimentTrackingValuesResponse', (_message.Message,), {
  'DESCRIPTOR' : _REGISTEREXPERIMENTTRACKINGVALUESRESPONSE,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.RegisterExperimentTrackingValuesResponse)
  })
_sym_db.RegisterMessage(RegisterExperimentTrackingValuesResponse)

ExperimentTrackingValues = _reflection.GeneratedProtocolMessageType('ExperimentTrackingValues', (_message.Message,), {
  'DESCRIPTOR' : _EXPERIMENTTRACKINGVALUES,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.ExperimentTrackingValues)
  })
_sym_db.RegisterMessage(ExperimentTrackingValues)

BuildConfiguration = _reflection.GeneratedProtocolMessageType('BuildConfiguration', (_message.Message,), {
  'DESCRIPTOR' : _BUILDCONFIGURATION,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.BuildConfiguration)
  })
_sym_db.RegisterMessage(BuildConfiguration)

Step = _reflection.GeneratedProtocolMessageType('Step', (_message.Message,), {
  'DESCRIPTOR' : _STEP,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.Step)
  })
_sym_db.RegisterMessage(Step)

BuildPropertiesProto = _reflection.GeneratedProtocolMessageType('BuildPropertiesProto', (_message.Message,), {
  'DESCRIPTOR' : _BUILDPROPERTIESPROTO,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.BuildPropertiesProto)
  })
_sym_db.RegisterMessage(BuildPropertiesProto)

BuildModelUri = _reflection.GeneratedProtocolMessageType('BuildModelUri', (_message.Message,), {
  'DESCRIPTOR' : _BUILDMODELURI,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.BuildModelUri)
  })
_sym_db.RegisterMessage(BuildModelUri)

BuildEnvironment = _reflection.GeneratedProtocolMessageType('BuildEnvironment', (_message.Message,), {
  'DESCRIPTOR' : _BUILDENVIRONMENT,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.BuildEnvironment)
  })
_sym_db.RegisterMessage(BuildEnvironment)

DockerBuild = _reflection.GeneratedProtocolMessageType('DockerBuild', (_message.Message,), {

  'BuildArgsEntry' : _reflection.GeneratedProtocolMessageType('BuildArgsEntry', (_message.Message,), {
    'DESCRIPTOR' : _DOCKERBUILD_BUILDARGSENTRY,
    '__module__' : 'qwak.builds.builds_pb2'
    # @@protoc_insertion_point(class_scope:qwak.builds.management.DockerBuild.BuildArgsEntry)
    })
  ,
  'DESCRIPTOR' : _DOCKERBUILD,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.DockerBuild)
  })
_sym_db.RegisterMessage(DockerBuild)
_sym_db.RegisterMessage(DockerBuild.BuildArgsEntry)

LocalBuild = _reflection.GeneratedProtocolMessageType('LocalBuild', (_message.Message,), {
  'DESCRIPTOR' : _LOCALBUILD,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.LocalBuild)
  })
_sym_db.RegisterMessage(LocalBuild)

PythonBuild = _reflection.GeneratedProtocolMessageType('PythonBuild', (_message.Message,), {
  'DESCRIPTOR' : _PYTHONBUILD,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.PythonBuild)
  })
_sym_db.RegisterMessage(PythonBuild)

CondaBuild = _reflection.GeneratedProtocolMessageType('CondaBuild', (_message.Message,), {
  'DESCRIPTOR' : _CONDABUILD,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.CondaBuild)
  })
_sym_db.RegisterMessage(CondaBuild)

PoetryBuild = _reflection.GeneratedProtocolMessageType('PoetryBuild', (_message.Message,), {
  'DESCRIPTOR' : _POETRYBUILD,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.PoetryBuild)
  })
_sym_db.RegisterMessage(PoetryBuild)

VirtualEnvironmentBuild = _reflection.GeneratedProtocolMessageType('VirtualEnvironmentBuild', (_message.Message,), {
  'DESCRIPTOR' : _VIRTUALENVIRONMENTBUILD,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.VirtualEnvironmentBuild)
  })
_sym_db.RegisterMessage(VirtualEnvironmentBuild)

RemoteBuild = _reflection.GeneratedProtocolMessageType('RemoteBuild', (_message.Message,), {
  'DESCRIPTOR' : _REMOTEBUILD,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.RemoteBuild)
  })
_sym_db.RegisterMessage(RemoteBuild)

RemoteBuildResources = _reflection.GeneratedProtocolMessageType('RemoteBuildResources', (_message.Message,), {
  'DESCRIPTOR' : _REMOTEBUILDRESOURCES,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.RemoteBuildResources)
  })
_sym_db.RegisterMessage(RemoteBuildResources)

Metric = _reflection.GeneratedProtocolMessageType('Metric', (_message.Message,), {
  'DESCRIPTOR' : _METRIC,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.Metric)
  })
_sym_db.RegisterMessage(Metric)

Param = _reflection.GeneratedProtocolMessageType('Param', (_message.Message,), {
  'DESCRIPTOR' : _PARAM,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.Param)
  })
_sym_db.RegisterMessage(Param)

RegisterModelSchemaResponse = _reflection.GeneratedProtocolMessageType('RegisterModelSchemaResponse', (_message.Message,), {
  'DESCRIPTOR' : _REGISTERMODELSCHEMARESPONSE,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.RegisterModelSchemaResponse)
  })
_sym_db.RegisterMessage(RegisterModelSchemaResponse)

RegisterBuildResponse = _reflection.GeneratedProtocolMessageType('RegisterBuildResponse', (_message.Message,), {
  'DESCRIPTOR' : _REGISTERBUILDRESPONSE,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.RegisterBuildResponse)
  })
_sym_db.RegisterMessage(RegisterBuildResponse)

UpdateBuildStatusRequest = _reflection.GeneratedProtocolMessageType('UpdateBuildStatusRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEBUILDSTATUSREQUEST,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.UpdateBuildStatusRequest)
  })
_sym_db.RegisterMessage(UpdateBuildStatusRequest)

UpdateBuildStatusResponse = _reflection.GeneratedProtocolMessageType('UpdateBuildStatusResponse', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEBUILDSTATUSRESPONSE,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.UpdateBuildStatusResponse)
  })
_sym_db.RegisterMessage(UpdateBuildStatusResponse)

UpdateBuildBranchRequest = _reflection.GeneratedProtocolMessageType('UpdateBuildBranchRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEBUILDBRANCHREQUEST,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.UpdateBuildBranchRequest)
  })
_sym_db.RegisterMessage(UpdateBuildBranchRequest)

UpdateBuildBranchResponse = _reflection.GeneratedProtocolMessageType('UpdateBuildBranchResponse', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEBUILDBRANCHRESPONSE,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.UpdateBuildBranchResponse)
  })
_sym_db.RegisterMessage(UpdateBuildBranchResponse)

GetBuildRequest = _reflection.GeneratedProtocolMessageType('GetBuildRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETBUILDREQUEST,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.GetBuildRequest)
  })
_sym_db.RegisterMessage(GetBuildRequest)

GetBuildResponse = _reflection.GeneratedProtocolMessageType('GetBuildResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETBUILDRESPONSE,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.GetBuildResponse)
  })
_sym_db.RegisterMessage(GetBuildResponse)

ListBuildsRequest = _reflection.GeneratedProtocolMessageType('ListBuildsRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTBUILDSREQUEST,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.ListBuildsRequest)
  })
_sym_db.RegisterMessage(ListBuildsRequest)

ListBuildsResponse = _reflection.GeneratedProtocolMessageType('ListBuildsResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTBUILDSRESPONSE,
  '__module__' : 'qwak.builds.builds_pb2'
  # @@protoc_insertion_point(class_scope:qwak.builds.management.ListBuildsResponse)
  })
_sym_db.RegisterMessage(ListBuildsResponse)

_BUILDSMANAGEMENTSERVICE = DESCRIPTOR.services_by_name['BuildsManagementService']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n!com.qwak.ai.management.builds.apiP\001'
  _BUILD.fields_by_name['deployment_build_status']._options = None
  _BUILD.fields_by_name['deployment_build_status']._serialized_options = b'\030\001'
  _REGISTERBUILDREQUEST.fields_by_name['model_schema']._options = None
  _REGISTERBUILDREQUEST.fields_by_name['model_schema']._serialized_options = b'\030\001'
  _REGISTERBUILDREQUEST.fields_by_name['qwak_calling_user_id']._options = None
  _REGISTERBUILDREQUEST.fields_by_name['qwak_calling_user_id']._serialized_options = b'\030\001'
  _DOCKERBUILD_BUILDARGSENTRY._options = None
  _DOCKERBUILD_BUILDARGSENTRY._serialized_options = b'8\001'
  _UPDATEBUILDSTATUSREQUEST.fields_by_name['qwak_calling_user_id']._options = None
  _UPDATEBUILDSTATUSREQUEST.fields_by_name['qwak_calling_user_id']._serialized_options = b'\030\001'
  _LISTBUILDSREQUEST.fields_by_name['branch_id']._options = None
  _LISTBUILDSREQUEST.fields_by_name['branch_id']._serialized_options = b'\030\001'
  _BUILDSTATUS._serialized_start=6916
  _BUILDSTATUS._serialized_end=7148
  _BUILD._serialized_start=180
  _BUILD._serialized_end=936
  _BUILDSPEC._serialized_start=939
  _BUILDSPEC._serialized_end=1329
  _MODELSCHEMA._serialized_start=1332
  _MODELSCHEMA._serialized_end=1570
  _ENTITY._serialized_start=1572
  _ENTITY._serialized_end=1643
  _FEATURE._serialized_start=1646
  _FEATURE._serialized_end=2238
  _ONTHEFLYFEATURE._serialized_start=2241
  _ONTHEFLYFEATURE._serialized_end=2384
  _BATCHFEATUREV1._serialized_start=2386
  _BATCHFEATUREV1._serialized_end=2464
  _STREAMINGFEATUREV1._serialized_start=2466
  _STREAMINGFEATUREV1._serialized_end=2548
  _BATCHFEATURE._serialized_start=2550
  _BATCHFEATURE._serialized_end=2626
  _STREAMINGFEATURE._serialized_start=2628
  _STREAMINGFEATURE._serialized_end=2708
  _STREAMINGAGGREGATIONFEATURE._serialized_start=2710
  _STREAMINGAGGREGATIONFEATURE._serialized_end=2801
  _EXPLICITFEATURE._serialized_start=2803
  _EXPLICITFEATURE._serialized_end=2883
  _REQUESTINPUT._serialized_start=2885
  _REQUESTINPUT._serialized_end=2962
  _SOURCEFEATURE._serialized_start=2965
  _SOURCEFEATURE._serialized_end=3120
  _PREDICTION._serialized_start=3122
  _PREDICTION._serialized_end=3197
  _INFERENCEOUTPUT._serialized_start=3199
  _INFERENCEOUTPUT._serialized_end=3279
  _VALUETYPE._serialized_start=3282
  _VALUETYPE._serialized_end=3448
  _VALUETYPE_TYPES._serialized_start=3350
  _VALUETYPE_TYPES._serialized_end=3448
  _PARAMETERCATEGORY._serialized_start=3450
  _PARAMETERCATEGORY._serialized_end=3556
  _PARAMETERCATEGORY_CATEGORY._serialized_start=3471
  _PARAMETERCATEGORY_CATEGORY._serialized_end=3556
  _REGISTERBUILDREQUEST._serialized_start=3559
  _REGISTERBUILDREQUEST._serialized_end=3733
  _REGISTERMODELSCHEMAREQUEST._serialized_start=3735
  _REGISTERMODELSCHEMAREQUEST._serialized_end=3840
  _REGISTEREXPERIMENTTRACKINGVALUESREQUEST._serialized_start=3843
  _REGISTEREXPERIMENTTRACKINGVALUESREQUEST._serialized_end=3988
  _REGISTEREXPERIMENTTRACKINGVALUESRESPONSE._serialized_start=3990
  _REGISTEREXPERIMENTTRACKINGVALUESRESPONSE._serialized_end=4032
  _EXPERIMENTTRACKINGVALUES._serialized_start=4034
  _EXPERIMENTTRACKINGVALUES._serialized_end=4156
  _BUILDCONFIGURATION._serialized_start=4159
  _BUILDCONFIGURATION._serialized_end=4496
  _STEP._serialized_start=4498
  _STEP._serialized_end=4593
  _BUILDPROPERTIESPROTO._serialized_start=4596
  _BUILDPROPERTIESPROTO._serialized_end=4792
  _BUILDMODELURI._serialized_start=4794
  _BUILDMODELURI._serialized_end=4897
  _BUILDENVIRONMENT._serialized_start=4900
  _BUILDENVIRONMENT._serialized_end=5132
  _DOCKERBUILD._serialized_start=5135
  _DOCKERBUILD._serialized_end=5401
  _DOCKERBUILD_BUILDARGSENTRY._serialized_start=5353
  _DOCKERBUILD_BUILDARGSENTRY._serialized_end=5401
  _LOCALBUILD._serialized_start=5403
  _LOCALBUILD._serialized_end=5453
  _PYTHONBUILD._serialized_start=5456
  _PYTHONBUILD._serialized_end=5739
  _CONDABUILD._serialized_start=5741
  _CONDABUILD._serialized_end=5773
  _POETRYBUILD._serialized_start=5775
  _POETRYBUILD._serialized_end=5831
  _VIRTUALENVIRONMENTBUILD._serialized_start=5833
  _VIRTUALENVIRONMENTBUILD._serialized_end=5908
  _REMOTEBUILD._serialized_start=5910
  _REMOTEBUILD._serialized_end=6007
  _REMOTEBUILDRESOURCES._serialized_start=6010
  _REMOTEBUILDRESOURCES._serialized_end=6153
  _METRIC._serialized_start=6155
  _METRIC._serialized_end=6191
  _PARAM._serialized_start=6193
  _PARAM._serialized_end=6228
  _REGISTERMODELSCHEMARESPONSE._serialized_start=6230
  _REGISTERMODELSCHEMARESPONSE._serialized_end=6259
  _REGISTERBUILDRESPONSE._serialized_start=6261
  _REGISTERBUILDRESPONSE._serialized_end=6361
  _UPDATEBUILDSTATUSREQUEST._serialized_start=6364
  _UPDATEBUILDSTATUSREQUEST._serialized_end=6533
  _UPDATEBUILDSTATUSRESPONSE._serialized_start=6535
  _UPDATEBUILDSTATUSRESPONSE._serialized_end=6562
  _UPDATEBUILDBRANCHREQUEST._serialized_start=6564
  _UPDATEBUILDBRANCHREQUEST._serialized_end=6629
  _UPDATEBUILDBRANCHRESPONSE._serialized_start=6631
  _UPDATEBUILDBRANCHRESPONSE._serialized_end=6658
  _GETBUILDREQUEST._serialized_start=6660
  _GETBUILDREQUEST._serialized_end=6695
  _GETBUILDRESPONSE._serialized_start=6697
  _GETBUILDRESPONSE._serialized_end=6761
  _LISTBUILDSREQUEST._serialized_start=6763
  _LISTBUILDSREQUEST._serialized_end=6844
  _LISTBUILDSRESPONSE._serialized_start=6846
  _LISTBUILDSRESPONSE._serialized_end=6913
  _BUILDSMANAGEMENTSERVICE._serialized_start=7151
  _BUILDSMANAGEMENTSERVICE._serialized_end=7900
# @@protoc_insertion_point(module_scope)
