Metadata-Version: 2.4
Name: asyncmaxbot
Version: 1.3.9
Summary: Python library for creating bots in Max API with aiogram-like syntax
Author-email: sdkinfotech <maxbotdevsup@gmail.com>
Maintainer-email: sdkinfotech <maxbotdevsup@gmail.com>
License: MIT
Project-URL: Homepage, https://github.com/sdkinfotech/asyncmaxbot
Project-URL: Documentation, https://sdkinfotech.github.io/asyncmaxbot/
Project-URL: Repository, https://github.com/sdkinfotech/asyncmaxbot
Project-URL: Bug Tracker, https://github.com/sdkinfotech/asyncmaxbot/issues
Project-URL: Examples, https://github.com/sdkinfotech/asyncmaxbot/tree/main/examples
Project-URL: PyPI, https://pypi.org/project/asyncmaxbot/
Keywords: max,api,bot,telegram,aiogram,async,messenger
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Communications :: Chat
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: aiohttp>=3.8.0
Requires-Dist: pydantic>=2.0.0
Requires-Dist: loguru>=0.7.0
Provides-Extra: dev
Requires-Dist: pytest>=7.0.0; extra == "dev"
Requires-Dist: pytest-asyncio>=0.21.0; extra == "dev"
Requires-Dist: black>=23.0.0; extra == "dev"
Requires-Dist: flake8>=6.0.0; extra == "dev"
Requires-Dist: mypy>=1.0.0; extra == "dev"
Dynamic: license-file

[![PyPI - Version](https://img.shields.io/pypi/v/asyncmaxbot.svg)](https://pypi.org/project/asyncmaxbot/)
[![PyPI - License](https://img.shields.io/pypi/l/asyncmaxbot.svg)](https://github.com/sdkinfotech/asyncmaxbot/blob/main/LICENSE)
[![Documentation Status](https://img.shields.io/badge/docs-latest-brightgreen.svg)](https://sdkinfotech.github.io/asyncmaxbot/)

# Добро пожаловать в AsyncMaxBot SDK!

Это официальная документация по **AsyncMaxBot**, асинхронной Python-библиотеке для создания ботов в Max Messenger.

Здесь вы найдете всё необходимое для разработки ботов любой сложности: от простых эхо-ботов до продвинутых систем с комплексной логикой.

## Быстрый старт

Вот минимальный пример бота, который отвечает на команду `/start` и повторяет любое текстовое сообщение. Этот код полностью рабочий.

```python
import asyncio
from maxbot import Bot, Dispatcher, Context
from maxbot.filters import command

# Рекомендуется хранить токен в переменной окружения или в файле
TOKEN = "YOUR_TOKEN_HERE"

async def main():
    # Используем 'async with' для корректного управления сессией
    async with Bot(token=TOKEN) as bot:
        dp = Dispatcher(bot)

        # Обработчик команды /start
        @dp.message_handler(command("start"))
        async def handle_start(ctx: Context):
            # Используем .user.name для получения имени пользователя
            await ctx.reply(f"Привет, {ctx.user.name}!")

        # Обработчик для всех остальных текстовых сообщений
        @dp.message_handler()
        async def handle_echo(ctx: Context):
            if ctx.text:
                await ctx.reply(f"Вы написали: {ctx.text}")

        # Запускаем получение обновлений
        print("Бот запущен...")
        await bot.polling(dispatcher=dp)

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("Бот остановлен.")
```

### Как запустить:
1.  Установите библиотеку: `pip install asyncmaxbot`
2.  Сохраните код в файл, например, `my_bot.py`.
3.  Замените `"YOUR_TOKEN_HERE"` на реальный токен вашего бота.
4.  Запустите его: `python my_bot.py`

## Куда двигаться дальше?

*   **[Руководство по API](https://sdkinfotech.github.io/asyncmaxbot/api/):** Перейдите сюда для подробного изучения всех компонентов, классов и методов SDK.
*   **[Примеры кода](https://sdkinfotech.github.io/asyncmaxbot/examples/):** Изучите новую страницу с "живыми" примерами кода.
*   **[Страница проекта на PyPI](https://pypi.org/project/asyncmaxbot/):** Посетите страницу проекта для получения информации об установке и версиях.
