"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è MagicFilter (F) —Å–∏—Å—Ç–µ–º—ã –≤ asyncmaxbot

–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –≥–∏–±–∫—É—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π —Å –ø–æ–º–æ—â—å—é MagicFilter.
"""

import asyncio
from maxbot import Bot, Dispatcher, F
from maxbot.filters import command, text

TOKEN = "YOUR_TOKEN_HERE"

async def main():
    async with Bot(token=TOKEN) as bot:
        dp = Dispatcher(bot)
        
        # –ü—Ä–∏–º–µ—Ä 1: –ü—Ä–æ—Å—Ç—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
        @dp.message_handler(F.command == "start")
        async def start_handler(ctx):
            await ctx.reply("üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ MagicFilter –ø—Ä–∏–º–µ—Ä.")
        
        @dp.message_handler(F.text == "–ø—Ä–∏–≤–µ—Ç")
        async def hello_handler(ctx):
            await ctx.reply("üòä –ò —Ç–µ–±–µ –ø—Ä–∏–≤–µ—Ç!")
        
        # –ü—Ä–∏–º–µ—Ä 2: –°–ª–æ–∂–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
        @dp.message_handler(F.text.contains("–∑–∞–∫–∞–∑") & (F.user_id != 0))
        async def order_handler(ctx):
            await ctx.reply("üì¶ –í—ã –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç–µ—Å—å –∑–∞–∫–∞–∑–æ–º?")
        
        @dp.message_handler(F.text.startswith("!") | F.text.endswith("!"))
        async def exclamation_handler(ctx):
            await ctx.reply("‚ùó –í–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
        
        # –ü—Ä–∏–º–µ—Ä 3: –§–∏–ª—å—Ç—Ä—ã –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        @dp.message_handler(F.user_id == 123)
        async def admin_handler(ctx):
            await ctx.reply("üîí –ü—Ä–∏–≤–µ—Ç, –∞–¥–º–∏–Ω!")
        
        @dp.message_handler(F.user_id.in_([1, 2, 3, 4, 5]))
        async def special_users_handler(ctx):
            await ctx.reply("‚≠ê –ü—Ä–∏–≤–µ—Ç, –æ—Å–æ–±—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!")
        
        # –ü—Ä–∏–º–µ—Ä 4: –§–∏–ª—å—Ç—Ä—ã –ø–æ —á–∞—Ç—É
        @dp.message_handler(F.chat_id < 0)
        async def group_handler(ctx):
            await ctx.reply("üë• –≠—Ç–æ –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç!")
        
        # –ü—Ä–∏–º–µ—Ä 5: –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
        @dp.message_handler(
            F.text.contains("–ø–æ–º–æ—â—å") & 
            ~F.text.contains("–Ω–µ –Ω—É–∂–Ω–∞") & 
            (F.user_id > 0)
        )
        async def help_handler(ctx):
            await ctx.reply("üÜò –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?")
        
        # –ü—Ä–∏–º–µ—Ä 6: –§–∏–ª—å—Ç—Ä—ã –ø–æ –≤–ª–æ–∂–µ–Ω–∏—è–º
        @dp.message_handler(F.attachment)
        async def attachment_handler(ctx):
            await ctx.reply("üìé –ü–æ–ª—É—á–µ–Ω–æ –≤–ª–æ–∂–µ–Ω–∏–µ!")
        
        # –ü—Ä–∏–º–µ—Ä 7: –°–º–µ—à–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã (MagicFilter + –æ–±—ã—á–Ω—ã–µ)
        @dp.message_handler(
            command("test") & 
            F.user_id.in_([1, 2, 3])
        )
        async def test_handler(ctx):
            await ctx.reply("üß™ –¢–µ—Å—Ç –¥–ª—è –æ—Å–æ–±—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!")
        
        # –ü—Ä–∏–º–µ—Ä 8: –°–ª–æ–∂–Ω–∞—è –ª–æ–≥–∏–∫–∞
        @dp.message_handler(
            (F.text.contains("–≤–∞–∂–Ω–æ") | F.text.contains("—Å—Ä–æ—á–Ω–æ")) &
            F.user_id > 100 &
            ~F.text.contains("—à—É—Ç–∫–∞")
        )
        async def important_handler(ctx):
            await ctx.reply("üö® –í–∞–∂–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ!")
        
        # –ü—Ä–∏–º–µ—Ä 9: –§–∏–ª—å—Ç—Ä—ã –ø–æ –≤—Ä–µ–º–µ–Ω–∏ (–µ—Å–ª–∏ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã)
        @dp.message_handler(F.text.contains("—É—Ç—Ä–æ"))
        async def morning_handler(ctx):
            await ctx.reply("üåÖ –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ!")
        
        # –ü—Ä–∏–º–µ—Ä 10: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –≤ —Ñ–∏–ª—å—Ç—Ä–∞—Ö
        @dp.message_handler(F.text.contains("–æ—à–∏–±–∫–∞"))
        async def error_test_handler(ctx):
            await ctx.reply("üîß –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫...")
            # –ò–º–∏—Ç–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
            raise Exception("–¢–µ—Å—Ç–æ–≤–∞—è –æ—à–∏–±–∫–∞")
        
        print("ü§ñ –ë–æ—Ç —Å MagicFilter –∑–∞–ø—É—â–µ–Ω...")
        print("üìù –ü—Ä–∏–º–µ—Ä—ã –∫–æ–º–∞–Ω–¥:")
        print("  /start - –±–∞–∑–æ–≤—ã–π —Ñ–∏–ª—å—Ç—Ä")
        print("  –ø—Ä–∏–≤–µ—Ç - —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ")
        print("  –∑–∞–∫–∞–∑ - —Å–ª–æ–∂–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ")
        print("  !—Ç–µ—Å—Ç! - –≤–æ—Å–∫–ª–∏—Ü–∞–Ω–∏–µ")
        print("  –ø–æ–º–æ—â—å - –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä")
        print("  –≤–∞–∂–Ω–æ —Å—Ä–æ—á–Ω–æ - —Å–ª–æ–∂–Ω–∞—è –ª–æ–≥–∏–∫–∞")
        
        await bot.polling(dispatcher=dp)

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.") 