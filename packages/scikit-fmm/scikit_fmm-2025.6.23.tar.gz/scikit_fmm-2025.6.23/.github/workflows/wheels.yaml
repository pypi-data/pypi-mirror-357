name: Build and publish wheels

on:
  workflow_dispatch:
    inputs:
      upload:
        description: 'Upload wheels and sdist to PyPI? (0: no, 1: yes)'
        required: true
        default: '0'

permissions:
  contents: write
  actions: read

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build SDist
        run: pipx run build --sdist

      - name: Check metadata
        run: pipx run twine check dist/*

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  build_wheels:
    name: Build ${{ matrix.arch }} wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            arch: auto64
            msvc_arch: x64
          - os: windows-11-arm
            arch: ARM64
            msvc_arch: ARM64
          - os: ubuntu-22.04
            arch: x86_64
          - os: ubuntu-22.04-arm
            arch: aarch64
          - os: macos-13
            arch: x86_64
            macos_deployment_target: "13.0"
          - os: macos-14
            arch: arm64
            macos_deployment_target: "14.0"
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5

      - name: Activate MSVC
        uses: ilammy/msvc-dev-cmd@v1.13.0
        with:
          arch: ${{ matrix.msvc_arch }}
        if: ${{ matrix.msvc_arch }}

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23.3
        env:
          CIBW_SKIP: ${{ runner.os == 'Windows' && runner.arch == 'ARM64' && '*pp3* *cp38* *cp39* *cp310*' || '*pp3* *cp38*' }}
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_ENVIRONMENT_MACOS:
            MACOSX_DEPLOYMENT_TARGET=${{ matrix.macos_deployment_target }}
          CIBW_TEST_REQUIRES: numpy
          CIBW_TEST_COMMAND: |
           python -c "import skfmm, sys; sys.exit(skfmm.test())"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.arch }}
          path: ./wheelhouse/*.whl
          retention-days: 5

  publish:
    name: Publish
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist

      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
          path: dist

      - name: Upload wheels and sdist to PyPI
        if: ${{ github.event.inputs.upload == '1'}}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true
          #repository_url: https://test.pypi.org/legacy/  # To test
