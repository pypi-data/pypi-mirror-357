{"version":3,"file":"static/chunks/react-syntax-highlighter_languages_refractor_xmlDoc.c5ba5bb025e52250.js","mappings":"ACAA,YAAY,EACXA,IAAI,CAAC,gBAAkB,CAAIA,IAAI,CAAC,gBAAkB,EAAK,EAAE,EAAEC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAEnE,KAAK,CACJ,SAASC,CAAM,CAAE,CDExB,SAAGC,CAAA,CAAAC,CAAA,GACH,SAAAA,CAAA,EAOA,SAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,EACAH,CAAA,CAAAI,SAAA,CAAAF,CAAA,GACAF,CAAA,CAAAI,SAAA,CAAAC,YAAA,CAAAH,CAAA,YACS,cAAAC,CAAA,CACT,EAEA,IACAG,CAAA,CAAAN,CAAA,CAAAI,SAAA,CAAAG,MAAA,CAAAD,GAAA,CACAE,CAAA,EACAC,OAAA,YACAC,MAAA,IACAC,KAAA,WACAC,MAAA,EACAN,GAAA,CAAAA,CAAA,CACA,CACA,CASAL,CAAA,UAAAO,CAAA,EACAP,CAAA,UAAAO,CAAA,EACGP,CAAA,SAVH,CACAQ,OAAA,SACAC,MAAA,IACAC,KAAA,WACAC,MAAA,EACAN,GAAA,CAAAA,CAAA,CACA,CACA,CAGG,CACH,CAAAN,CAAA,GAtCA,CAAAa,OAAA,CAAAd,CAAA,CACAA,CAAA,CAAAe,WAAA,UACAf,CAAA,CAAAgB,OAAA,IAoCA","sources":["webpack://_N_E/./node_modules/refractor/lang/xml-doc.js","webpack://_N_E/<anon>"],"sourcesContent":["'use strict'\n\nmodule.exports = xmlDoc\nxmlDoc.displayName = 'xmlDoc'\nxmlDoc.aliases = []\nfunction xmlDoc(Prism) {\n  ;(function (Prism) {\n    /**\n     * If the given language is present, it will insert the given doc comment grammar token into it.\n     *\n     * @param {string} lang\n     * @param {any} docComment\n     */\n    function insertDocComment(lang, docComment) {\n      if (Prism.languages[lang]) {\n        Prism.languages.insertBefore(lang, 'comment', {\n          'doc-comment': docComment\n        })\n      }\n    }\n    var tag = Prism.languages.markup.tag\n    var slashDocComment = {\n      pattern: /\\/\\/\\/.*/,\n      greedy: true,\n      alias: 'comment',\n      inside: {\n        tag: tag\n      }\n    }\n    var tickDocComment = {\n      pattern: /'''.*/,\n      greedy: true,\n      alias: 'comment',\n      inside: {\n        tag: tag\n      }\n    }\n    insertDocComment('csharp', slashDocComment)\n    insertDocComment('fsharp', slashDocComment)\n    insertDocComment('vbnet', tickDocComment)\n  })(Prism)\n}\n","\"use strict\";\n(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[9389],{\n\n/***/ 17766:\n/***/ (function(module) {\n\n\n\nmodule.exports = xmlDoc\nxmlDoc.displayName = 'xmlDoc'\nxmlDoc.aliases = []\nfunction xmlDoc(Prism) {\n  ;(function (Prism) {\n    /**\n     * If the given language is present, it will insert the given doc comment grammar token into it.\n     *\n     * @param {string} lang\n     * @param {any} docComment\n     */\n    function insertDocComment(lang, docComment) {\n      if (Prism.languages[lang]) {\n        Prism.languages.insertBefore(lang, 'comment', {\n          'doc-comment': docComment\n        })\n      }\n    }\n    var tag = Prism.languages.markup.tag\n    var slashDocComment = {\n      pattern: /\\/\\/\\/.*/,\n      greedy: true,\n      alias: 'comment',\n      inside: {\n        tag: tag\n      }\n    }\n    var tickDocComment = {\n      pattern: /'''.*/,\n      greedy: true,\n      alias: 'comment',\n      inside: {\n        tag: tag\n      }\n    }\n    insertDocComment('csharp', slashDocComment)\n    insertDocComment('fsharp', slashDocComment)\n    insertDocComment('vbnet', tickDocComment)\n  })(Prism)\n}\n\n\n/***/ })\n\n}]);"],"names":["self","push","module","xmlDoc","Prism","insertDocComment","lang","docComment","languages","insertBefore","tag","markup","slashDocComment","pattern","greedy","alias","inside","exports","displayName","aliases"],"sourceRoot":""}