{"version":3,"file":"static/chunks/react-syntax-highlighter_languages_refractor_ebnf.2f33ed87c321c32b.js","mappings":"ACAA,YAAY,EACXA,IAAI,CAAC,gBAAkB,CAAIA,IAAI,CAAC,gBAAkB,EAAK,EAAE,EAAEC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAEnE,KAAK,CACJ,SAASC,CAAM,CAAE,CDExB,SAAAC,CAAA,CAAAC,CAAA,EACAA,CAAA,CAAAC,SAAA,CAAAF,IAAA,EACAG,OAAA,oBACAC,MAAA,EACAC,OAAA,2BACKC,MAAA,IACL,CACAC,OAAA,EACAF,OAAA,iBACAC,MAAA,IACKE,KAAA,cACL,CACAC,UAAA,EACAJ,OAAA,kDACAK,UAAA,IACKF,KAAA,oBACL,CACAG,IAAA,mCAA2C,CAC3CC,WAAA,8BACAC,QAAA,YACA,EAvBA,CAAAC,OAAA,CAAAd,CAAA,CACAA,CAAA,CAAAe,WAAA,QACAf,CAAA,CAAAgB,OAAA,IAqBA","sources":["webpack://_N_E/./node_modules/refractor/lang/ebnf.js","webpack://_N_E/<anon>"],"sourcesContent":["'use strict'\n\nmodule.exports = ebnf\nebnf.displayName = 'ebnf'\nebnf.aliases = []\nfunction ebnf(Prism) {\n  Prism.languages.ebnf = {\n    comment: /\\(\\*[\\s\\S]*?\\*\\)/,\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n      greedy: true\n    },\n    special: {\n      pattern: /\\?[^?\\r\\n]*\\?/,\n      greedy: true,\n      alias: 'class-name'\n    },\n    definition: {\n      pattern: /^([\\t ]*)[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*(?=\\s*=)/im,\n      lookbehind: true,\n      alias: ['rule', 'keyword']\n    },\n    rule: /\\b[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*\\b/i,\n    punctuation: /\\([:/]|[:/]\\)|[.,;()[\\]{}]/,\n    operator: /[-=|*/!]/\n  }\n}\n","\"use strict\";\n(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[8614],{\n\n/***/ 36500:\n/***/ (function(module) {\n\n\n\nmodule.exports = ebnf\nebnf.displayName = 'ebnf'\nebnf.aliases = []\nfunction ebnf(Prism) {\n  Prism.languages.ebnf = {\n    comment: /\\(\\*[\\s\\S]*?\\*\\)/,\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n      greedy: true\n    },\n    special: {\n      pattern: /\\?[^?\\r\\n]*\\?/,\n      greedy: true,\n      alias: 'class-name'\n    },\n    definition: {\n      pattern: /^([\\t ]*)[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*(?=\\s*=)/im,\n      lookbehind: true,\n      alias: ['rule', 'keyword']\n    },\n    rule: /\\b[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*\\b/i,\n    punctuation: /\\([:/]|[:/]\\)|[.,;()[\\]{}]/,\n    operator: /[-=|*/!]/\n  }\n}\n\n\n/***/ })\n\n}]);"],"names":["self","push","module","ebnf","Prism","languages","comment","string","pattern","greedy","special","alias","definition","lookbehind","rule","punctuation","operator","exports","displayName","aliases"],"sourceRoot":""}