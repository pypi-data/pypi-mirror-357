{"version":3,"file":"static/chunks/react-syntax-highlighter_languages_refractor_velocity.64b9b9fbd54199d4.js","mappings":"ACAA,YAAY,EACXA,IAAI,CAAC,gBAAkB,CAAIA,IAAI,CAAC,gBAAkB,EAAK,EAAE,EAAEC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAEnE,KAAK,CACJ,SAASC,CAAM,CAAE,CDExB,SAAGC,CAAA,CAAAC,CAAA,MACHA,CAAA,CAEAD,CAAA,EAFAC,CAAA,CAsEAA,CAAA,EArEAC,SAAA,CAAAF,QAAA,CAAAC,CAAA,CAAAC,SAAA,CAAAC,MAAA,cAkBAH,CAjBAA,CAAA,EACAI,QAAA,EACAC,OAAA,4GACA,CACAC,UAAA,CAAmB,GACZC,MAAA,IACP,CACAC,MAAA,EACAH,OAAA,mBACOI,MAAA,IACP,CACAC,MAAA,WACAC,OAAA,sBACAC,QAAA,iEACyB,CACzBC,WAAA,gBACA,EACAT,QAAA,CAAAG,MAAA,EACAC,MAAA,CAAAR,CAAA,QACAc,QAAA,EACAT,OAAA,6BACOC,UAAA,IACP,CACAI,MAAA,CAAAV,CAAA,QACAW,OAAA,CAAAX,CAAA,SACAa,WAAA,CAAAb,CAAA,aACA,CACAC,CAAA,CAAAC,SAAA,CAAAa,YAAA,uBACAC,QAAA,EACAX,OAAA,+BACAC,UAAA,IACAG,MAAA,IACAF,MAAA,EACAM,WAAA,iBACO,CACP,CACA,oBACA,CACAR,OAAA,2BACAC,UAAA,IACAG,MAAA,IACSQ,KAAA,WACT,CACA,CACAZ,OAAA,iBACAC,UAAA,IACAG,MAAA,IACAQ,KAAA,WACA,CACA,CACAC,SAAA,EACAb,OAAA,yFACA,CACAC,UAAA,IACAC,MAAA,EACAY,OAAA,EACAd,OAAA,8CACAE,MAAA,EACAM,WAAA,QACW,CACX,CACAO,IAAA,CAAApB,CAAA,CACO,CACP,CACKI,QAAA,CAAAJ,CAAA,UACL,EACAC,CAAA,CAAAC,SAAA,CAAAF,QAAA,KAAAO,MAAA,eAAAA,MAAA,CAAAa,IAAA,CACGnB,CAAA,CAAAC,SAAA,CAAAF,QAAA,CACH,CA1EA,CAAAqB,OAAA,CAAArB,CAAA,CACAA,CAAA,CAAAsB,WAAA,YACAtB,CAAA,CAAAuB,OAAA,IAwEA","sources":["webpack://_N_E/./node_modules/refractor/lang/velocity.js","webpack://_N_E/<anon>"],"sourcesContent":["'use strict'\n\nmodule.exports = velocity\nvelocity.displayName = 'velocity'\nvelocity.aliases = []\nfunction velocity(Prism) {\n  ;(function (Prism) {\n    Prism.languages.velocity = Prism.languages.extend('markup', {})\n    var velocity = {\n      variable: {\n        pattern:\n          /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+\\])*|\\{[^}]+\\})/i,\n        lookbehind: true,\n        inside: {} // See below\n      },\n      string: {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      number: /\\b\\d+\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      operator:\n        /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n      punctuation: /[(){}[\\]:,.]/\n    }\n    velocity.variable.inside = {\n      string: velocity['string'],\n      function: {\n        pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n        lookbehind: true\n      },\n      number: velocity['number'],\n      boolean: velocity['boolean'],\n      punctuation: velocity['punctuation']\n    }\n    Prism.languages.insertBefore('velocity', 'comment', {\n      unparsed: {\n        pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?\\]\\]#/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          punctuation: /^#\\[\\[|\\]\\]#$/\n        }\n      },\n      'velocity-comment': [\n        {\n          pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        },\n        {\n          pattern: /(^|[^\\\\])##.*/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        }\n      ],\n      directive: {\n        pattern:\n          /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n        lookbehind: true,\n        inside: {\n          keyword: {\n            pattern: /^#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})|\\bin\\b/,\n            inside: {\n              punctuation: /[{}]/\n            }\n          },\n          rest: velocity\n        }\n      },\n      variable: velocity['variable']\n    })\n    Prism.languages.velocity['tag'].inside['attr-value'].inside.rest =\n      Prism.languages.velocity\n  })(Prism)\n}\n","\"use strict\";\n(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[2980],{\n\n/***/ 46891:\n/***/ (function(module) {\n\n\n\nmodule.exports = velocity\nvelocity.displayName = 'velocity'\nvelocity.aliases = []\nfunction velocity(Prism) {\n  ;(function (Prism) {\n    Prism.languages.velocity = Prism.languages.extend('markup', {})\n    var velocity = {\n      variable: {\n        pattern:\n          /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+\\])*|\\{[^}]+\\})/i,\n        lookbehind: true,\n        inside: {} // See below\n      },\n      string: {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      number: /\\b\\d+\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      operator:\n        /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n      punctuation: /[(){}[\\]:,.]/\n    }\n    velocity.variable.inside = {\n      string: velocity['string'],\n      function: {\n        pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n        lookbehind: true\n      },\n      number: velocity['number'],\n      boolean: velocity['boolean'],\n      punctuation: velocity['punctuation']\n    }\n    Prism.languages.insertBefore('velocity', 'comment', {\n      unparsed: {\n        pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?\\]\\]#/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          punctuation: /^#\\[\\[|\\]\\]#$/\n        }\n      },\n      'velocity-comment': [\n        {\n          pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        },\n        {\n          pattern: /(^|[^\\\\])##.*/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        }\n      ],\n      directive: {\n        pattern:\n          /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n        lookbehind: true,\n        inside: {\n          keyword: {\n            pattern: /^#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})|\\bin\\b/,\n            inside: {\n              punctuation: /[{}]/\n            }\n          },\n          rest: velocity\n        }\n      },\n      variable: velocity['variable']\n    })\n    Prism.languages.velocity['tag'].inside['attr-value'].inside.rest =\n      Prism.languages.velocity\n  })(Prism)\n}\n\n\n/***/ })\n\n}]);"],"names":["self","push","module","velocity","Prism","languages","extend","variable","pattern","lookbehind","inside","string","greedy","number","boolean","operator","punctuation","function","insertBefore","unparsed","alias","directive","keyword","rest","exports","displayName","aliases"],"sourceRoot":""}