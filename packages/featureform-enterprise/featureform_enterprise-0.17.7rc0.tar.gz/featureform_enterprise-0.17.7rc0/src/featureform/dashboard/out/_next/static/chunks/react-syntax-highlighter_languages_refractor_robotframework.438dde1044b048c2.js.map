{"version":3,"file":"static/chunks/react-syntax-highlighter_languages_refractor_robotframework.438dde1044b048c2.js","mappings":"ACAA,YAAY,EACXA,IAAI,CAAC,gBAAkB,CAAIA,IAAI,CAAC,gBAAkB,EAAK,EAAE,EAAEC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAEnE,IAAI,CACH,SAASC,CAAM,CAAE,CDExB,SAAGC,CAAA,CAAAC,CAAA,GACH,SAAAA,CAAA,EACA,IAAAC,CAAA,EACAC,OAAA,yBACAC,UAAA,IACAC,MAAA,IACA,CACAC,CAAA,EACAH,OAAA,kEACAC,UAAA,IACAG,MAAA,EACAC,WAAA,iBACA,CACA,UACAC,CAAA,CAAAC,CAAA,CAAAH,CAAA,EACA,IAAAI,CAAA,QAKA,IAAAC,CAAA,IAJAD,CAAA,iBAAkC,GAClCR,OAAA,oBACQU,KAAA,WACR,CACAN,CAAA,CACAI,CAAA,CAAAC,CAAA,EAAAL,CAAA,CAAAK,CAAA,SAEAD,CAAA,KAA8B,CAC9BR,OAAA,uCACAC,UAAA,IACAG,MAAA,EACAC,WAAA,SACA,CACA,CACAG,CAAA,UAAAL,CAAA,CACAK,CAAA,SAAAT,CAAA,CACA,CACAC,OAAA,CAAiBW,MAAE,CACnB,wDAAAC,MAAA,CAAAC,OAAA,WAEA,WACA,OAAAN,CAAA,CACA,CACA,CACA,KACA,CACAG,KAAA,WACAN,MAAA,CAAAI,CAAA,CACA,CACA,IACAM,CAAA,EACAd,OAAA,gFACA,CACAC,UAAA,IACAS,KAAA,UACA,CACAK,CAAA,EACAf,OAAA,sCACAC,UAAA,IACAS,KAAA,YACAN,MAAA,EACAD,QAAA,CAAAA,CAAA,CACA,CACA,CACAa,CAAA,EACAhB,OAAA,8DACAC,UAAA,IACAG,MAAA,EACAD,QAAA,CAAAA,CAAA,CACA,CACA,CACAL,CAAA,CAAAmB,SAAA,iBACAC,QAAA,CAAAZ,CAAA,aACAa,aAAA,EACAnB,OAAA,oFACA,CACAC,UAAA,IACSS,KAAA,UACT,CACAU,QAAA,EACApB,OAAA,4CACAC,UAAA,IACO,CACP,EACAoB,SAAA,CAAAf,CAAA,cACA,aAAAA,CAAA,eACA,YAAAS,CAAA,CACAI,aAAA,CAAAL,CAAA,CACOM,QAAA,CAAAJ,CAAA,CACP,EACAM,QAAA,CAAAhB,CAAA,aACA,eAAAS,CAAA,CACAI,aAAA,CAAAL,CAAA,CACOM,QAAA,CAAAJ,CAAA,CACP,EACAO,KAAA,CAAAjB,CAAA,UACA,YAAAS,CAAA,CACAI,aAAA,CAAAL,CAAA,CACOM,QAAA,CAAAJ,CAAA,CACP,EACAjB,OAAA,CAAAA,CAAA,CACA,CACGD,CAAA,CAAAmB,SAAA,CAAAO,KAAA,CAAA1B,CAAA,CAAAmB,SAAA,gBACH,CAAAnB,CAAA,GAtGA,CAAA2B,OAAA,CAAA5B,CAAA,CACAA,CAAA,CAAA6B,WAAA,kBACA7B,CAAA,CAAA8B,OAAA,IAoGA","sources":["webpack://_N_E/./node_modules/refractor/lang/robotframework.js","webpack://_N_E/<anon>"],"sourcesContent":["'use strict'\n\nmodule.exports = robotframework\nrobotframework.displayName = 'robotframework'\nrobotframework.aliases = []\nfunction robotframework(Prism) {\n  ;(function (Prism) {\n    var comment = {\n      pattern: /(^[ \\t]*| {2}|\\t)#.*/m,\n      lookbehind: true,\n      greedy: true\n    }\n    var variable = {\n      pattern: /((?:^|[^\\\\])(?:\\\\{2})*)[$@&%]\\{(?:[^{}\\r\\n]|\\{[^{}\\r\\n]*\\})*\\}/,\n      lookbehind: true,\n      inside: {\n        punctuation: /^[$@&%]\\{|\\}$/\n      }\n    }\n    function createSection(name, inside) {\n      var extendecInside = {}\n      extendecInside['section-header'] = {\n        pattern: /^ ?\\*{3}.+?\\*{3}/,\n        alias: 'keyword'\n      } // copy inside tokens\n      for (var token in inside) {\n        extendecInside[token] = inside[token]\n      }\n      extendecInside['tag'] = {\n        pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)\\[[-\\w]+\\]/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\[|\\]/\n        }\n      }\n      extendecInside['variable'] = variable\n      extendecInside['comment'] = comment\n      return {\n        pattern: RegExp(\n          /^ ?\\*{3}[ \\t]*<name>[ \\t]*\\*{3}(?:.|[\\r\\n](?!\\*{3}))*/.source.replace(\n            /<name>/g,\n            function () {\n              return name\n            }\n          ),\n          'im'\n        ),\n        alias: 'section',\n        inside: extendecInside\n      }\n    }\n    var docTag = {\n      pattern:\n        /(\\[Documentation\\](?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n      lookbehind: true,\n      alias: 'string'\n    }\n    var testNameLike = {\n      pattern: /([\\r\\n] ?)(?!#)(?:\\S(?:[ \\t]\\S)*)+/,\n      lookbehind: true,\n      alias: 'function',\n      inside: {\n        variable: variable\n      }\n    }\n    var testPropertyLike = {\n      pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)(?!\\[|\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n      lookbehind: true,\n      inside: {\n        variable: variable\n      }\n    }\n    Prism.languages['robotframework'] = {\n      settings: createSection('Settings', {\n        documentation: {\n          pattern:\n            /([\\r\\n] ?Documentation(?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n          lookbehind: true,\n          alias: 'string'\n        },\n        property: {\n          pattern: /([\\r\\n] ?)(?!\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n          lookbehind: true\n        }\n      }),\n      variables: createSection('Variables'),\n      'test-cases': createSection('Test Cases', {\n        'test-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      keywords: createSection('Keywords', {\n        'keyword-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      tasks: createSection('Tasks', {\n        'task-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      comment: comment\n    }\n    Prism.languages.robot = Prism.languages['robotframework']\n  })(Prism)\n}\n","\"use strict\";\n(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[5755],{\n\n/***/ 5261:\n/***/ (function(module) {\n\n\n\nmodule.exports = robotframework\nrobotframework.displayName = 'robotframework'\nrobotframework.aliases = []\nfunction robotframework(Prism) {\n  ;(function (Prism) {\n    var comment = {\n      pattern: /(^[ \\t]*| {2}|\\t)#.*/m,\n      lookbehind: true,\n      greedy: true\n    }\n    var variable = {\n      pattern: /((?:^|[^\\\\])(?:\\\\{2})*)[$@&%]\\{(?:[^{}\\r\\n]|\\{[^{}\\r\\n]*\\})*\\}/,\n      lookbehind: true,\n      inside: {\n        punctuation: /^[$@&%]\\{|\\}$/\n      }\n    }\n    function createSection(name, inside) {\n      var extendecInside = {}\n      extendecInside['section-header'] = {\n        pattern: /^ ?\\*{3}.+?\\*{3}/,\n        alias: 'keyword'\n      } // copy inside tokens\n      for (var token in inside) {\n        extendecInside[token] = inside[token]\n      }\n      extendecInside['tag'] = {\n        pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)\\[[-\\w]+\\]/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\[|\\]/\n        }\n      }\n      extendecInside['variable'] = variable\n      extendecInside['comment'] = comment\n      return {\n        pattern: RegExp(\n          /^ ?\\*{3}[ \\t]*<name>[ \\t]*\\*{3}(?:.|[\\r\\n](?!\\*{3}))*/.source.replace(\n            /<name>/g,\n            function () {\n              return name\n            }\n          ),\n          'im'\n        ),\n        alias: 'section',\n        inside: extendecInside\n      }\n    }\n    var docTag = {\n      pattern:\n        /(\\[Documentation\\](?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n      lookbehind: true,\n      alias: 'string'\n    }\n    var testNameLike = {\n      pattern: /([\\r\\n] ?)(?!#)(?:\\S(?:[ \\t]\\S)*)+/,\n      lookbehind: true,\n      alias: 'function',\n      inside: {\n        variable: variable\n      }\n    }\n    var testPropertyLike = {\n      pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)(?!\\[|\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n      lookbehind: true,\n      inside: {\n        variable: variable\n      }\n    }\n    Prism.languages['robotframework'] = {\n      settings: createSection('Settings', {\n        documentation: {\n          pattern:\n            /([\\r\\n] ?Documentation(?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n          lookbehind: true,\n          alias: 'string'\n        },\n        property: {\n          pattern: /([\\r\\n] ?)(?!\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n          lookbehind: true\n        }\n      }),\n      variables: createSection('Variables'),\n      'test-cases': createSection('Test Cases', {\n        'test-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      keywords: createSection('Keywords', {\n        'keyword-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      tasks: createSection('Tasks', {\n        'task-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      comment: comment\n    }\n    Prism.languages.robot = Prism.languages['robotframework']\n  })(Prism)\n}\n\n\n/***/ })\n\n}]);"],"names":["self","push","module","robotframework","Prism","comment","pattern","lookbehind","greedy","variable","inside","punctuation","createSection","name","extendecInside","token","alias","RegExp","source","replace","docTag","testNameLike","testPropertyLike","languages","settings","documentation","property","variables","keywords","tasks","robot","exports","displayName","aliases"],"sourceRoot":""}