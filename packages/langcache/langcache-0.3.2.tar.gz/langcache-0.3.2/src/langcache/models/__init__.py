"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from typing import TYPE_CHECKING
from importlib import import_module

if TYPE_CHECKING:
    from .apierror import APIError
    from .apisuccessresponse import APISuccessResponse, APISuccessResponseTypedDict
    from .authenticationerrorresponsecontent import (
        AuthenticationErrorResponseContent,
        AuthenticationErrorResponseContentData,
    )
    from .authenticationerroruri import AuthenticationErrorURI
    from .badrequesterrorresponsecontent import (
        BadRequestErrorResponseContent,
        BadRequestErrorResponseContentData,
    )
    from .badrequesterroruri import BadRequestErrorURI
    from .cacheentry import CacheEntry, CacheEntryTypedDict
    from .cacheop import CacheRequest, CacheRequestTypedDict
    from .cachesearchrequest import CacheSearchRequest, CacheSearchRequestTypedDict
    from .deleteentriesop import (
        DeleteEntriesRequestRequest,
        DeleteEntriesRequestRequestTypedDict,
    )
    from .deleteentriesrequest import (
        DeleteEntriesRequest,
        DeleteEntriesRequestTypedDict,
    )
    from .deleteentriesresponse import (
        DeleteEntriesResponse,
        DeleteEntriesResponseTypedDict,
    )
    from .deleteentryop import DeleteEntryRequest, DeleteEntryRequestTypedDict
    from .forbiddenerrorresponsecontent import (
        ForbiddenErrorResponseContent,
        ForbiddenErrorResponseContentData,
    )
    from .forbiddenerroruri import ForbiddenErrorURI
    from .healthcheck import HealthCheck, HealthCheckTypedDict
    from .healthcheckreport import HealthCheckReport, HealthCheckReportTypedDict
    from .healthop import HealthRequest, HealthRequestTypedDict
    from .internalservererrorresponsecontent import (
        InternalServerErrorResponseContent,
        InternalServerErrorResponseContentData,
    )
    from .internalservererroruri import InternalServerErrorURI
    from .notfounderrorresponsecontent import (
        NotFoundErrorResponseContent,
        NotFoundErrorResponseContentData,
    )
    from .notfounderroruri import NotFoundErrorURI
    from .savecacheentryrequest import (
        SaveCacheEntryRequest,
        SaveCacheEntryRequestTypedDict,
    )
    from .savecacheentryresponse import (
        SaveCacheEntryResponse,
        SaveCacheEntryResponseTypedDict,
    )
    from .searchop import SearchRequest, SearchRequestTypedDict
    from .security import Security, SecurityTypedDict
    from .serviceunavailableerrorresponsecontent import (
        ServiceUnavailableErrorResponseContent,
        ServiceUnavailableErrorResponseContentData,
    )
    from .serviceunavailableerroruri import ServiceUnavailableErrorURI

__all__ = [
    "APIError",
    "APISuccessResponse",
    "APISuccessResponseTypedDict",
    "AuthenticationErrorResponseContent",
    "AuthenticationErrorResponseContentData",
    "AuthenticationErrorURI",
    "BadRequestErrorResponseContent",
    "BadRequestErrorResponseContentData",
    "BadRequestErrorURI",
    "CacheEntry",
    "CacheEntryTypedDict",
    "CacheRequest",
    "CacheRequestTypedDict",
    "CacheSearchRequest",
    "CacheSearchRequestTypedDict",
    "DeleteEntriesRequest",
    "DeleteEntriesRequestRequest",
    "DeleteEntriesRequestRequestTypedDict",
    "DeleteEntriesRequestTypedDict",
    "DeleteEntriesResponse",
    "DeleteEntriesResponseTypedDict",
    "DeleteEntryRequest",
    "DeleteEntryRequestTypedDict",
    "ForbiddenErrorResponseContent",
    "ForbiddenErrorResponseContentData",
    "ForbiddenErrorURI",
    "HealthCheck",
    "HealthCheckReport",
    "HealthCheckReportTypedDict",
    "HealthCheckTypedDict",
    "HealthRequest",
    "HealthRequestTypedDict",
    "InternalServerErrorResponseContent",
    "InternalServerErrorResponseContentData",
    "InternalServerErrorURI",
    "NotFoundErrorResponseContent",
    "NotFoundErrorResponseContentData",
    "NotFoundErrorURI",
    "SaveCacheEntryRequest",
    "SaveCacheEntryRequestTypedDict",
    "SaveCacheEntryResponse",
    "SaveCacheEntryResponseTypedDict",
    "SearchRequest",
    "SearchRequestTypedDict",
    "Security",
    "SecurityTypedDict",
    "ServiceUnavailableErrorResponseContent",
    "ServiceUnavailableErrorResponseContentData",
    "ServiceUnavailableErrorURI",
]

_dynamic_imports: dict[str, str] = {
    "APIError": ".apierror",
    "APISuccessResponse": ".apisuccessresponse",
    "APISuccessResponseTypedDict": ".apisuccessresponse",
    "AuthenticationErrorResponseContent": ".authenticationerrorresponsecontent",
    "AuthenticationErrorResponseContentData": ".authenticationerrorresponsecontent",
    "AuthenticationErrorURI": ".authenticationerroruri",
    "BadRequestErrorResponseContent": ".badrequesterrorresponsecontent",
    "BadRequestErrorResponseContentData": ".badrequesterrorresponsecontent",
    "BadRequestErrorURI": ".badrequesterroruri",
    "CacheEntry": ".cacheentry",
    "CacheEntryTypedDict": ".cacheentry",
    "CacheRequest": ".cacheop",
    "CacheRequestTypedDict": ".cacheop",
    "CacheSearchRequest": ".cachesearchrequest",
    "CacheSearchRequestTypedDict": ".cachesearchrequest",
    "DeleteEntriesRequestRequest": ".deleteentriesop",
    "DeleteEntriesRequestRequestTypedDict": ".deleteentriesop",
    "DeleteEntriesRequest": ".deleteentriesrequest",
    "DeleteEntriesRequestTypedDict": ".deleteentriesrequest",
    "DeleteEntriesResponse": ".deleteentriesresponse",
    "DeleteEntriesResponseTypedDict": ".deleteentriesresponse",
    "DeleteEntryRequest": ".deleteentryop",
    "DeleteEntryRequestTypedDict": ".deleteentryop",
    "ForbiddenErrorResponseContent": ".forbiddenerrorresponsecontent",
    "ForbiddenErrorResponseContentData": ".forbiddenerrorresponsecontent",
    "ForbiddenErrorURI": ".forbiddenerroruri",
    "HealthCheck": ".healthcheck",
    "HealthCheckTypedDict": ".healthcheck",
    "HealthCheckReport": ".healthcheckreport",
    "HealthCheckReportTypedDict": ".healthcheckreport",
    "HealthRequest": ".healthop",
    "HealthRequestTypedDict": ".healthop",
    "InternalServerErrorResponseContent": ".internalservererrorresponsecontent",
    "InternalServerErrorResponseContentData": ".internalservererrorresponsecontent",
    "InternalServerErrorURI": ".internalservererroruri",
    "NotFoundErrorResponseContent": ".notfounderrorresponsecontent",
    "NotFoundErrorResponseContentData": ".notfounderrorresponsecontent",
    "NotFoundErrorURI": ".notfounderroruri",
    "SaveCacheEntryRequest": ".savecacheentryrequest",
    "SaveCacheEntryRequestTypedDict": ".savecacheentryrequest",
    "SaveCacheEntryResponse": ".savecacheentryresponse",
    "SaveCacheEntryResponseTypedDict": ".savecacheentryresponse",
    "SearchRequest": ".searchop",
    "SearchRequestTypedDict": ".searchop",
    "Security": ".security",
    "SecurityTypedDict": ".security",
    "ServiceUnavailableErrorResponseContent": ".serviceunavailableerrorresponsecontent",
    "ServiceUnavailableErrorResponseContentData": ".serviceunavailableerrorresponsecontent",
    "ServiceUnavailableErrorURI": ".serviceunavailableerroruri",
}


def __getattr__(attr_name: str) -> object:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(
            f"No {attr_name} found in _dynamic_imports for module name -> {__name__} "
        )

    try:
        module = import_module(module_name, __package__)
        result = getattr(module, attr_name)
        return result
    except ImportError as e:
        raise ImportError(
            f"Failed to import {attr_name} from {module_name}: {e}"
        ) from e
    except AttributeError as e:
        raise AttributeError(
            f"Failed to get {attr_name} from {module_name}: {e}"
        ) from e


def __dir__():
    lazy_attrs = list(_dynamic_imports.keys())
    return sorted(lazy_attrs)
