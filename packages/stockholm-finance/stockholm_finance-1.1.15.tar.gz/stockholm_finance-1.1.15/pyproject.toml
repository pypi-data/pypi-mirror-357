[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "stockholm-finance"
dynamic = ["version"]
description = "Advanced financial sentiment analysis tool with policy impact assessment"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Andrew", email = "contact@andrewfarney.net"}
]
maintainers = [
    {name = "Andrew", email = "contact@andrewfarney.net"}
]
keywords = [
    "finance",
    "sentiment-analysis", 
    "nlp",
    "market-analysis",
    "policy-analysis",
    "trading",
    "investment"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Developers",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
requires-python = ">=3.8"
dependencies = [
    "textblob>=0.17.1",
    "yfinance>=0.2.18",
    "requests>=2.31.0",
    "numpy>=1.24.0",
    "feedparser>=6.0.10",
    "textual>=0.41.0",
    "rich>=13.5.0",
    "textual_plotext>=0.2.0",
    "python-dateutil>=2.8.2",
    "pytz>=2023.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "bandit>=1.7.0",
    "safety>=2.3.0",
]
performance = [
    "pytest-benchmark>=4.0.0",
    "memory-profiler>=0.60.0",
    "psutil>=5.9.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocs-git-revision-date-localized-plugin>=1.2.0",
    "mkdocs-git-committers-plugin-2>=1.2.0",
    "mkdocs-minify-plugin>=0.7.0",
    "mkdocs-gen-files>=0.5.0",
    "mkdocs-literate-nav>=0.6.0",
    "mkdocs-section-index>=0.3.0",
    "pymdown-extensions>=10.0.0",
]

[project.urls]
Homepage = "https://github.com/aykaym/stockholm"
Documentation = "https://github.com/aykaym/stockholm/blob/main/README.md"
Repository = "https://github.com/aykaym/stockholm"
"Bug Tracker" = "https://github.com/aykaym/stockholm/issues"
Changelog = "https://github.com/aykaym/stockholm/blob/main/CHANGELOG.md"

[project.scripts]
stockholm-finance = "src.core.financial_analyzer:main"

[tool.setuptools.dynamic]
version = {attr = "src.__version__"}

[tool.setuptools.packages.find]
include = ["src*"]
exclude = ["tests*", "tools*", "scripts*", "docs*"]

[tool.setuptools.package-data]
src = ["config/*.py"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

# mypy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "textblob.*",
    "yfinance.*",
    "feedparser.*",
    "textual.*",
    "textual_plotext.*",
    "rich.*",
]
ignore_missing_imports = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/__init__.py",
    "*/ui/*",  # UI code is complex to test
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

# Bandit security configuration
[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection for tests
