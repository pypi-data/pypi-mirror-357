name: Publish Python 🐍 distribution 📦 to PyPI

on:
  push:
    branches:
      - main  # Adjust this if your default branch has a different name

jobs:
  check-version:
    name: Check version and create tag if needed
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      should_tag: ${{ steps.check_tag.outputs.should_tag }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Extract version from __init__.py
        id: get_version
        run: |
          VERSION=$(python -c "import re; content=open('src/PGAA/__init__.py').read(); print(re.search(r\"__version__\\s*=\\s*['\\\"]([^'\\\"]+)['\\\"]\", content).group(1))")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Check if tag exists
        id: check_tag
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          if git rev-parse "v$VERSION" >/dev/null 2>&1; then
            echo "Tag v$VERSION already exists"
            echo "should_tag=false" >> $GITHUB_OUTPUT
          else
            echo "Tag v$VERSION doesn't exist, will create"
            echo "should_tag=true" >> $GITHUB_OUTPUT
          fi
          
  build:
    name: Build distribution 📦
    needs: [check-version]
    if: always()  # Always run build job
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - name: Install pypa/build
      run:
        python3 -m pip install build --user
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/PGAA
    permissions:
      contents: read
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install Flit
        run: python3 -m pip install flit --user
      - name: Publish distribution 📦 to PyPI using Flit
        env:
          FLIT_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: python3 -m flit publish --dist-dir dist
