### CONFIGURATION TOOLS ###
### METADATA:
###   - https://www.b3.com.br/pt_br/market-data-e-indices/servicos-de-dados/market-data/historico/boletins-diarios/pesquisa-por-pregao/pesquisa-por-pregao/ ###
###   - FILES LAYOUT: https://www.b3.com.br/pt_br/market-data-e-indices/servicos-de-dados/market-data/historico/boletins-diarios/pesquisa-por-pregao/layout-dos-arquivos/ ####
###   - FILES DECRIPTION: https://www.b3.com.br/pt_br/market-data-e-indices/servicos-de-dados/market-data/historico/boletins-diarios/pesquisa-por-pregao/descricao-dos-arquivos/ ####

credentials:
  host: https://www.b3.com.br/
  headers:
  payload:
  token:
    host:
    get:
      req_method: GET
      bl_verify: False
      timeout: (12.0, 12.0)
    keys:
      token: token

metadata:
  standardized_instruments_groups:
    schema: raw
    table_name: br_b3_metadata_standardized_instruments_groups
    data:
      - ORIGEM_INSTRUMENTO: 4
        DECODE_INSTRUMENTO: ISIN
      - ORIGEM_INSTRUMENTO: 8
        DECODE_INSTRUMENTO: SYMBOL
      - ORIGEM_INSTRUMENTO: H
        DECODE_INSTRUMENTO: CLEARINGHOUSE
    dtypes:
      ORIGEM_INSTRUMENTO: str
      DECODE_INSTRUMENTO: str
  primitive_risk_factors:
    schema: raw
    table_name: br_b3_metadata_primitive_risk_factors
    data:
      - NOME_CAMPO: FORMATO DE VARIAÇÃO
        ID: 1
        DECODE: PERCENTUAL
      - NOME_CAMPO: FORMATO DE VARIAÇÃO
        ID: 2
        DECODE: BASIS POINTS
      - NOME_CAMPO: ORIGEM DO INSTRUMENTO INDICADO
        ID: 4
        DECODE: ISIN
      - NOME_CAMPO: ORIGEM DO INSTRUMENTO INDICADO
        ID: 8
        DECODE: SYMBOL
      - NOME_CAMPO: ORIGEM DO INSTRUMENTO INDICADO
        ID: H
        DECODE: CLEARINGHOUSE
      - NOME_CAMPO: BASE
        ID: 252
        DECODE: N/A
      - NOME_CAMPO: BASE
        ID: 360
        DECODE: N/A
      - NOME_CAMPO: BASE_INTERPOLACAO
        ID: 252
        DECODE: N/A
      - NOME_CAMPO: BASE_INTERPOLACAO
        ID: 360
        DECODE: N/A
      - NOME_CAMPO: CRITERIO_CAPITALIZACAO
        ID: 0
        DECODE: EXPONENCIAL
      - NOME_CAMPO: CRITERIO_CAPITALIZACAO
        ID: 1
        DECODE: LINEAR
      - NOME_CAMPO: CRITERIO_CAPITALIZACAO
        ID: 2
        DECODE: PREÇO
    dtypes:
      NOME_CAMPO: str
      ID: str
      DECODE: str

# up2data b3
up2data_b3:
  web_driver:
    xpath_el_wait_until_loaded:
  bl_verify: False
  bl_io_interpreting: False
  str_sep: ';'
  str_decimal: ','
  request_token: 'https://arquivos.b3.com.br/api/download/requestname?fileName=InstrumentsConsolidated&date={}'
  access_api: 'https://arquivos.b3.com.br/api/download/?token={}'
  securities_by_category_name:
    stocks: ['SHARES', 'UNITS', 'UNIT']
    receipts: ['WARRANTS', 'WARRANT', 'RIGHTS', 'RECEIPTS']
    forwards: ['COMMON EQUITIES FORWARD', 'FORWARD RATE AGREEMENT']
    bdrs: ['BDR']
    etfs: ['ETF EQUITIES', 'ETF FOREIGN INDEX', 'FIXED INCOME TRADABLE INSTRUMENTS',
      'ETF PRIMARY MARKET', 'GROSS SETTLEMENT', 'FIXED INCOME TRADABLE INSTRUMENT T1']
    futures: ['FUTURE', 'ROLLOVER', 'STOCK FUTURE', 'FORW/FUT GOLD']
    options_equities: ['OPTION ON EQUITIES']
    options_index: ['OPTION ON INDEX']
    funds: ['FUNDS']
    indexes: ['INDEX']
  securities_by_market_name:
    futures: ['FUTURE', 'SPOT']
    options_bmf: ['OPTIONS ON FUTURE', 'OPTIONS ON SPOT']
  daily_trades: 'https://arquivos.b3.com.br/apinegocios/tickercsv/{}/'
  derivatives: 'https://arquivos.b3.com.br/tabelas/DerivativesOpenPosition/{}?lang=pt'
  instruments: 'https://arquivos.b3.com.br/tabelas/InstrumentsConsolidated/{}?lang=pt'
  key_token: token
  url_daily_trades: https://arquivos.b3.com.br/apinegocios/tickercsv/{}/
  bl_io_interpretin: False
  str_input_date_format: AAAA-MM-DD
  col_dt_ref: DataReferencia
  col_instrument: CodigoInstrumento
  col_stock_update: AcaoAtualizacao
  col_pv: PrecoNegocio
  col_qty_trd: QuantidadeNegociada
  col_closing_time: HoraFechamento
  col_trd_code: CodigoIdentificadorNegocio
  col_section_type: TipoSessaoPregao
  col_trd_dt: DataNegocio
  col_buyer_code: CodigoParticipanteComprador
  col_seller_code: CodigoParticipanteVendedor
  col_create_asset: ASSET
  value_nan: N/A

### RESOURCES TO BE SCRAPED ###

# Standardized Instruments Groups
standardized_instruments_groups:
  web_driver:
    xpath_el_wait_until_loaded:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: pesquisapregao/download?filelist=AI{{dt_ref_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: upper_constant
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_standardized_instruments_groups
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    TIPO: int
    ID_GRUPO_INSTRUMENTOS: int
    ID_CAMARA: str
    ID_INSTRUMENTO: str
    ORIGEM_INSTRUMENTO: str
  df_read_params:
    skiprows: 1
    names:
      - TIPO
      - ID_GRUPO_INSTRUMENTOS
      - ID_CAMARA
      - ID_INSTRUMENTO
      - ORIGEM_INSTRUMENTO
    sep: ";"

# BVBG.087.01 IndexReport
index_report:
  web_driver:
    xpath_el_wait_until_loaded:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: pesquisapregao/download?filelist=IR{{dt_ref_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: pascal
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_index_report
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    TCKR_SYMB: str
    ID: int
    PRTRY: int
    MKT_IDR_CD: category
    OPNG_PRIC: float
    MIN_PRIC: float
    MAX_PRIC: float
    TRAD_AVRG_PRIC: float
    PRVS_DAY_CLSG_PRIC: float
    CLSG_PRIC: float
    INDX_VAL: float
    OSCN_VAL: float
    ASST_DESC: str
    STTLM_VAL: float
    RSNG_SHRS_NB: int
    FLNG_SHRS_NB: int
    STBL_SHRS_NB: int
    CCY: str
    FILE_NAME: str
  df_read_params:
  xml_keys:
    tags:
      IndxInf:
        - TckrSymb
        - Id
        - Prtry
        - MktIdrCd
        - OpngPric
        - MinPric
        - MaxPric
        - TradAvrgPric
        - PrvsDayClsgPric
        - ClsgPric
        - IndxVal
        - OscnVal
        - AsstDesc
        - SttlmVal
        - RsngShrsNb
        - FlngShrsNb
        - StblShrsNb
    attributes:
      currency: Ccy

# BVBG.086.01 PriceReport
price_report:
  web_driver:
    xpath_el_wait_until_loaded:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: pesquisapregao/download?filelist=PR{{dt_ref_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: pascal
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_price_report
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    DT: date
    TCKR_SYMB: str
    ID: str
    PRTRY: int
    MKT_IDR_CD: category
    TRAD_QTY: int
    OPN_INTRST: float
    FIN_INSTRM_QTY: int
    OSCN_PCTG: float
    NTL_FIN_VOL: int
    INTL_FIN_VOL: int
    BEST_BID_PRIC: float
    BEST_ASK_PRIC: float
    FRST_PRIC: float
    MIN_PRIC: float
    MAX_PRIC: float
    TRAD_AVRG_PRIC: float
    LAST_PRIC: float
    VARTN_PTS: float
    MAX_TRAD_LMT: float
    MIN_TRAD_LMT: float
    CCY: str
    FILE_NAME: str
  df_read_params:
  xml_keys:
    tags:
      PricRpt:
        - Dt
        - TckrSymb
        - Id
        - Prtry
        - MktIdrCd
        - TradQty
        - OpnIntrst
        - FinInstrmQty
        - OscnPctg
        - NtlFinVol
        - IntlFinVol
        - BestBidPric
        - BestAskPric
        - FrstPric
        - MinPric
        - MaxPric
        - TradAvrgPric
        - LastPric
        - VartnPts
        - MaxTradLmt
        - MinTradLmt
    attributes:
      currency: Ccy

# BVBG.028.02 - b3 tradable securities information available in b3_trd_sec.py

# BVBG.029.02
registration_indicator_instruments:
  web_driver:
    xpath_el_wait_until_loaded:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: pesquisapregao/download?filelist=II{{dt_ref_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: pascal
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_registration_indicator_instruments
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    ID: str
    PRTRY: int
    ISSR: int
    ACTVTY_IND: str
    FRQCY: str
    NET_POS_ID: str
    DT: date
    UPD_TP: str
    MKT_IDR_CD: category
    INSTRM_NM: str
    DESC: str
    SGMT: int
    MKT: int
    ASST: str
    SCTY_CTGY: int
    TP_CD: int
    ECNC_IND_DESC: str
    BASE_CD: int
    VAL_TP_CD: int
    NTRY_REF_CD: int
    DCML_PRCSN: int
    MTRTY: int
    FILE_NAME: str
  df_read_params:
  xml_keys:
    tags:
      BizGrp:
        - Id
        - Prtry
        - Issr
        - ActvtyInd
        - Frqcy
        - NetPosId
        - Dt
        - UpdTp
        - MktIdrCd
        - InstrmNm
        - Desc
        - Sgmt
        - Mkt
        - Asst
        - SctyCtgy
        - TpCd
        - EcncIndDesc
        - BaseCd
        - ValTpCd
        - NtryRefCd
        - DcmlPrcsn
        - Mtrty

# BVBG.044.01
fee_daily_unit_cost:
  web_driver:
    xpath_el_wait_until_loaded:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: pesquisapregao/download?filelist=DI{{dt_ref_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: pascal
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_fee_daily_unit_cost
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    SGMT: int
    MKT: int
    ASST: str
    XPRTN_CD: str
    DAY_TRAD_IND: str
    TRAD_TX_TP: int
    XCHG_FEE_UNIT_COST_AMT: float
    REGN_FEE_UNIT_COST_AMT: float
    CCY: str
    FILE_NAME: str
  df_read_params:
  xml_keys:
    tags:
      FeeInstrmInf:
        - Sgmt
        - Mkt
        - Asst
        - XprtnCd
        - DayTradInd
        - TradTxTp
        - XchgFeeUnitCost:
          - Amt
        - RegnFeeUnitCost:
          - Amt
    attributes:
      currency: Ccy

# BVBG.043.01
fee_monthly_unit_cost:
  web_driver:
    xpath_el_wait_until_loaded:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: pesquisapregao/download?filelist=UN{{dt_inf_month_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: pascal
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_fee_monthly_unit_cost
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    SGMT: int
    MKT: int
    ASST: str
    DAY_TRAD_IND: str
    TRAD_TX_TP: int
    XCHG_FEE_UNIT_COST_AMT: float
    REGN_FEE_UNIT_COST_AMT: float
    CCY: str
    FILE_NAME: str
  df_read_params:
  xml_keys:
    tags:
      FeeInstrmInf:
        - Sgmt
        - Mkt
        - Asst
        - DayTradInd
        - TradTxTp
        - XchgFeeUnitCost:
          - Amt
        - RegnFeeUnitCost:
          - Amt
    attributes:
      currency: Ccy

# Primitive Risk Factors (FPRs)
primitive_risk_factors:
  web_driver:
    xpath_el_wait_until_loaded:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: pesquisapregao/download?filelist=FP{{dt_ref_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: pascal
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_primitive_risk_factors
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    TIPO: int
    ID_FPR: int
    NOME_FPR: str
    FORMATO_VARIACAO: int
    ID_GRUPO_FPR: int
    ID_CAMARA_INDICADOR: category
    ID_INSTRUMENTO_INDICADOR: str
    ORIGEM_INSTRUMENTO_INDICADO: category
    BASE: int
    BASE_INTERPOLACAO: int
    CRITERIO_CAPITALIZACAO: int
    FILE_NAME: str
  df_read_params:
    skiprows: 1
    names:
      - TIPO
      - ID_FPR
      - NOME_FPR
      - FORMATO_VARIACAO
      - ID_GRUPO_FPR
      - ID_CAMARA_INDICADOR
      - ID_INSTRUMENTO_INDICADOR
      - ORIGEM_INSTRUMENTO_INDICADO
      - BASE
      - BASE_INTERPOLACAO
      - CRITERIO_CAPITALIZACAO
    sep: ";"

# Risk Formulas
risk_formulas:
  web_driver:
    xpath_el_wait_until_loaded:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: pesquisapregao/download?filelist=FR{{dt_ref_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: pascal
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_risk_formulas
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    TIPO: int
    ID_FORMULA_RISCO: int
    NOME_FORMULA_RISCO: str
    FILE_NAME: str
  df_read_params:
    skiprows: 1
    names:
      - TIPO
      - ID_FORMULA_RISCO
      - NOME_FORMULA_RISCO
    sep: ";"

# BVBG.024.01 Fee Variables
variable_fees_monthly_updt:
  web_driver:
    xpath_el_wait_until_loaded:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: pesquisapregao/download?filelist=VA{{dt_inf_month_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: pascal
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_variable_fees_monthly_updt
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    SGMT: int
    MKT: int
    ASST: str
    REF_DT: date
    CONVS_IND_VAL: float
    ID: int
    PRTRY: int
    MKT_IDR_CD: category
    FILE_NAME: str
  df_read_params:
  xml_keys:
    tags:
      FeeInf:
        - Sgmt
        - Mkt
        - Asst
        - RefDt
        - ConvsIndVal
        - Id
        - Prtry
        - MktIdrCd
    attributes:
      currency: Ccy

# Daily Liquidity Limit
daily_liquidity_limit:
  web_driver:
    xpath_el_wait_until_loaded:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: pesquisapregao/download?filelist=LD{{dt_ref_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: pascal
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_daily_liquidity_limit
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    ID_CAMARA: category
    ORIGIEM_INSTRUMENTO: category
    ID_INSTRUMENTO: str
    SIMBOLO_INSTRUMENTO: str
    LIMITE_LIQUIDEZ: float
    FILE_NAME: str
  df_read_params:
    skiprows: 1
    names:
      - ID_CAMARA
      - ORIGIEM_INSTRUMENTO
      - ID_INSTRUMENTO
      - SIMBOLO_INSTRUMENTO
      - LIMITE_LIQUIDEZ
    sep: ";"
    usecols:
      - 0
      - 1
      - 2
      - 3
      - 4

# Daily Liquidity Limit - Other Limits
daily_liquidity_limit_other_limits:
  web_driver:
    xpath_el_wait_until_loaded:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: pesquisapregao/download?filelist=LA{{dt_ref_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: pascal
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_daily_liquidity_limit_others
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    ID_CAMARA: category
    ORIGIEM_INSTRUMENTO: category
    ID_INSTRUMENTO: str
    SIMBOLO_INSTRUMENTO: str
    N_A: int
    LIMITE_LIQUIDEZ: float
    FILE_NAME: str
  df_read_params:
    skiprows: 1
    names:
      - ID_CAMARA
      - ORIGIEM_INSTRUMENTO
      - ID_INSTRUMENTO
      - SIMBOLO_INSTRUMENTO
      - N_A
      - LIMITE_LIQUIDEZ
    sep: ";"

# Tradable Security List
tradable_security_list:
  web_driver:
    xpath_el_wait_until_loaded:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: pesquisapregao/download?filelist=SecurityList{{dt_ref_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: pascal
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: DD/MM/YYYY
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_tradable_security_list
  bl_insert_or_ignore: False
  bl_schema: True
  ignored_file_extensions:
    - tmp
    - log
    - bak
    - json
  dtypes:
    SYMBOL: str
    SECURITY_ID: int
    SECURITY_ID_SOURCE: category
    SECURITY_EXCHANGE: category
    NO_APPL_IDS: category
    APPL_ID: str
    PUT_OR_CALL: category
    PRODUCT: category
    CFI_CODE: category
    SECURITY_GROUP: str
    SECURITY_TYPE: category
    SECURITY_SUB_TYPE: category
    MATURITY_MONTH_YEAR: int
    MATURITY_DATE: date
    ISSUE_DATE: date
    COUNTRY_OF_ISSUE: category
    STRIKE_PRICE: float
    STRIKE_CURRENCY: category
    EXERCISE_STYLE: category
    CONTRACT_MULTIPLIER: float
    SECURITY_DESC: str
    CONTRACT_SETTL_MONTH: int
    DATED_DATE: int
    SETTL_TYPE: category
    SETTL_DATE: date
    PRICE_DIVISOR: int
    MIN_PRICE_INCREMENT: float
    TICK_SIZE_DENOMINATOR: int
    MIN_ORDER_QTY: int
    MAX_ORDER_QTY: int
    MULTI_LEG_MODEL: int
    MULTI_LEG_PRICE_METHOD: int
    INDEX_PCT: str
    NO_INSTR_ATTRIB: int
    INSTR_ATTRIB_TYPE: str
    INSTR_ATTRIB_VALUE: str
    START_DATE: str
    END_DATE: str
    NO_UNDERLYINGS: int
    UNDERLYING_SYMBOL: str
    UNDERLYING_SECURITY_ID: str
    UNDERLYING_SECURITY_ID_SOURCE: str
    UNDERLYING_SECURITY_EXCHANGE: category
    INDEX_THEORETICAL_QTY: str
    CURRENCY: category
    SETTL_CURRENCY: category
    SECURITY_STRATEGY_TYPE: category
    ASSET: category
    NO_SHARES_ISSUED: int
    SECURITY_VALIDITY_TIMESTAMP: str
    MARKET_SEGMENT_ID: int
    GOVERNANCE_INDICATOR: category
    CORPORATE_ACTION_EVENT_ID: int
    SECURITY_MATCH_TYPE: int
    NO_LEGS: int
    LEG_SYMBOL: str
    LEG_SECURITY_ID: str
    LEG_SECURITY_ID_SOURCE: str
    LEG_SECURITY_TYPE: category
    LEG_SECURITY_EXCHANGE: category
    LEG_RATIO_QTY: category
    LEG_SIDE: category
    NO_TICK_RULES: str
    NO_LOT_TYPE_RULES: int
    LOT_TYPE: category
    MIN_LOT_SIZE: int
    IMPLIED_MARKET_INDICATOR: category
    MIN_CROSS_QTY: int
    ISIN_NUMBER: str
    CLEARING_HOUSE_ID: int
    FILE_NAME: str
  df_read_params:
    sep: ","

# Mapping OTC Instrument Groups
mapping_otc_instrument_groups:
  web_driver:
    xpath_el_wait_until_loaded:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: pesquisapregao/download?filelist=MO{{dt_ref_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: upper_constant
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: DD/MM/YYYY
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_mapping_otc_instrument_groups
  bl_insert_or_ignore: False
  bl_schema: True
  ignored_file_extensions:
    - tmp
    - log
    - bak
  dtypes:
    TIPO: str
    ID_GRUPO_INSTRUMENTOS: int
    ID_CAMARA_ATIVO_OBJETO: category
    ID_INSTRUMENTO_ATIVO_OBJETO: int
    ORIGEM_INSTRUMENTO_ATIVO_OBJETO: category
    ID_FORMULA_RISCO: int
    ID_FPR: int
    ID_QUALIFICADOR: int
    DESCRICAO_QUALIFICADOR: category
    FILE_NAME: str
  df_read_params:
    skiprows: 1
    names:
      - TIPO
      - ID_GRUPO_INSTRUMENTOS
      - ID_CAMARA_ATIVO_OBJETO
      - ID_INSTRUMENTO_ATIVO_OBJETO
      - ORIGEM_INSTRUMENTO_ATIVO_OBJETO
      - ID_FORMULA_RISCO
      - ID_FPR
      - ID_QUALIFICADOR
      - DESCRICAO_QUALIFICADOR
    sep: ";"

# Mapping Standardized Instrument Groups
mapping_standardized_instrument_groups:
  web_driver:
    xpath_el_wait_until_loaded:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: pesquisapregao/download?filelist=MP{{dt_ref_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: upper_constant
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: DD/MM/YYYY
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_mapping_standardized_instrument_groups
  bl_insert_or_ignore: False
  bl_schema: True
  ignored_file_extensions:
    - tmp
    - log
    - bak
  dtypes:
    TIPO: str
    ID_GRUPO_INSTRUMENTOS: int
    ID_FORMULA_RISCO: int
    ID_FPR: int
    ID_QUALIFICADOR: int
    DESCRICAO_QUALIFICADOR: category
    DATA_INICIAL_INTERVALO_VENCIMENTOS: date
    DATA_FINAL_INTERVALO_VENCIMENTOS: date
    INDICADOR_FPR_INDEPENDENTE: int
    FILE_NAME: str
  df_read_params:
    skiprows: 1
    names:
      - TIPO
      - ID_GRUPO_INSTRUMENTOS
      - ID_FORMULA_RISCO
      - ID_FPR
      - ID_QUALIFICADOR
      - DESCRICAO_QUALIFICADOR
      - DATA_INICIAL_INTERVALO_VENCIMENTOS
      - DATA_FINAL_INTERVALO_VENCIMENTOS
      - INDICADOR_FPR_INDEPENDENTE
    sep: ";"

# Maximum Theoretical Margin for Open Positions and the Mininimum Values of Assets Pledged as Collateral
mtm_b3:
  web_driver:
    xpath_el_wait_until_loaded:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: pesquisapregao/download?filelist=MT{{dt_ref_yymmdd}}.zip#source=mtm_b3
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: upper_constant
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: DD/MM/YYYY
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_mtm_b3
  bl_insert_or_ignore: False
  bl_schema: True
  ignored_file_extensions:
    - tmp
    - log
    - bak
  dtypes:
    TICKER: str
    PRECO_FECHAMENTO: float
    MARGEM_B3_COMPRA_D_1: float
    DESAGIO_B3_COMPRA_D_1: float
    MARGEM_B3_VENDA_D_1: float
    DESAGIO_B3_VENDA_D_1: float
    MARGEM_B3_COMPRA_D_2: float
    DESAGIO_B3_COMPRA_D_2: float
    MARGEM_B3_VENDA_D_2: float
    DESAGIO_B3_VENDA_D_2: float
    MARGEM_B3_COMPRA_D_3: float
    DESAGIO_B3_COMPRA_D_3: float
    MARGEM_B3_VENDA_D_3: float
    DESAGIO_B3_VENDA_D_3: float
    MARGEM_B3_COMPRA_D_4: float
    DESAGIO_B3_COMPRA_D_4: float
    MARGEM_B3_VENDA_D_4: float
    DESAGIO_B3_VENDA_D_4: float
    MARGEM_B3_COMPRA_D_5: float
    DESAGIO_B3_COMPRA_D_5: float
    MARGEM_B3_VENDA_D_5: float
    DESAGIO_B3_VENDA_D_5: float
    MARGEM_B3_COMPRA_D_6: float
    DESAGIO_B3_COMPRA_D_6: float
    MARGEM_B3_VENDA_D_6: float
    DESAGIO_B3_VENDA_D_6: float
    MARGEM_B3_COMPRA_D_7: float
    DESAGIO_B3_COMPRA_D_7: float
    MARGEM_B3_VENDA_D_7: float
    DESAGIO_B3_VENDA_D_7: float
    MARGEM_B3_COMPRA_D_8: float
    DESAGIO_B3_COMPRA_D_8: float
    MARGEM_B3_VENDA_D_8: float
    DESAGIO_B3_VENDA_D_8: float
    MARGEM_B3_COMPRA_D_9: float
    DESAGIO_B3_COMPRA_D_9: float
    MARGEM_B3_VENDA_D_9: float
    DESAGIO_B3_VENDA_D_9: float
    MARGEM_B3_COMPRA_D_10: float
    DESAGIO_B3_COMPRA_D_10: float
    MARGEM_B3_VENDA_D_10: float
    DESAGIO_B3_VENDA_D_10: float
  df_read_params:
    skiprows: 1
    names:
      - INSTRUMENT_MTM
      - HOLDING_DAY
      - MTM_MAX_C_PHI1
      - MTM_MAX_V_PHI1
      - MIN_MARGIN_CREDIT_COLLATERAL_PHI1
      - MIN_MARGIN_CREDIT_COLLATERAL_PHI2
    sep: ";"

# Equities Market - Equities Option Reference Premiums
option_theor_premiums:
  web_driver:
    xpath_el_wait_until_loaded:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: pesquisapregao/download?filelist=PE{{dt_ref_yymmdd}}.ex_
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: upper_constant
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: DD/MM/YYYY
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_option_theor_premiums
  bl_insert_or_ignore: False
  bl_schema: True
  ignored_file_extensions:
    - tmp
    - log
    - bak
  dtypes:
    TICKER_SYMBOL: str
    OPTION_TYPE: str
    OPTION_STYLE: str
    EXPIRY_DATE: int
    EXERCISE_PRICE: float
    REFERENCE_PREMIUM: float
    IMPLIED_VOLATILITY: float
    FILE_NAME: str
  df_read_params:
    skiprows: 1
    names:
      - TICKER_SYMBOL
      - OPTION_TYPE
      - OPTION_STYLE
      - EXPIRY_DATE
      - EXERCISE_PRICE
      - REFERENCE_PREMIUM
      - IMPLIED_VOLATILITY
      - FILE_NAME
    sep: ";"

# FX Market - Traded Rates, Opening Parameters and Contracted Transactions
fx_markets_traded_rates:
  web_driver:
    xpath_el_wait_until_loaded:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: pesquisapregao/download?filelist=CT{{dt_ref_yymmdd}}.zip#file_extension=.fwf
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: upper_constant
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYYMMDD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_fx_markets_traded_rates
  bl_insert_or_ignore: False
  bl_schema: True
  ignored_file_extensions:
    - tmp
    - log
    - bak
  dtypes:
    ID_TRANSACAO: str
    DATA_REFERENCIA: date
    DATA_CONTRATACAO_TXS_PRATICADAS: date
    DATA_LIQUIDACAO_TXS_PRATICADAS: date
    TX_PRATICADA_MX: float
    TX_PRATICADA_MIN: float
    TX_PRATICADA_MEDIA: float
    DATA_CONTRATACAO_PARAMETROS_ABERTURA: date
    DATA_LIQUIDACAO_PARAMETROS_ABERTURA: date
    TAXA_ABERTURA: float
    PERCENTAUL_GARANTIDO: float
    DATA_CONTRATACAO_OPERACOES_CONTRATADAS: date
    DATA_LIQUIDACAO_OPERACOES_CONTRATADAS: date
    NUMERO_OPERACOES_CONTRATADAS: int
    VALOR_OPERACOES_CONTRATADAS_DOLAR: float
    VALOR_OPERACOES_CONTRATADAS_REAIS: float
    FILE_NAME: str
  df_read_params:
  fixed_width_layout:
    - field: ID_TRANSACAO
      start: 0
      end: 8
    - field: DATA_REFERENCIA
      start: 8
      end: 16
    - field: DATA_CONTRATACAO_TXS_PRATICADAS
      start: 16
      end: 24
    - field: DATA_LIQUIDACAO_TXS_PRATICADAS
      start: 24
      end: 32
    - field: TX_PRATICADA_MX
      start: 32
      end: 41
    - field: TX_PRATICADA_MIN
      start: 41
      end: 50
    - field: TX_PRATICADA_MEDIA
      start: 50
      end: 59
    - field: DATA_CONTRATACAO_PARAMETROS_ABERTURA
      start: 59
      end: 67
    - field: DATA_LIQUIDACAO_PARAMETROS_ABERTURA
      start: 67
      end: 75
    - field: TAXA_ABERTURA
      start: 75
      end: 84
    - field: PERCENTAUL_GARANTIDO
      start: 84
      end: 89
    - field: DATA_CONTRATACAO_OPERACOES_CONTRATADAS
      start: 89
      end: 97
    - field: DATA_LIQUIDACAO_OPERACOES_CONTRATADAS
      start: 97
      end: 105
    - field: NUMERO_OPERACOES_CONTRATADAS
      start: 105
      end: 113
    - field: VALOR_OPERACOES_CONTRATADAS_DOLAR
      start: 113
      end: 126
    - field: VALOR_OPERACOES_CONTRATADAS_REAIS
      start: 126
      end: 139

# FX Market - Volume Settled on a Net Basis
fx_market_volume_settled:
  web_driver:
    xpath_el_wait_until_loaded:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: pesquisapregao/download?filelist=CV{{dt_ref_yymmdd}}.zip#file_extension=.fwf
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: upper_constant
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYYMMDD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_fx_volume_settled
  bl_insert_or_ignore: False
  bl_schema: True
  ignored_file_extensions:
    - tmp
    - log
    - bak
  dtypes:
    ID_TRANSACAO: str
    DATA_REFERENCIA: date
    DATA_LIQUIDACAO_VALORES_LIQUIDOS_COMPENSADO: date
    VALOR_LIQUIDO_COMPENSADO_DOLAR: float
    VALOR_LIQUIDO_COMPENSADO_REAL: float
    FILE_NAME: str
  df_read_params:
  fixed_width_layout:
    - field: ID_TRANSACAO
      start: 0
      end: 8
    - field: DATA_REFERENCIA
      start: 8
      end: 16
    - field: DATA_LIQUIDACAO_VALORES_LIQUIDOS_COMPENSADO
      start: 16
      end: 24
    - field: VALOR_LIQUIDO_COMPENSADO_DOLAR
      start: 24
      end: 37
    - field: VALOR_LIQUIDO_COMPENSADO_REAL
      start: 37
      end: 50

# Derivatives - List of ISIN Numbers for Swaps
list_isin_numbers_swaps:
  web_driver:
    xpath_el_wait_until_loaded:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: pesquisapregao/download?filelist=IS{{dt_ref_yymmdd}}.ex_
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: upper_constant
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYYMMDD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_list_isin_numbers_swaps
  bl_insert_or_ignore: False
  bl_schema: True
  ignored_file_extensions:
    - tmp
    - log
    - bak
  dtypes:
    DATA_CADASTRO: date
    CONTRATO: str
    NOME_CONTRATO: str
    CODIGO_ISIN: str
  df_read_params:
  fixed_width_layout:
    - field: DATA_CADASTRO
      start: 0
      end: 8
    - field: CONTRATO
      start: 8
      end: 13
    - field: NOME_CONTRATO
      start: 8
      end: 63
    - field: CODIGO_ISIN
      start: 63
      end: 75

# Derivatives Market - IDxUS Dollar Swap - Mark to Market
id_us_dollar_swap_mtm:
  web_driver:
    xpath_el_wait_until_loaded:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: pesquisapregao/download?filelist=MM{{dt_ref_yymmdd}}.ex_
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: upper_constant
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYYMMDD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_id_us_dollar_swap_mtm
  bl_insert_or_ignore: False
  bl_schema: True
  ignored_file_extensions:
    - tmp
    - log
    - bak
  dtypes:
    ID_TRANSACAO: int
    COMPLEMENTO_TRANSACAO: int
    TIPO_REGISTRO: int
    DATA_GERACAO_ARQUIVO: date
    REFERENCIA: str
    CODIGO_PRODUTO: str
    SERIE: str
    INDICADOR_AJUSTE_PERIODICO: str
    DATA_VENCIMENTO: date
    PRAZO_DIAS_CORRIDOS: int
    SINAL_TAXA_MERCADO: str
    TAXA_MERCADO: int
    FATOR_DESCONTO: int
    VALOR_MERCADO: int
    TAXA_OPERACIONAL_BASICA: int
  df_read_params:
  fixed_width_layout:
    - field: ID_TRANSACAO
      start: 0
      end: 6
    - field: COMPLEMENTO_TRANSACAO
      start: 6
      end: 9
    - field: TIPO_REGISTRO
      start: 9
      end: 11
    - field: DATA_GERACAO_ARQUIVO
      start: 11
      end: 19
    - field: REFERENCIA
      start: 19
      end: 25
    - field: CODIGO_PRODUTO
      start: 25
      end: 28
    - field: SERIE
      start: 28
      end: 32
    - field: INDICADOR_AJUSTE_PERIODICO
      start: 32
      end: 33
    - field: DATA_VENCIMENTO
      start: 33
      end: 41
    - field: PRAZO_DIAS_CORRIDOS
      start: 41
      end: 46
    - field: SINAL_TAXA_MERCADO
      start: 46
      end: 47
    - field: TAXA_MERCADO
      start: 47
      end: 59
    - field: FATOR_DESCONTO
      start: 59
      end: 75
    - field: VALOR_MERCADO
      start: 75
      end: 97
    - field: TAXA_OPERACIONAL_BASICA
      start: 97
      end: 113

# Derivatives Market - Swap Market Rates
swap_market_rates:
  web_driver:
    xpath_el_wait_until_loaded:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: pesquisapregao/download?filelist=TS{{dt_ref_yymmdd}}.ex_
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: upper_constant
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYYMMDD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_swap_market_rates
  bl_insert_or_ignore: False
  bl_schema: True
  ignored_file_extensions:
    - tmp
    - log
    - bak
  dtypes:
    ID_TRANSACAO: int
    COMPLEMENTO_TRANSACAO: int
    TIPO_REGISTRO: int
    DATA_GERACAO_ARQUIVO: date
    CODIGO_CURVAS_TERMO: str
    CODIGO_TAXA: str
    DESCRICAO_TAXA: str
    NUMERO_DIAS_CORRIDOS_TAXA_JURO: int
    NUMERO_SAQUES_TAXA_JURO: int
    SINAL_TAXA_TEORICA: str
    TAXA_TEORICA: int
    CARACTERISTICA_VERTICE: str
    CODIGO_VERTICE: int
  df_read_params:
  fixed_width_layout:
    - field: ID_TRANSACAO
      start: 0
      end: 6
    - field: COMPLEMENTO_TRANSACAO
      start: 6
      end: 9
    - field: TIPO_REGISTRO
      start: 9
      end: 11
    - field: DATA_GERACAO_ARQUIVO
      start: 11
      end: 19
    - field: CODIGO_CURVAS_TERMO
      start: 19
      end: 21
    - field: CODIGO_TAXA
      start: 21
      end: 26
    - field: DESCRICAO_TAXA
      start: 26
      end: 41
    - field: NUMERO_DIAS_CORRIDOS_TAXA_JURO
      start: 41
      end: 46
    - field: NUMERO_SAQUES_TAXA_JURO
      start: 46
      end: 51
    - field: SINAL_TAXA_TEORICA
      start: 51
      end: 52
    - field: TAXA_TEORICA
      start: 52
      end: 66
    - field: CARACTERISTICA_VERTICE
      start: 66
      end: 67
    - field: CODIGO_VERTICE
      start: 67
      end: 72

# Securities Market - Government Securities Reference Prices
brazillian_sovereign_bonds:
  web_driver:
    xpath_el_wait_until_loaded:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: pesquisapregao/download?filelist=PU{{dt_ref_yymmdd}}.ex_
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: upper_constant
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYYMMDD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_brazillian_sovereign_bonds
  bl_insert_or_ignore: False
  bl_schema: True
  ignored_file_extensions:
    - tmp
    - log
    - bak
  dtypes:
    TIPO_REGISTRO: int
    CODIGO_TITULO: str
    DESCRICAO_TITULO: category
    DATA_EMISSAO_TITULO: date
    DATA_VENCIMENTO_TITULO: date
    PU: float
    PU_ESTRESSE: float
    PU_D_MAIS_1: float
  df_read_params:
    sep: ";"
    skiprows: 1
    names:
      - TIPO_REGISTRO
      - CODIGO_TITULO
      - DESCRICAO_TITULO
      - DATA_EMISSAO_TITULO
      - DATA_VENCIMENTO_TITULO
      - PU
      - PU_ESTRESSE
      - PU_D_MAIS_1

# Instrument Group Parameters
instrument_group_parameters:
  web_driver:
    xpath_el_wait_until_loaded:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: pesquisapregao/download?filelist=PG{{dt_ref_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: upper_constant
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: DD/MM/YYYY
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_instrument_group_parameters
  bl_insert_or_ignore: False
  bl_schema: True
  ignored_file_extensions:
    - tmp
    - log
    - bak
  dtypes:
    TIPO_REGISTRO: int
    ID_GRUPO_INSTRUMENTOS: int
    MERCADO: int
    NOME_CLASSIFICACAO: category
    PRAZO_MINIMO_ENCERRAMENTO: int
    LIMITE_LIQUIDEZ: float
    PRAZO_SUBCARTEIRA_2: int
    PRAZO_LIQUIDACAO: int
    PRAZO_LIQUIDACAO_VENCIMENTO: int
    DATA_INICIAL_INTERVALO_VENCIMENTOS: date
    DATA_FINAL_INTERVALO_VENCIMENTOS: date
    INDICADOR_MODELO_GENERICO: int
  df_read_params:
    sep: ";"
    skiprows: 1
    names:
      - TIPO_REGISTRO
      - ID_GRUPO_INSTRUMENTOS
      - MERCADO
      - NOME_CLASSIFICACAO
      # holding period - hp
      - PRAZO_MINIMO_ENCERRAMENTO
      - LIMITE_LIQUIDEZ
      - PRAZO_SUBCARTEIRA_2
      - PRAZO_LIQUIDACAO
      - PRAZO_LIQUIDACAO_VENCIMENTO
      - DATA_INICIAL_INTERVALO_VENCIMENTOS
      - DATA_FINAL_INTERVALO_VENCIMENTOS
      - INDICADOR_MODELO_GENERICO

# spot accepted as collateral - b3
spot_accepted_collateral_b3:
  web_driver:
    xpath_el_wait_until_loaded:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: pt_br/produtos-e-servicos/compensacao-e-liquidacao/clearing/administracao-de-riscos/garantias/limites-de-renda-variavel/#source=spot_accepted_collateral_b3
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: upper_constant
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: DD/MM/YYYY
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_spot_accepted_collateral
  bl_insert_or_ignore: False
  bl_schema: True
  ignored_file_extensions:
    - tmp
    - log
    - bak
  dtypes:
    MES_ARQUIVO: category
    TICKER: str
    ISIN: str
    LIMITE_QUANTIDADES: int
  df_read_params:

# risk scenarios curve type
risk_scenarios_curve_types:
  web_driver:
    xpath_el_wait_until_loaded:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: FTP/IPNv2/RISCO/CenariosTipoCurva{{data_ref}}.zip#source=risk_scenarios_curve_types
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: upper_constant
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: DD/MM/YYYY
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_risk_scenarios_curve_types
  bl_insert_or_ignore: False
  bl_schema: True
  ignored_file_extensions:
    - tmp
    - log
    - bak
  dtypes:
    MES_ARQUIVO: category
    TICKER: str
    ISIN: str
    LIMITE_QUANTIDADES: int
  df_read_params:

# primitive risk factors
primitive_risk_factors_merged:
  web_driver:
    xpath_el_wait_until_loaded:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: FTP/IPNv2/RISCO/CenariosTipoCurva{{data_ref}}.zip#source=primitive_risk_factors_merged
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: upper_constant
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: DD/MM/YYYY
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_primitive_risk_factors_merged
  bl_insert_or_ignore: False
  bl_schema: True
  ignored_file_extensions:
    - tmp
    - log
    - bak
  dtypes:
    ID_FPR: int
    NOME_FPR: str
    TIPO_FPR: str
    FORMATO_VARIACAO: int
    ID_GRUPO_FPR: int
    ID_CAMARA_INDICADOR: category
    ID_INSTRUMENTO_INDICADOR: str
    BASE: int
    BASE_INTERPOLACAO: int
    CRITERIO_CAPITALIZACAO: int
    ID_CENARIO: int
    INT_TIPO_CENARIO: int
    DIAS_CORRIDOS_VERTICE: int
    DIAS_HOLDING_PERIOD: int
    DIAS_SAQUE_VERTICE: int
    VALOR_PHI_1: str
  df_read_params: