### CONFIGURATION TOOLS ###
### METADATA: https://dados.cvm.gov.br/dados/ ###

credentials:
  host: https://dados.cvm.gov.br/
  headers:
    Referer: https://dados.cvm.gov.br/
    Upgrade-Insecure-Requests: '1'
    User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36
    sec-ch-ua: '"Not(A:Brand";v="99 "Google Chrome";v="133 "Chromium";v="133"'
    sec-ch-ua-mobile: '?0'
    sec-ch-ua-platform: "Windows"
    Cookie: Path=/
  payload:
  token:
    host:
    get:
      req_method: GET
      bl_verify: False
      timeout: (12.0, 12.0)
    keys:
      token: token

metadata:


### RESOURCES TO BE SCRAPED ###

pubicly_traded_cos:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  app: dados/CIA_ABERTA/CAD/DADOS/cad_cia_aberta.csv
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: default
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_cvm_pubicly_traded_cos
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    CNPJ_CIA: str
    DENOM_SOCIAL: str
    DENOM_COMERC: str
    DT_REG: date
    DT_CONST: date
    DT_CANCEL: date
    MOTIVO_CANCEL: category
    SIT: category
    DT_INI_SIT: date
    CD_CVM: str
    SETOR_ATIV: str
    TP_MERC: str
    CATEG_REG: category
    DT_INI_CATEG: date
    SIT_EMISSOR: category
    DT_INI_SIT_EMISSOR: date
    CONTROLE_ACIONARIO: str
    TP_ENDER: category
    LOGRADOURO: str
    COMPL: str
    BAIRRO: str
    MUN: str
    UF: category
    PAIS: category
    CEP: str
    DDD_TEL: category
    TEL: str
    DDD_FAX: category
    FAX: str
    EMAIL: str
    TP_RESP: category
    RESP: str
    DT_INI_RESP: date
    LOGRADOURO_RESP: str
    COMPL_RESP: str
    BAIRRO_RESP: str
    MUN_RESP: str
    UF_RESP: category
    PAIS_RESP: category
    CEP_RESP: str
    DDD_TEL_RESP: category
    TEL_RESP: str
    DDD_FAX_RESP: category
    FAX_RESP: int
    EMAIL_RESP: str
    CNPJ_AUDITOR: str
    AUDITOR: str
  df_read_params:
    sep: ;
    encoding: latin-1

independent_fin_advs:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  app: dados/AGENTE_AUTON/CAD/DADOS/cad_agente_auton.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: default
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_cvm_independent_fin_advs
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    NOME: str
    DT_REG: date
    DT_CANCEL: date
    MOTIVO_CANCEL: category
    SIT: category
    DT_INI_SIT: date
    CNPJ: str
    DENOM_SOCIAL: str
    TP_ENDER: category
    LOGRADOURO: str
    COMPL: str
    BAIRRO: str
    MUN: str
    UF: category
    CEP: str
    DDD: category
    TEL: str
    EMAIL: str
    SITE_ADMIN: str
    FILE_NAME: str
  df_read_params:
    sep: ';'
    encoding: latin-1

fiduciary_agents:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  app: dados/AGENTE_FIDUC/CAD/DADOS/cad_agente_fiduc.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: default
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_cvm_fiduciary_agents
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    AGENTE_FIDUC: str
    DT_REG: date
    DT_CANCEL: date
    SIT: category
    DT_INI_SIT: date
    CNPJ: str
    DENOM_SOCIAL: str
    LOGRADOURO: str
    COMPL: str
    BAIRRO: str
    MUN: str
    UF: category
    PAIS: category
    CEP: str
    DDD_TEL: category
    TEL: str
    FILE_NAME: str
  df_read_params:
    sep: ';'
    encoding: latin-1

foreign_cos:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  app: dados/CIA_ESTRANG/CAD/DADOS/cad_cia_estrang.csv
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: default
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_cvm_foreign_cos
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    CNPJ: str
    DENOM_SOCIAL: str
    DENOM_COMERC: str
    PAIS_ORIGEM: category
    DT_REG: date
    DT_CONST: date
    DT_CANCEL: date
    MOTIVO_CANCEL: category
    SIT: category
    DT_INI_SIT: date
    CD_CVM: str
    SETOR_ATIV: category
    CATEG_REG: category
    DT_INI_CATEG: date
    SIT_EMISSOR: category
    DT_INI_SIT_EMISSOR: date
    CONTROLE_ACIONARIO: str
    TP_ENDER: category
    LOGRADOURO: str
    COMPL: str
    BAIRRO: str
    CIDADE: str
    ESTADO: category
    PAIS: category
    CEP: str
    CD_PAIS_TEL: category
    DDD_TEL: category
    TEL: str
    CD_PAIS_FAX: category
    DDD_FAX: category
    FAX: str
    EMAIL: str
    TP_RESP: category
    RESP: str
    DT_INI_RESP: date
    LOGRADOURO_RESP: str
    COMPL_RESP: str
    BAIRRO_RESP: str
    MUN_RESP: str
    UF_RESP: category
    PAIS_RESP: category
    CEP_RESP: str
    DDD_TEL_RESP: category
    TEL_RESP: str
    DDD_FAX_RESP: category
    FAX_RESP: int
    EMAIL_RESP: str
    CNPJ_AUDITOR: str
    AUDITOR: str
  df_read_params:
    sep: ';'
    encoding: latin-1

incentivized_cos:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  app: dados/CIA_INCENT/CAD/DADOS/cad_cia_incent.csv
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: default
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_cvm_incentivized_cos
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    CNPJ: str
    ST_CIA_INCENT_REG: category
    DENOM_SOCIAL: str
    DENOM_COMERC: str
    DT_REG: date
    DT_CONST: date
    DT_CANCEL: date
    MOTIVO_CANCEL: category
    SIT: category
    DT_INI_SIT: date
    CD_CVM: str
    SETOR_ATIV: category
    CATEG_REG: category
    DT_INI_CATEG: date
    SIT_EMISSOR: category
    DT_INI_SIT_EMISSOR: date
    CONTROLE_ACIONARIO: str
    TP_ENDER: category
    LOGRADOURO: str
    COMPL: str
    BAIRRO: str
    MUN: str
    UF: category
    PAIS: category
    CEP: str
    DDD_TEL: category
    TEL: str
    DDD_FAX: category
    FAX: str
    EMAIL: str
    TP_RESP: category
    RESP: str
    DT_INI_RESP: date
    LOGRADOURO_RESP: str
    COMPL_RESP: str
    BAIRRO_RESP: str
    MUN_RESP: str
    UF_RESP: category
    PAIS_RESP: category
    CEP_RESP: str
    DDD_TEL_RESP: category
    TEL_RESP: str
    DDD_FAX_RESP: category
    FAX_RESP: int
    EMAIL_RESP: str
    CNPJ_AUDITOR: str
    AUDITOR: str
  df_read_params:
    sep: ';'
    encoding: latin-1

securities_consultants:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  app: dados/CONSULTOR_VLMOB/CAD/DADOS/cad_consultor_vlmob.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: default
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_cvm_securities_consultants
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    CNPJ: str
    DIRETOR: str
    DIRETOR_DEFAULT: category
    NOME: str
    DT_REG: date
    DT_CANCEL: date
    MOTIVO_CANCEL: category
    SIT: category
    DT_INI_SIT: date
    SITE_ADMIN: str
    DENOM_SOCIAL: str
    DENOM_COMERC: str
    CONTROLE_ACIONARIO: category
    TP_ENDER: category
    LOGRADOURO: str
    COMPL: str
    BAIRRO: str
    MUN: str
    UF: category
    CEP: str
    DDD: category
    TEL: str
    EMAIL: str
    RESP: str
    TP_RESP: category
    SOCIOS: str
    FILE_NAME: str
  df_read_params:
    sep: ';'
    encoding: latin-1

crowdfunding:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  app: dados/CROWDFUNDING/CAD/DADOS/cad_crowdfunding.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: default
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_cvm_crowdfunding
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    CNPJ: str
    DENOM_SOCIAL: str
    DENOM_COMERC: str
    DT_REG: date
    SIT: category
    DT_INI_SIT: date
    WEBSITE: str
    EMAIL: str
    TP_ENDER: category
    LOGRADOURO: str
    COMPL: str
    BAIRRO: str
    MUN: str
    UF: category
    CEP: str
    DDD: category
    TEL: str
    ADM_RESP: str
    FILE_NAME: str
  df_read_params:
    sep: ';'
    encoding: latin-1

funds_registries:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  app: dados/FI/CAD/DADOS/cad_fi.csv
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: default
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_cvm_funds_registries
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    TP_FUNDO: category
    CNPJ_FUNDO: str
    DENOM_SOCIAL: str
    DT_REG: date
    DT_CONST: date
    CD_CVM: int
    DT_CANCEL: date
    SIT: category
    DT_INI_SIT: date
    DT_INI_ATIV: date
    DT_INI_EXERC: date
    DT_FIM_EXERC: date
    CLASSE: category
    DT_INI_CLASSE: date
    RENTAB_FUNDO: str
    CONDOM: category
    FUNDO_COTAS: str
    FUNDO_EXCLUSIVO: str
    TRIB_LPRAZO: category
    PUBLICO_ALVO: category
    ENTID_INVEST: str
    TAXA_PERFM: str
    INF_TAXA_PERFM: str
    TAXA_ADM: float
    INF_TAXA_ADM: str
    VL_PATRIM_LIQ: float
    DT_PATRIM_LIQ: date
    DIRETOR: str
    CNPJ_ADMIN: str
    ADMIN: str
    PF_PJ_GESTOR: str
    CPF_CNPJ_GESTOR: str
    GESTOR: str
    CNPJ_AUDITOR: str
    AUDITOR: str
    CNPJ_CUSTODIANTE: str
    CUSTODIANTE: str
    CNPJ_CONTROLADOR: str
    CONTROLADOR: str
    INVEST_CEMPR_EXTER: str
    CLASSE_ANBIMA: category
  df_read_params:
    sep: ';'
    encoding: latin-1

funds_daily_infos:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  app: dados/FI/DOC/INF_DIARIO/DADOS/inf_diario_fi_{{month_ref}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: default
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_cvm_funds_daily_infos
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    TP_FUNDO_CLASSE: category
    CNPJ_FUNDO_CLASSE: str
    ID_SUBCLASSE: str
    DT_COMPTC: date
    VL_TOTAL: float
    VL_QUOTA: float
    VL_PATRIM_LIQ: float
    CAPTC_DIA: float
    RESG_DIA: float
    NR_COTST: int
    FILE_NAME: str
  df_read_params:
    sep: ';'
    encoding: latin-1

funds_fact_sheet:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  app: dados/FI/DOC/LAMINA/DADOS/lamina_fi_{{month_ref}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: default
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_cvm_funds_fact_sheet
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    TP_FUNDO_CLASSE: category
    CNPJ_FUNDO_CLASSE: str
    ID_SUBCLASSE: str
    DENOM_SOCIAL: str
    DT_COMPTC: date
    NM_FANTASIA: str
    ENDER_ELETRONICO: str
    PUBLICO_ALVO: category
    RESTR_INVEST: str
    OBJETIVO: str
    POLIT_INVEST: str
    PR_PL_ATIVO_EXTERIOR: float
    PR_PL_ATIVO_CRED_PRIV: float
    PR_PL_ALAVANC: float
    PR_ATIVO_EMISSOR: str
    DERIV_PROTECAO_CARTEIRA: category
    RISCO_PERDA: category
    RISCO_PERDA_NEGATIVO: category
    PR_PL_APLIC_MAX_FUNDO_UNICO: float
    INVEST_INICIAL_MIN: float
    INVEST_ADIC: float
    RESGATE_MIN: float
    HORA_APLIC_RESGATE: str
    VL_MIN_PERMAN: float
    QT_DIA_CAREN: int
    CONDIC_CAREN: str
    CONVERSAO_COTA_COMPRA: str
    QT_DIA_CONVERSAO_COTA_COMPRA: int
    CONVERSAO_COTA_CANC: str
    QT_DIA_CONVERSAO_COTA_RESGATE: int
    TP_DIA_PAGTO_RESGATE: str
    QT_DIA_PAGTO_RESGATE: int
    TP_TAXA_ADM: str
    TAXA_ADM: float
    TAXA_ADM_MIN: float
    TAXA_ADM_MAX: float
    TAXA_ADM_OBS: str
    TAXA_ENTR: float
    CONDIC_ENTR: str
    QT_DIA_SAIDA: int
    TAXA_SAIDA: float
    CONDIC_SAIDA: str
    TAXA_PERFM: str
    PR_PL_DESPESA: float
    DT_INI_DESPESA: date
    DT_FIM_DESPESA: date
    ENDER_ELETRONICO_DESPESA: str
    VL_PATRIM_LIQ: float
    CLASSE_RISCO_ADMIN: category
    PR_RENTAB_FUNDO_5ANO: float
    INDICE_REFER: str
    PR_VARIACAO_INDICE_REFER_5ANO: float
    QT_ANO_PERDA: int
    DT_INI_ATIV_5ANO: date
    ANO_SEM_RENTAB: str
    CALC_RENTAB_FUNDO_GATILHO: str
    PR_VARIACAO_PERFM: float
    CALC_RENTAB_FUNDO: str
    RENTAB_GATILHO: str
    DS_RENTAB_GATILHO: str
    ANO_EXEMPLO: int
    ANO_ANTER_EXEMPLO: int
    VL_RESGATE_EXEMPLO: float
    VL_IMPOSTO_EXEMPLO: float
    VL_TAXA_ENTR_EXEMPLO: float
    VL_TAXA_SAIDA_EXEMPLO: float
    VL_AJUSTE_PERFM_EXEMPLO: float
    VL_DESPESA_EXEMPLO: float
    VL_DESPESA_3ANO: float
    VL_DESPESA_5ANO: float
    VL_RETORNO_3ANO: float
    VL_RETORNO_5ANO: float
    REMUN_DISTRIB: str
    DISTRIB_GESTOR_UNICO: str
    CONFLITO_VENDA: str
    TEL_SAC: str
    ENDER_ELETRONICO_RECLAMACAO: str
    INF_SAC: str
    TP_ATIVO: category
    PR_PL_ATIVO: float
    ANO_RENTAB: int
    PR_RENTAB_ANO: float
    PR_VARIACAO_INDICE_REFER_ANO: float
    PR_PERFM_INDICE_REFER_ANO: float
    RENTAB_ANO_OBS: str
    MES_RENTAB: int
    PR_RENTAB_MES: float
    PR_VARIACAO_INDICE_REFER_MES: float
    PR_PERFM_INDICE_REFER_MES: float
    RENTAB_MES_OBS: str
    FILE_NAME: str
  df_read_params:
    sep: ';'
    encoding: latin-1
    on_bad_lines: skip

funds_monthly_profile:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: dados/FI/DOC/PERFIL_MENSAL/DADOS/perfil_mensal_fi_{{month_ref}}.csv
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: default
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_cvm_funds_monthly_profile
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    TP_FUNDO_CLASSE: category
    CNPJ_FUNDO_CLASSE: str
    DENOM_SOCIAL: str
    DT_COMPTC: date
    VERSAO: int
    NR_COTST_PF_PB: int
    NR_COTST_PF_VAREJO: int
    NR_COTST_PJ_NAO_FINANC_PB: int
    NR_COTST_PJ_NAO_FINANC_VAREJO: int
    NR_COTST_BANCO: int
    NR_COTST_CORRETORA_DISTRIB: int
    NR_COTST_PJ_FINANC: int
    NR_COTST_INVNR: int
    NR_COTST_EAPC: int
    NR_COTST_EFPC: int
    NR_COTST_RPPS: int
    NR_COTST_SEGUR: int
    NR_COTST_CAPITALIZ: int
    NR_COTST_FI_CLUBE: int
    NR_COTST_DISTRIB: int
    NR_COTST_OUTRO: int
    PR_PL_COTST_PF_PB: float
    PR_PL_COTST_PF_VAREJO: float
    PR_PL_COTST_PJ_NAO_FINANC_PB: float
    PR_PL_COTST_PJ_NAO_FINANC_VAREJO: float
    PR_PL_COTST_BANCO: float
    PR_PL_COTST_CORRETORA_DISTRIB: float
    PR_PL_COTST_PJ_FINANC: float
    PR_PL_COTST_INVNR: float
    PR_PL_COTST_EAPC: float
    PR_PL_COTST_EFPC: float
    PR_PL_COTST_RPPS: float
    PR_PL_COTST_SEGUR: float
    PR_PL_COTST_CAPITALIZ: float
    PR_PL_COTST_FI_CLUBE: float
    PR_PL_COTST_DISTRIB: float
    PR_PL_COTST_OUTRO: float
    VOTO_ADMIN_ASSEMB: str
    JUSTIF_VOTO_ADMIN_ASSEMB: str
    PR_VAR_CARTEIRA: float
    MOD_VAR: category
    PRAZO_CARTEIRA_TITULO: str
    DELIB_ASSEMB: str
    VL_CONTRATO_COMPRA_DOLAR: float
    VL_CONTRATO_VENDA_DOLAR: float
    PR_VARIACAO_DIARIA_COTA: float
    FPR: category
    CENARIO_FPR_IBOVESPA: category
    CENARIO_FPR_JUROS: category
    CENARIO_FPR_CUPOM: category
    CENARIO_FPR_DOLAR: category
    CENARIO_FPR_OUTRO: category
    PR_VARIACAO_DIARIA_COTA_ESTRESSE: float
    PR_VARIACAO_DIARIA_PL_TAXA_ANUAL: float
    PR_VARIACAO_DIARIA_PL_TAXA_CAMBIO: float
    PR_VARIACAO_DIARIA_PL_IBOVESPA: float
    FATOR_RISCO_OUTRO: category
    PR_VARIACAO_DIARIA_OUTRO: float
    PR_COLATERAL_DERIV: float
    FATOR_RISCO_NOCIONAL: category
    VL_FATOR_RISCO_NOCIONAL_LONG_IBOVESPA: float
    VL_FATOR_RISCO_NOCIONAL_LONG_JUROS: float
    VL_FATOR_RISCO_NOCIONAL_LONG_CUPOM: float
    VL_FATOR_RISCO_NOCIONAL_LONG_DOLAR: float
    VL_FATOR_RISCO_NOCIONAL_LONG_OUTRO: float
    VL_FATOR_RISCO_NOCIONAL_SHORT_IBOVESPA: float
    VL_FATOR_RISCO_NOCIONAL_SHORT_JUROS: float
    VL_FATOR_RISCO_NOCIONAL_SHORT_CUPOM: float
    VL_FATOR_RISCO_NOCIONAL_SHORT_DOLAR: float
    VL_FATOR_RISCO_NOCIONAL_SHORT_OUTRO: float
    PF_PJ_COMITENTE_1: category
    CPF_CNPJ_COMITENTE_1: str
    COMITENTE_LIGADO_1: category
    PR_COMITENTE_1: float
    PF_PJ_COMITENTE_2: category
    CPF_CNPJ_COMITENTE_2: str
    COMITENTE_LIGADO_2: category
    PR_COMITENTE_2: float
    PF_PJ_COMITENTE_3: category
    CPF_CNPJ_COMITENTE_3: str
    COMITENTE_LIGADO_3: category
    PR_COMITENTE_3: float
    PR_ATIVO_EMISSOR_LIGADO: float
    PF_PJ_EMISSOR_1: category
    CPF_CNPJ_EMISSOR_1: str
    EMISSOR_LIGADO_1: category
    PR_EMISSOR_1: float
    PF_PJ_EMISSOR_2: category
    CPF_CNPJ_EMISSOR_2: str
    EMISSOR_LIGADO_2: category
    PR_EMISSOR_2: float
    PF_PJ_EMISSOR_3: category
    CPF_CNPJ_EMISSOR_3: str
    EMISSOR_LIGADO_3: category
    PR_EMISSOR_3: float
    PR_ATIVO_CRED_PRIV: float
    VEDAC_TAXA_PERFM: category
    DT_COTA_TAXA_PERFM: date
    VL_COTA_TAXA_PERFM: float
    VL_DIREITO_DISTRIB: float
    NR_COTST_ENTID_PREVID_COMPL: int
    PR_COTST_ENTID_PREVID_COMPL: float
    PR_PATRIM_LIQ_MAIOR_COTST: float
    NR_DIA_CINQU_PERC: int
    NR_DIA_CEM_PERC: int
    ST_LIQDEZ: str
    PR_PATRIM_LIQ_CONVTD_CAIXA: float
  df_read_params:
    sep: ';'
    encoding: latin-1
    on_bad_lines: skip

monthly_infos_fidcs:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: dados/FIDC/DOC/INF_MENSAL/DADOS/inf_mensal_fidc_{{month_ref}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: default
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_cvm_monthly_infos_fidcs
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    TP_FUNDO_CLASSE: category
    CNPJ_FUNDO_CLASSE: str
    DENOM_SOCIAL: str
    DT_COMPTC: date
    CLASSE_UNICA: category
    CNPJ_ADMIN: str
    ADMIN: str
    CLASSE: category
    CNPJ_CLASSE: str
    CONDOM: category
    FUNDO_EXCLUSIVO: category
    COTST_INTERESSE: category
    PRAZO_CONVERSAO_COTA: int
    TP_PRAZO_CONVERSAO_COTA: category
    PRAZO_PAGTO_RESGATE: int
    TP_PRAZO_PAGTO_RESGATE: category
    FILE_NAME: str
  df_read_params:
    sep: ';'
    encoding: latin-1
    on_bad_lines: skip

specially_constitued_investment_fund:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: dados/FIE/MEDIDAS/DADOS/medidas_mes_fie_{{month_ref}}.csv
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: default
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_cvm_specially_constitued_investment_fund
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    TP_FUNDO: category
    CNPJ_FUNDO: str
    DENOM_SOCIAL: str
    DT_COMPTC: date
    VL_PATRIM_LIQ: float
    NR_COTST: int
  df_read_params:
    sep: ';'
    encoding: latin-1
    on_bad_lines: skip

reits_monthly_profile:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: dados/FII/DOC/INF_MENSAL/DADOS/inf_mensal_fii_{{year_ref}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: default
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_cvm_reits_monthly_profile
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    CNPJ_FUNDO_CLASSE: str
    DATA_REFERENCIA: date
    VERSAO: int
    TOTAL_NECESSIDADES_LIQUIDEZ: float
    DISPONIBILIDADES: float
    TITULOS_PUBLICOS: float
    TITULOS_PRIVADOS: float
    FUNDOS_RENDA_FIXA: float
    TOTAL_INVESTIDO: float
    DIREITOS_BENS_IMOVEIS: float
    TERRENOS: float
    IMOVEIS_RENDA_ACABADOS: float
    IMOVEIS_RENDA_CONSTRUCAO: float
    IMOVEIS_VENDA_ACABADOS: float
    IMOVEIS_VENDA_CONSTRUCAO: float
    OUTROS_DIREITOS_REAIS: float
    ACOES: float
    DEBENTURES: float
    BONUS_SUBSCRICAO: float
    CERTIFICADOS_DEPOSITO_VALORES_MOBILIARIOS: float
    CEDULAS_DEBENTURES: float
    FUNDO_ACOES: float
    FIP: float
    FII: float
    FDIC: float
    OUTRAS_COTAS_FI: float
    NOTAS_PROMISSORIAS: float
    ACOES_SOCIEDADES_ATIVIDADES_FII: float
    COTAS_SOCIEDADES_ATIVIDADES_FII: float
    CEPAC: float
    CRI: float
    CRI_CRA: float
    LETRAS_HIPOTECARIAS: float
    LCI: float
    LCI_LCA: float
    LIG: float
    OUTROS_VALORES_MOBLIARIOS: float
    VALORES_RECEBER: float
    CONTAS_RECEBER_ALUGUEL: float
    CONTAS_RECEBER_VENDA_IMOVEIS: float
    OUTROS_VALORES_RECEBER: float
    RENDIMENTOS_DISTRIBUIR: float
    TAXA_ADMINISTRACAO_PAGAR: float
    TAXA_PERFORMANCE_PAGAR: float
    OBRIGACOES_AQUISICAO_IMOVEIS: float
    ADIANTAMENTO_VENDA_IMOVEIS: float
    ADIANTAMENTO_ALUGUEIS: float
    OBRIGACOES_SECURITIZACAO_RECEBIVEIS: float
    INSTRUMENTOS_FINANCEIROS_DERIVATIVOS: float
    OUTROS_VALORES_PAGAR: float
    TOTAL_PASSIVO: float
    DATA_INFORMACAO_NUMERO_COTISTAS: date
    TOTAL_NUMERO_COTISTAS: int
    NUMERO_COTISTAS_PESSOA_FISICA: int
    NUMERO_COTISTAS_PESSOA_JURIDICA_NAO_FINANCEIRA: int
    NUMERO_COTISTAS_BANCO_COMERCIAL: int
    NUMERO_COTISTAS_CORRETORA_DISTRIBUIDORA: int
    NUMERO_COTISTAS_OUTRAS_PESSOAS_JURIDICAS_FINANCEIRA: int
    NUMERO_COTISTAS_INVESTIDORES_NAO_RESIDENTES: int
    NUMERO_COTISTAS_ENTIDADE_ABERTA_PREVIDENCIA_COMPLEMENTAR: int
    NUMERO_COTISTAS_ENTIDADE_FECHADA_PREVIDENCIA_COMPLEMENTAR: int
    NUMERO_COTISTAS_REGIME_PROPRIO_PREVIDENCIA_SERVIDORES_PUBLICOS: int
    NUMERO_COTISTAS_SOCIEDADE_SEGURADORA_RESSEGURADORA: int
    NUMERO_COTISTAS_SOCIEDADE_CAPITALIZACAO_ARRENDAMENTO_MERCANTIL: int
    NUMERO_COTISTAS_FII: int
    NUMERO_COTISTAS_OUTROS_FUNDOS: int
    NUMERO_COTISTAS_DISTRIBUIDORES_FUNDO: int
    NUMERO_COTISTAS_OUTROS_TIPOS: int
    VALOR_ATIVO: float
    PATRIMONIO_LIQUIDO: float
    COTAS_EMITIDAS: int
    VALOR_PATRIMONIAL_COTAS: float
    PERCENTUAL_DESPESAS_TAXA_ADMINISTRACAO: float
    PERCENTUAL_DESPESAS_AGENTE_CUSTODIANTE: float
    PERCENTUAL_RENTABILIDADE_EFETIVA_MES: float
    PERCENTUAL_RENTABILIDADE_PATRIMONIAL_MES: float
    PERCENTUAL_DIVIDEND_YIELD_MES: float
    PERCENTUAL_AMORTIZACAO_COTAS_MES: float
    DATA_ENTREGA: date
    NOME_FUNDO_CLASSE: str
    DATA_FUNCIONAMENTO: date
    PUBLICO_ALVO: category
    CODIGO_ISIN: str
    QUANTIDADE_COTAS_EMITIDAS: int
    FUNDO_EXCLUSIVO: category
    COTISTAS_VINCULO_FAMILIAR: category
    MANDATO: category
    SEGMENTO_ATUACAO: category
    TIPO_GESTAO: category
    PRAZO_DURACAO: category
    DATA_PRAZO_DURACAO: date
    ENCERRAMENTO_EXERCICIO_SOCIAL: category
    MERCADO_NEGOCIACAO_BOLSA: category
    MERCADO_NEGOCIACAO_MBO: category
    MERCADO_NEGOCIACAO_MB: category
    ENTIDADE_ADMINISTRADORA_BVMF: category
    ENTIDADE_ADMINISTRADORA_CETIP: category
    NOME_ADMINISTRADOR: str
    CNPJ_ADMINISTRADOR: str
    LOGRADOURO: str
    NUMERO: str
    COMPLEMENTO: str
    BAIRRO: str
    CIDADE: str
    ESTADO: str
    CEP: str
    TELEFONE1: str
    TELEFONE2: str
    TELEFONE3: str
    SITE: str
    EMAIL: str
    FILE_NAME: str
  df_read_params:
    sep: ';'
    encoding: latin-1
    on_bad_lines: skip

banks_registry:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: dados/INTERMED/CAD/DADOS/cad_intermed.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: default
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_cvm_banks_registry
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    TP_PARTIC: category
    CNPJ: str
    DENOM_SOCIAL: str
    DT_REG: date
    TP_RESP: category
    RESP: str
    DT_INI_RESP: date
    EMAIL_RESP: str
    DENOM_COMERC: str
    DT_CANCEL: date
    MOTIVO_CANCEL: category
    SIT: category
    DT_INI_SIT: date
    CD_CVM: int
    SETOR_ATIV: category
    CONTROLE_ACIONARIO: category
    VL_PATRIM_LIQ: float
    DT_PATRIM_LIQ: date
    TP_ENDER: category
    LOGRADOURO: str
    COMPL: str
    BAIRRO: str
    MUN: str
    UF: str
    PAIS: str
    CEP: str
    DDD_TEL: str
    TEL: str
    DDD_FAX: str
    FAX: str
    EMAIL: str
    FILE_NAME: str
  df_read_params:
    sep: ';'
    encoding: latin-1
    on_bad_lines: skip

public_distribution_offerings:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  # expected comments to app, within url:
  #   - feat=read_tables
  #   - int_pgs_join={{number}}
  #   - file_extension=.{{file_extension}}
  #   - start with a commentary hash and separate params with &
  app: dados/OFERTA/DISTRIB/DADOS/oferta_distribuicao.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: default
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_cvm_public_distribution_offerings
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    NUMERO_PROCESSO: str
    NUMERO_REGISTRO_OFERTA: str
    TIPO_OFERTA: category
    TIPO_COMPONENTE_OFERTA_MISTA: category
    TIPO_ATIVO: category
    CNPJ_EMISSOR: str
    NOME_EMISSOR: str
    CNPJ_LIDER: str
    NOME_LIDER: str
    NOME_VENDEDOR: str
    CNPJ_OFERTANTE: str
    NOME_OFERTANTE: str
    RITO_OFERTA: category
    MODALIDADE_OFERTA: category
    MODALIDADE_REGISTRO: category
    MODALIDADE_DISENSA_REGISTRO: category
    DATA_ABERTURA_PROCESSO: date
    DATA_PROTOCOLO: date
    DATA_DISENSA_OFERTA: date
    DATA_REGISTRO_OFERTA: date
    DATA_INICIO_OFERTA: date
    DATA_ENCERRAMENTO_OFERTA: date
    EMISSAO: category
    CLASSE_ATIVO: category
    SERIE: category
    ESPECIE_ATIVO: category
    FORMA_ATIVO: category
    DATA_EMISSAO: date
    DATA_VENCIMENTO: date
    QUANTIDADE_SEM_LOTE_SUPLEMENTAR: int
    QUANTIDADE_NO_LOTE_SUPLEMENTAR: int
    QUANTIDADE_TOTAL: float
    PRECO_UNITARIO: float
    VALOR_TOTAL: float
    OFERTA_INICIAL: category
    OFERTA_INCENTIVO_FISCAL: category
    OFERTA_REGIME_FIDUCIARIO: category
    ATUALIZACAO_MONETARIA: category
    JUROS: category
    PROJETO_AUDIOVISUAL: category
    TIPO_SOCIETARIO_EMISSOR: category
    TIPO_FUNDO_INVESTIMENTO: category
    ULTIMO_COMUNICADO: category
    DATA_COMUNICADO: date
    NR_PESSOA_FISICA: int
    QTD_PESSOA_FISICA: int
    NR_CLUBE_INVESTIMENTO: int
    QTD_CLUBE_INVESTIMENTO: int
    NR_FUNDOS_INVESTIMENTO: int
    QTD_FUNDOS_INVESTIMENTO: int
    NR_ENTIDADE_PREVIDENCIA_PRIVADA: int
    QTD_ENTIDADE_PREVIDENCIA_PRIVADA: int
    NR_COMPANHIA_SEGURADORA: int
    QTD_COMPANHIA_SEGURADORA: int
    NR_INVESTIDOR_ESTRANGEIRO: int
    QTD_INVESTIDOR_ESTRANGEIRO: int
    NR_INSTIT_INTERMED_PARTIC_CONSORCIO_DISTRIB: int
    QTD_INSTIT_INTERMED_PARTIC_CONSORCIO_DISTRIB: int
    NR_INSTIT_FINANC_EMISSORA_PARTIC_CONSORCIO: int
    QTD_INSTIT_FINANC_EMISSORA_PARTIC_CONSORCIO: int
    NR_DEMAIS_INSTIT_FINANC: int
    QTD_DEMAIS_INSTIT_FINANC: int
    NR_DEMAIS_PESSOA_JURIDICA_EMISSORA_PARTIC_CONSORCIO: int
    QTD_DEMAIS_PESSOA_JURIDICA_EMISSORA_PARTIC_CONSORCIO: int
    NR_DEMAIS_PESSOA_JURIDICA: int
    QTD_DEMAIS_PESSOA_JURIDICA: int
    NR_SOC_ADM_EMP_PROP_DEMAIS_PESS_JURID_EMISS_PARTIC_CONSORCIO: int
    QTD_SOC_ADM_EMP_PROP_DEMAIS_PESS_JURID_EMISS_PARTIC_CONSORCIO: int
    NR_OUTROS: int
    QTD_OUTROS: int
    QTD_CLI_PESSOA_FISICA: int
    QTD_CLI_PESSOA_JURIDICA: int
    QTD_CLI_PESSOA_JURIDICA_LIGADA_ADM: int
    QTD_CLI_DEMAIS_PESSOA_JURIDICA: int
    QTD_CLI_INVESTIDOR_ESTRANGEIRO: int
    QTD_CLI_SOC_ADM_EMP_PROP_DEMAIS_PESS_JURID_EMISS_PARTIC_CONSORCIO: int
    FILE_NAME: str
  df_read_params:
    sep: ';'
    encoding: latin-1
    on_bad_lines: skip
