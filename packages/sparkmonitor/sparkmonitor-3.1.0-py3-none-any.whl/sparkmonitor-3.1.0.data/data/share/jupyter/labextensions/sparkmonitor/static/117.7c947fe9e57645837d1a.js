"use strict";(self.webpackChunksparkmonitor=self.webpackChunksparkmonitor||[]).push([[117],{3265:(e,t,s)=>{s.d(t,{S:()=>o});var a=s(6029),n=s.n(a);class o extends n().Component{constructor(e){super(e),this.state={hasError:!1}}static getDerivedStateFromError(e){return{hasError:!0}}componentDidCatch(e,t){console.log("SparkMonitor: Caught react error:",e,t)}render(){return this.state.hasError?n().createElement("div",null,"Error: Something went wrong displaying this data."):this.props.children}}},2117:(e,t,s)=>{s.r(t),s.d(t,{default:()=>$});var a=s(1490),n=s(1497),o=s(4882),l=s(6029),i=s.n(l),r=s(7930);class c{constructor(e){this.notebookPanel=e,this.isReady=new r.PromiseDelegate,this.cellSlotMap={},this.cellReexecuted=!1,this.numCellsExecuted=0,this.lastBusySignal="",this.init()}async init(){await this.notebookPanel.revealed,this.notebook=this.notebookPanel.content,this.notebook.notebookConfig.recordTiming=!0,this.registerCells(),this.isReady.resolve(void 0)}registerMetadataChanges(e){if(!(e.id in this.cellSlotMap)){const t=()=>this.cellMetadataChanged(e);this.cellSlotMap[e.id]=t,e.metadataChanged.connect(t),this.cellMetadataChanged(e)}}deregisterMetadataChanges(e){const t=this.cellSlotMap[e.id];t&&e.metadataChanged.disconnect(t),delete this.cellSlotMap[e.id]}getCodeCellFromModel(e){return"code"===e.type?this.notebookPanel.content.widgets.find((t=>t.model===e)):null}cellMetadataChanged(e){const t=this.getCodeCellFromModel(e);if(t){const e=t.model.metadata.execution;e&&e["iopub.status.busy"]&&this.lastBusySignal!==e["iopub.status.busy"]&&(this.activeCell=t,this.cellReexecuted=this.lastExecutedCell===t,this.lastExecutedCell=t,this.numCellsExecuted+=1,this.lastBusySignal=e["iopub.status.busy"])}}registerCells(){const e=this.notebookPanel.context.model.cells;e.changed.connect(((e,t)=>{t.oldValues.forEach(this.deregisterMetadataChanges.bind(this)),t.newValues.forEach(this.registerMetadataChanges.bind(this))}));for(let t=0;t<e.length;t+=1)this.registerMetadataChanges(e.get(t))}getActiveCell(){return this.activeCell}getCellReexecuted(){return this.cellReexecuted}getNumCellsExecuted(){return this.numCellsExecuted}ready(){return this.isReady.promise}}var m=s(9687),d=s(2031);const u=(0,m.observer)((()=>{const e=(0,d.qL)(),t=(0,d.$q)(),s=e=>t.isCollapsed||t.view!==e?"":"tabbuttonactive",a="jobtabletabbuttonicon tabbutton "+s("jobs"),n="taskviewtabbuttonicon tabbutton "+s("taskchart"),o="timelinetabbuttonicon tabbutton "+s("timeline");return i().createElement("div",{className:"title"},i().createElement("div",{className:"titleleft"},i().createElement("span",{className:"tbitem titlecollapse ",onClick:()=>{t.toggleCollapseCellDisplay()}},i().createElement("span",{className:"headericon "+(t.isCollapsed?"headericoncollapsed":"")})),i().createElement("span",{className:"tbitem badgecontainer"},i().createElement("b",null," Apache Spark "),i().createElement("span",{className:"badgeexecutor"},i().createElement("span",{className:"badgeexecutorcount"},e.numExecutors)," ","EXECUTORS"),i().createElement("span",{className:"badgeexecutorcores"},i().createElement("span",{className:"badgeexecutorcorescount"},e.numTotalCores)," ","CORES"),i().createElement("b",null," Jobs "),i().createElement("span",{className:"badges"},t.numActiveJobs?i().createElement("span",{className:"badgerunning"},i().createElement("span",{className:"badgerunningcount"},t.numActiveJobs)," ","RUNNING"):"",t.numCompletedJobs?i().createElement("span",{className:"badgecompleted"},i().createElement("span",{className:"badgecompletedcount"},t.numCompletedJobs)," ","COMPLETED"):"",t.numFailedJobs?i().createElement("span",{className:"badgefailed"},i().createElement("span",{className:"badgefailedcount"},t.numFailedJobs)," ","FAILED"):""))),i().createElement("div",{className:"titleright"},i().createElement("div",{className:"tabbuttons"},i().createElement("span",{className:a,title:"Jobs",onClick:()=>{t.setView("jobs")}}),i().createElement("span",{className:n,title:"Tasks",onClick:()=>{t.setView("taskchart")}}),i().createElement("span",{className:o,title:"Event Timeline",onClick:()=>{t.setView("timeline")}}),i().createElement("span",{className:"closebuttonicon tabbutton",title:"Close Display",onClick:()=>{t.toggleHideCellDisplay()}}))))}));var h=s(18),g=s.n(h);const k=e=>i().createElement("div",{className:"tdjobitemprogress cssprogress"},i().createElement("div",{className:"data"},e.completed,"/",e.total,e.running>0?` (${e.running})`:""),i().createElement("span",{className:"val1",style:{width:1*e.completed/e.total*100+"%"}}),i().createElement("span",{className:"val2",style:{width:1*e.running/e.total*100+"%"}}));var b=s(2021),p=s.n(b),E=s(3265);const S=(0,m.observer)((e=>{var t;const s=(0,d.qL)().stages[e.stageId];return i().createElement("tr",{className:"stagerow"},i().createElement("td",{className:"tdstageid"},s.stageId),i().createElement("td",{className:"tdstagename"},s.name),i().createElement("td",{className:"tdstagestatus"},i().createElement("span",{className:s.status},s.status)),i().createElement("td",{className:"tdtasks"},i().createElement(k,{total:s.numTasks,running:s.numActiveTasks,completed:s.numCompletedTasks})),i().createElement("td",{className:"tdstagestarttime"},i().createElement(g(),{date:s.submissionTime,minPeriod:10})),i().createElement("td",{className:"tdstageduration"},s.completionTime?p()((null===(t=s.completionTime)||void 0===t?void 0:t.getTime())-s.submissionTime.getTime()):"-"))})),v=(0,m.observer)((e=>{const t=(0,d.qL)().jobs[e.jobId].uniqueStageIds.map((e=>i().createElement(S,{stageId:e,key:e})));return i().createElement("table",{className:"stagetable"},i().createElement("thead",null,i().createElement("tr",null,i().createElement("th",{className:"thstageid"},"ID"),i().createElement("th",{className:"thstagename"},"Stage"),i().createElement("th",{className:"thstagestatus"},"Status"),i().createElement("th",{className:"thstagetasks"},"Tasks"),i().createElement("th",{className:"thstagestart"},"Submission Time"),i().createElement("th",{className:"thstageduration"},"Duration"))),i().createElement("tbody",null,t))})),C=(0,m.observer)((e=>{var t;const s=(0,d.qL)(),a=null==s?void 0:s.jobs[e.jobId],[n,o]=i().useState(!0);return i().createElement(i().Fragment,null,i().createElement("tr",{className:"jobrow"},i().createElement("td",{className:"tdstagebutton",onClick:()=>{o((e=>!e))}},i().createElement("span",{className:"tdstageicon "+(n?"":"tdstageiconcollapsed")},i().createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"18",viewBox:"0 0 18 18"},i().createElement("g",{className:"jp-icon0",fill:"#616161",shapeRendering:"geometricPrecision"},i().createElement("path",{d:"M7.2,5.2L10.9,9l-3.8,3.8V5.2H7.2z"}))))),i().createElement("td",{className:"tdjobid"},a.jobId),i().createElement("td",{className:"tdjobname"},a.name),i().createElement("td",{className:"tdjobstatus"},i().createElement("span",{className:"tditemjobstatus "+a.status},a.status)),i().createElement("td",{className:"tdjobstages"},a.numCompletedStages,"/",a.numStages,a.numSkippedStages>0?`(${a.numSkippedStages} skipped)`:"",a.numActiveStages>0?`(${a.numActiveStages} active)`:""),i().createElement("td",{className:"tdtasks"},i().createElement(k,{total:a.numTasks,running:a.numActiveTasks,completed:a.numCompletedTasks})),i().createElement("td",{className:"tdjobstarttime"},i().createElement(g(),{date:a.startTime,minPeriod:10})),i().createElement("td",{className:"tdjobduration"},a.endTime?p()((null===(t=a.endTime)||void 0===t?void 0:t.getTime())-a.startTime.getTime()):"-")),!n&&i().createElement("tr",{className:"jobstagedatarow"},i().createElement("td",{className:"stagetableoffset"}),i().createElement("td",{colSpan:7,className:"stagedata"},i().createElement(v,{jobId:e.jobId}))))})),T=(0,m.observer)((()=>{const e=(0,d.$q)();return i().createElement(E.S,null,i().createElement("div",{className:"tabcontent"},i().createElement("table",{className:"jobtable"},i().createElement("thead",null,i().createElement("tr",null,i().createElement("th",{className:"thbutton"}),i().createElement("th",{className:"thjobid"},"ID"),i().createElement("th",{className:"thjobname"},"Job"),i().createElement("th",{className:"thjobstatus"},"Status"),i().createElement("th",{className:"thjobstages"},"Stages"),i().createElement("th",{className:"thjobtasks"},"Tasks"),i().createElement("th",{className:"thjobstart"},"Submission Time"),i().createElement("th",{className:"thjobtime"},"Duration"))),i().createElement("tbody",{className:"jobtablebody"},e.uniqueJobIds.map((e=>i().createElement(C,{jobId:e,key:e})))))))})),I=i().lazy((()=>Promise.all([s.e(68),s.e(397)]).then(s.bind(s,4566)))),N=()=>i().createElement(l.Suspense,{fallback:i().createElement("div",null,"loading")},i().createElement(I,null)),w=i().lazy((()=>s.e(99).then(s.bind(s,9446)))),D=()=>i().createElement(l.Suspense,{fallback:i().createElement("div",null,"loading")},i().createElement(w,null)),j=(0,m.observer)((()=>{var e;const t=(0,d.qL)(),s=(0,d.$q)();if(!s||(null===(e=null==s?void 0:s.uniqueJobIds)||void 0===e?void 0:e.length)<=0||s.isRemoved||(null==t?void 0:t.hideAllDisplays))return i().createElement("div",{className:"sparkMonitorCellRoot"});let a=i().createElement(i().Fragment,null);return s.isCollapsed||"jobs"!==(null==s?void 0:s.view)?s.isCollapsed||"taskchart"!==(null==s?void 0:s.view)?s.isCollapsed||"timeline"!==(null==s?void 0:s.view)||(a=i().createElement(N,null)):a=i().createElement(D,null):a=i().createElement(T,null),i().createElement("div",{className:"sparkMonitorCellRoot CellMonitor pm"},i().createElement(u,null),i().createElement("div",{className:"content"},a))})),A=(0,m.observer)((e=>i().createElement(d.ey.Provider,{value:d.h.notebooks[e.notebookId]},i().createElement(d.A0.Provider,{value:d.h.notebooks[e.notebookId].cells[e.cellId]},i().createElement(j,null)))));var x=s(6943);class f{constructor(e,t){var s,a,n;this.notebookPanel=e,this.notebookStore=t,this.cellExecCountSinceSparkJobStart=0,this.createCellReactElements(),this.currentCellTracker=new c(e),this.kernel=e.session?this.notebookPanel.session.kernel:null===(s=this.notebookPanel.sessionContext.session)||void 0===s?void 0:s.kernel,this.startComm(),null===(a=this.kernel)||void 0===a||a.statusChanged.connect(((e,t)=>{"starting"===t&&(this.currentCellTracker.cellReexecuted=!1,this.startComm())})),null===(n=this.notebookPanel.content.model)||void 0===n||n.cells.changed.connect(((e,s)=>{"remove"===s.type&&s.oldValues.forEach((e=>{t.onCellRemoved(e.id)}))}))}createCellReactElements(){const e=e=>{if("code"===e.type){const t=this.notebookPanel.content.widgets.find((t=>t.model===e));if(t&&!t.node.querySelector(".sparkMonitorCellRoot")){const s=x.ReactWidget.create(i().createElement(A,{notebookId:this.notebookPanel.id,cellId:e.id}));s.addClass("spark-monitor-cell-widget"),t.layout.insertWidget(2,s),t.update()}}},t=this.notebookPanel.context.model.cells;t.changed.connect(((t,s)=>{for(let s=0;s<t.length;s+=1)e(t.get(s))}));for(let s=0;s<t.length;s+=1)e(t.get(s))}toggleAll(){this.notebookStore.toggleHideAllDisplays()}startComm(){console.log("SparkMonitor: Starting Comm with kernel."),this.currentCellTracker.ready().then((()=>{var e;this.comm="createComm"in(this.kernel||{})?null===(e=this.kernel)||void 0===e?void 0:e.createComm("SparkMonitor"):this.kernel.connectToComm("SparkMonitor"),this.comm?(this.comm.open({msgtype:"openfromfrontend"}),this.comm.onMsg=e=>{this.handleMessage(e)},this.comm.onClose=e=>{},console.log("SparkMonitor: Connection with comms established")):console.warn("SparkMonitor: Unable to connect to comm")}))}onSparkJobStart(e){const t=this.currentCellTracker.getActiveCell();t?(this.currentCellTracker.getNumCellsExecuted()>this.cellExecCountSinceSparkJobStart&&(this.cellExecCountSinceSparkJobStart=this.currentCellTracker.getNumCellsExecuted(),this.notebookStore.onCellExecutedAgain(t.model.id)),this.notebookStore.onSparkJobStart(t.model.id,e)):console.warn("SparkMonitor: Job started with no running cell.")}onSparkStageSubmitted(e){const t=this.currentCellTracker.getActiveCell();t?this.notebookStore.onSparkStageSubmitted(t.model.id,e):console.warn("SparkMonitor: Stage started with no running cell.")}handleMessage(e){if(e.content.data.msgtype||console.warn("SparkMonitor: Unknown message"),"fromscala"===e.content.data.msgtype){const t=JSON.parse(e.content.data.msg);switch(t.msgtype){case"sparkJobStart":this.onSparkJobStart(t);break;case"sparkJobEnd":this.notebookStore.onSparkJobEnd(t);break;case"sparkStageSubmitted":this.onSparkStageSubmitted(t);break;case"sparkStageCompleted":this.notebookStore.onSparkStageCompleted(t);break;case"sparkStageActive":this.notebookStore.onSparkStageActive(t);break;case"sparkTaskStart":this.notebookStore.onSparkTaskStart(t);break;case"sparkTaskEnd":this.notebookStore.onSparkTaskEnd(t);break;case"sparkApplicationStart":this.notebookStore.onSparkApplicationStart(t);break;case"sparkApplicationEnd":break;case"sparkExecutorAdded":this.notebookStore.onSparkExecutorAdded(t);break;case"sparkExecutorRemoved":this.notebookStore.onSparkExecutorRemoved(t);break;default:console.warn("SparkMonitor: Unknown message")}}}}var y=s(3809);class q{constructor(){this.numActiveTasks=0,this.numCompletedTasks=0,this.numFailedTasks=0,(0,y.makeAutoObservable)(this)}}class J{get numActiveStages(){return this.uniqueStageIds.filter((e=>"PENDING"===this.notebookStore.stages[e].status)).length}get numCompletedStages(){return this.uniqueStageIds.filter((e=>"COMPLETED"===this.notebookStore.stages[e].status)).length}get numFailedStages(){return this.uniqueStageIds.filter((e=>"FAILED"===this.notebookStore.stages[e].status)).length}get numSkippedStages(){return this.uniqueStageIds.filter((e=>"SKIPPED"===this.notebookStore.stages[e].status)).length}constructor(e){this.notebookStore=e,this.status="RUNNING",this.name="unnamed",this.stageIds=[],this.uniqueStageIds=[],this.numStages=0,this.numTasks=0,this.numActiveTasks=0,this.numCompletedTasks=0,this.numFailedTasks=0,(0,y.makeAutoObservable)(this)}}class M{constructor(e){this.notebookStore=e,this.jobDataX=[],this.jobDataY=[],this.jobDataText=[],this.executorDataX=[],this.executorDataY=[],this.taskDataX=[],this.taskDataY=[],this.numActiveTasks=0}addExecutorData(e,t){this.executorDataX.push(e),this.executorDataY.push(t)}addTaskData(e,t){this.taskDataX.push(new Date(e).getTime()),this.taskDataY.push(t),this.addExecutorData(new Date(e).getTime(),this.notebookStore.numTotalCores||0)}onSparkJobStart(e){const t=new Date(e.submissionTime).getTime();this.jobDataX.push(t),this.jobDataY.push(0),this.jobDataText.push(`Job ${e.jobId} started`),this.addExecutorData(t,e.totalCores)}onSparkJobEnd(e){const t=new Date(e.completionTime).getTime();this.jobDataX.push(t),this.jobDataY.push(0),this.jobDataText.push(`Job ${e.jobId} ended`)}onSparkTaskStart(e){this.addTaskData(e.launchTime,this.numActiveTasks),this.numActiveTasks+=1,this.addTaskData(e.launchTime,this.numActiveTasks)}onSparkTaskEnd(e){this.addTaskData(e.finishTime,this.numActiveTasks),this.numActiveTasks-=1,this.addTaskData(e.finishTime,this.numActiveTasks)}}class R{constructor(e,t){this.cellId=e,this.notebookStore=t,this.view="jobs",this.isCollapsed=!1,this.isRemoved=!1,this.uniqueJobIds=[],(0,y.makeAutoObservable)(this),this.taskChartStore=new M(this.notebookStore)}toggleCollapseCellDisplay(){this.isCollapsed=!this.isCollapsed}toggleHideCellDisplay(){this.isRemoved=!this.isRemoved}setView(e){this.view=e,this.isCollapsed=!1,this.isRemoved=!1}get jobs(){return this.uniqueJobIds.map((e=>this.notebookStore.jobs[e]))}get numActiveJobs(){return this.jobs.filter((e=>"RUNNING"===e.status)).length}get numFailedJobs(){return this.jobs.filter((e=>"FAILED"===e.status)).length}get numCompletedJobs(){return this.jobs.filter((e=>"COMPLETED"===e.status)).length}get numTotalJobs(){return this.uniqueJobIds.length}}class P{constructor(e){this.notebookPanelId=e,this.uniqueId="default-key",this.hideAllDisplays=!1,this.cells={},this.jobs={},this.stages={},(0,y.makeAutoObservable)(this)}toggleHideAllDisplays(){this.hideAllDisplays=!this.hideAllDisplays}onSparkApplicationStart(e){this.applicationId=e.appId,this.applicationName=e.appName,this.applicationAttemptId=e.appAttemptId,this.uniqueId=`app${this.applicationId}-attempt${this.applicationAttemptId}`}deleteCellData(e){const t=this.cells[e];t&&(t.uniqueJobIds.forEach((e=>{const t=this.jobs[e];t&&(t.uniqueStageIds.forEach((e=>{this.stages[e]&&delete this.stages[e]})),delete this.jobs[e])})),delete this.cells[e])}onCellRemoved(e){this.deleteCellData(e)}onCellExecutedAgain(e){this.deleteCellData(e),this.cells[e]=new R(e,this)}onSparkJobStart(e,t){this.numTotalCores=t.totalCores,this.numExecutors=t.numExecutors;const s=new J(this);if(s.uniqueId=`${this.uniqueId}-job-${t.jobId}`,s.jobId=t.jobId,s.status=t.status,s.cellId=e,s.name=String(t.name).split(" ")[0],s.startTime=new Date(t.submissionTime),s.stageIds=t.stageIds,s.numStages=t.stageIds.length,s.numTasks=t.numTasks,t.stageIds.forEach((e=>{const a=`${this.uniqueId}-stage-${e}`;let n=this.stages[a];n||(n=new q,n.status="PENDING",this.stages[a]=n),n.uniqueJobId=s.uniqueId,n.numTasks=t.stageInfos[e].numTasks,n.name=t.stageInfos[e].name,s.uniqueStageIds.push(a)})),s.uniqueStageIds.sort(((e,t)=>e.localeCompare(t,void 0,{numeric:!0}))),"null"===s.name){const e=Math.max.apply(null,t.stageIds);s.name=this.stages[`${this.uniqueId}-stage-${e}`].name}this.cells[e]||(this.cells[e]=new R(e,this)),this.cells[e].uniqueJobIds.push(s.uniqueId),s.cell=this.cells[e],s.cell.taskChartStore.onSparkJobStart(t),this.jobs[s.uniqueId]=s}onSparkJobEnd(e){var t;const s=`${this.uniqueId}-job-${e.jobId}`,a=this.jobs[s];a?(a.status=e.status,a.endTime=new Date(e.completionTime),a.uniqueStageIds.forEach((e=>{var t;"PENDING"===(null===(t=this.stages[e])||void 0===t?void 0:t.status)&&(this.stages[e].status="SKIPPED",a.numTasks-=this.stages[e].numTasks)})),null===(t=a.cell)||void 0===t||t.taskChartStore.onSparkJobEnd(e)):console.warn("SparkMonitor: Could not identify job")}onSparkStageSubmitted(e,t){const s=-1===t.submissionTime?new Date:new Date(t.submissionTime),a=`${this.uniqueId}-stage-${t.stageId}`;this.stages[a]||(this.stages[a]=new q,this.stages[a].uniqueId=a);const n=this.stages[a];n.cellId=e,n.stageId=t.stageId,n.status="RUNNING",n.name=String(t.name).split(" ")[0],n.submissionTime=s,n.numTasks=t.numTasks}onSparkStageCompleted(e){const t=`${this.uniqueId}-stage-${e.stageId}`,s=this.stages[t];if(s){s.status=e.status,s.completionTime=new Date(e.completionTime),s.submissionTime=new Date(e.submissionTime),s.numActiveTasks=0,s.numCompletedTasks=e.numCompletedTasks,s.numFailedTasks=e.numFailedTasks,s.numTasks=e.numTasks;const t=this.jobs[s.uniqueJobId];t&&(t.numActiveTasks=0,t.numCompletedTasks=0,t.numFailedTasks=0,t.numTasks=0,t.uniqueStageIds.forEach((e=>{var s,a,n,o;t.numActiveTasks+=(null===(s=this.stages[e])||void 0===s?void 0:s.numActiveTasks)||0,t.numCompletedTasks+=(null===(a=this.stages[e])||void 0===a?void 0:a.numCompletedTasks)||0,t.numFailedTasks+=(null===(n=this.stages[e])||void 0===n?void 0:n.numFailedTasks)||0,t.numTasks+=(null===(o=this.stages[e])||void 0===o?void 0:o.numTasks)||0})))}else console.warn("SparkMonitor: Unable to identify stage")}onSparkExecutorAdded(e){this.numTotalCores=e.totalCores,this.numExecutors||(this.numExecutors=0),this.numExecutors+=1}onSparkExecutorRemoved(e){this.numTotalCores=e.totalCores,this.numExecutors||(this.numExecutors=0),this.numExecutors-=1}onSparkTaskStart(e){var t;const s=`${this.uniqueId}-stage-${e.stageId}`,a=this.stages[s];if(a){const s=a.uniqueJobId,n=this.jobs[s];n&&(null===(t=n.cell)||void 0===t||t.taskChartStore.onSparkTaskStart(e))}}onSparkTaskEnd(e){var t;const s=`${this.uniqueId}-stage-${e.stageId}`,a=this.stages[s];if(a){const s=a.uniqueJobId,n=this.jobs[s];n&&(null===(t=n.cell)||void 0===t||t.taskChartStore.onSparkTaskEnd(e))}}onSparkStageActive(e){const t=`${this.uniqueId}-stage-${e.stageId}`,s=this.stages[t];if(s&&"RUNNING"===s.status){s.numActiveTasks=e.numActiveTasks,s.numCompletedTasks=e.numCompletedTasks,s.numFailedTasks=e.numFailedTasks;const t=this.jobs[s.uniqueJobId];t&&(t.numActiveTasks=0,t.numCompletedTasks=0,t.numFailedTasks=0,t.numTasks=0,t.uniqueStageIds.forEach((e=>{var s,a,n,o;t.numActiveTasks+=(null===(s=this.stages[e])||void 0===s?void 0:s.numActiveTasks)||0,t.numCompletedTasks+=(null===(a=this.stages[e])||void 0===a?void 0:a.numCompletedTasks)||0,t.numFailedTasks+=(null===(n=this.stages[e])||void 0===n?void 0:n.numFailedTasks)||0,t.numTasks+=(null===(o=this.stages[e])||void 0===o?void 0:o.numTasks)||0})))}}}const $={id:"jupyterlab_sparkmonitor",autoStart:!0,requires:[a.INotebookTracker,n.IMainMenu],activate(e,t,s){let a;console.log("JupyterLab SparkMonitor is activated!"),t.widgetAdded.connect((async(e,t)=>{var s;let n,o,l=d.h.notebooks[t.id];if(l||(l=new P(t.id),d.h.notebooks[t.id]=l),t.session)await t.session.ready,n=t.session.kernel,await n.ready,o=n.info;else{const{sessionContext:e}=t;await e.ready,n=null===(s=e.session)||void 0===s?void 0:s.kernel,o=await(null==n?void 0:n.info)}"python"===o.language_info.name&&(a=new f(t,l),console.log("Notebook kernel ready"),a.startComm())}));const n="toggle-monitor";let l=!1;e.commands.addCommand(n,{label:"Hide Spark Monitoring",isEnabled:()=>!0,isVisible:()=>!0,isToggled:()=>l,execute:()=>{console.log(`Executed ${n}`),l=!l,null==a||a.toggleAll()}});const i=new o.Menu({commands:e.commands});i.title.label="Spark",i.addItem({command:n,args:{}}),s.addMenu(i,!1,{rank:40})}}},2031:(e,t,s)=>{s.d(t,{$q:()=>m,A0:()=>r,ey:()=>i,h:()=>l,qL:()=>c});var a=s(6029),n=s.n(a),o=s(3809);const l=new class{constructor(){this.notebooks={},(0,o.makeAutoObservable)(this)}},i=(n().createContext(l),n().createContext(void 0)),r=n().createContext(void 0),c=()=>n().useContext(i),m=()=>n().useContext(r)}}]);