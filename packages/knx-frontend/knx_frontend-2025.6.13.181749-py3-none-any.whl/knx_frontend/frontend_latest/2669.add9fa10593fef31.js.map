{"version":3,"file":"2669.add9fa10593fef31.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/common/datetime/first_weekday.ts","webpack://knx-frontend/./homeassistant-frontend/src/common/datetime/relative_time.ts","webpack://knx-frontend/./homeassistant-frontend/src/common/util/select-unit.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-card.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-icon-overflow-menu.ts","webpack://knx-frontend/./homeassistant-frontend/src/components/ha-tooltip.ts","webpack://knx-frontend/./homeassistant-frontend/src/data/translation.ts","webpack://knx-frontend/../../src/utils.ts","webpack://knx-frontend/../../src/compare.ts","webpack://knx-frontend/../../src/compareVersions.ts","webpack://knx-frontend/./src/components/knx-project-tree-view.ts","webpack://knx-frontend/./src/utils/format.ts","webpack://knx-frontend/./src/views/project_view.ts"],"sourcesContent":["import { getWeekStartByLocale } from \"weekstart\";\nimport type { FrontendLocaleData } from \"../../data/translation\";\nimport { FirstWeekday } from \"../../data/translation\";\n\nexport const weekdays = [\n  \"sunday\",\n  \"monday\",\n  \"tuesday\",\n  \"wednesday\",\n  \"thursday\",\n  \"friday\",\n  \"saturday\",\n] as const;\n\ntype WeekdayIndex = 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\nexport const firstWeekdayIndex = (locale: FrontendLocaleData): WeekdayIndex => {\n  if (locale.first_weekday === FirstWeekday.language) {\n    // @ts-ignore\n    if (\"weekInfo\" in Intl.Locale.prototype) {\n      // @ts-ignore\n      return new Intl.Locale(locale.language).weekInfo.firstDay % 7;\n    }\n    return (getWeekStartByLocale(locale.language) % 7) as WeekdayIndex;\n  }\n  return weekdays.includes(locale.first_weekday)\n    ? (weekdays.indexOf(locale.first_weekday) as WeekdayIndex)\n    : 1;\n};\n\nexport const firstWeekday = (locale: FrontendLocaleData) => {\n  const index = firstWeekdayIndex(locale);\n  return weekdays[index];\n};\n","import memoizeOne from \"memoize-one\";\nimport type { FrontendLocaleData } from \"../../data/translation\";\nimport { selectUnit } from \"../util/select-unit\";\n\nconst formatRelTimeMem = memoizeOne(\n  (locale: FrontendLocaleData) =>\n    new Intl.RelativeTimeFormat(locale.language, { numeric: \"auto\" })\n);\n\nexport const relativeTime = (\n  from: Date,\n  locale: FrontendLocaleData,\n  to?: Date,\n  includeTense = true\n): string => {\n  const diff = selectUnit(from, to, locale);\n  if (includeTense) {\n    return formatRelTimeMem(locale).format(diff.value, diff.unit);\n  }\n  return Intl.NumberFormat(locale.language, {\n    style: \"unit\",\n    unit: diff.unit,\n    unitDisplay: \"long\",\n  }).format(Math.abs(diff.value));\n};\n","import { differenceInDays, differenceInWeeks, startOfWeek } from \"date-fns\";\nimport type { FrontendLocaleData } from \"../../data/translation\";\nimport { firstWeekdayIndex } from \"../datetime/first_weekday\";\n\nexport type Unit =\n  | \"second\"\n  | \"minute\"\n  | \"hour\"\n  | \"day\"\n  | \"week\"\n  | \"month\"\n  | \"quarter\"\n  | \"year\";\n\nconst MS_PER_SECOND = 1e3;\nconst SECS_PER_MIN = 60;\nconst SECS_PER_HOUR = SECS_PER_MIN * 60;\n\n// Adapted from https://github.com/formatjs/formatjs/blob/186cef62f980ec66252ee232f438a42d0b51b9f9/packages/intl-utils/src/diff.ts\nexport function selectUnit(\n  from: Date | number,\n  // eslint-disable-next-line default-param-last\n  to: Date | number = Date.now(),\n  locale: FrontendLocaleData,\n  thresholds: Partial<Thresholds> = {}\n): { value: number; unit: Unit } {\n  const resolvedThresholds: Thresholds = {\n    ...DEFAULT_THRESHOLDS,\n    ...(thresholds || {}),\n  };\n\n  const secs = (+from - +to) / MS_PER_SECOND;\n  if (Math.abs(secs) < resolvedThresholds.second) {\n    return {\n      value: Math.round(secs),\n      unit: \"second\",\n    };\n  }\n\n  const mins = secs / SECS_PER_MIN;\n  if (Math.abs(mins) < resolvedThresholds.minute) {\n    return {\n      value: Math.round(mins),\n      unit: \"minute\",\n    };\n  }\n\n  const hours = secs / SECS_PER_HOUR;\n  if (Math.abs(hours) < resolvedThresholds.hour) {\n    return {\n      value: Math.round(hours),\n      unit: \"hour\",\n    };\n  }\n\n  const fromDate = new Date(from);\n  const toDate = new Date(to);\n\n  // Set time component to zero, which allows us to compare only the days\n  fromDate.setHours(0, 0, 0, 0);\n  toDate.setHours(0, 0, 0, 0);\n\n  const days = differenceInDays(fromDate, toDate);\n  if (days === 0) {\n    return {\n      value: Math.round(hours),\n      unit: \"hour\",\n    };\n  }\n  if (Math.abs(days) < resolvedThresholds.day) {\n    return {\n      value: days,\n      unit: \"day\",\n    };\n  }\n\n  const firstWeekday = firstWeekdayIndex(locale);\n  const fromWeek = startOfWeek(fromDate, { weekStartsOn: firstWeekday });\n  const toWeek = startOfWeek(toDate, { weekStartsOn: firstWeekday });\n\n  const weeks = differenceInWeeks(fromWeek, toWeek);\n  if (weeks === 0) {\n    return {\n      value: days,\n      unit: \"day\",\n    };\n  }\n  if (Math.abs(weeks) < resolvedThresholds.week) {\n    return {\n      value: weeks,\n      unit: \"week\",\n    };\n  }\n\n  const years = fromDate.getFullYear() - toDate.getFullYear();\n  const months = years * 12 + fromDate.getMonth() - toDate.getMonth();\n  if (months === 0) {\n    return {\n      value: weeks,\n      unit: \"week\",\n    };\n  }\n  if (Math.abs(months) < resolvedThresholds.month || years === 0) {\n    return {\n      value: months,\n      unit: \"month\",\n    };\n  }\n\n  return {\n    value: Math.round(years),\n    unit: \"year\",\n  };\n}\n\ntype Thresholds = Record<\n  \"second\" | \"minute\" | \"hour\" | \"day\" | \"week\" | \"month\",\n  number\n>;\n\nexport const DEFAULT_THRESHOLDS: Thresholds = {\n  second: 45, // seconds to minute\n  minute: 45, // minutes to hour\n  hour: 22, // hour to day\n  day: 5, // day to week\n  week: 4, // week to months\n  month: 11, // month to years\n};\n","import { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\n\n@customElement(\"ha-card\")\nexport class HaCard extends LitElement {\n  @property() public header?: string;\n\n  @property({ type: Boolean, reflect: true }) public raised = false;\n\n  static styles = css`\n    :host {\n      background: var(\n        --ha-card-background,\n        var(--card-background-color, white)\n      );\n      -webkit-backdrop-filter: var(--ha-card-backdrop-filter, none);\n      backdrop-filter: var(--ha-card-backdrop-filter, none);\n      box-shadow: var(--ha-card-box-shadow, none);\n      box-sizing: border-box;\n      border-radius: var(--ha-card-border-radius, 12px);\n      border-width: var(--ha-card-border-width, 1px);\n      border-style: solid;\n      border-color: var(--ha-card-border-color, var(--divider-color, #e0e0e0));\n      color: var(--primary-text-color);\n      display: block;\n      transition: all 0.3s ease-out;\n      position: relative;\n    }\n\n    :host([raised]) {\n      border: none;\n      box-shadow: var(\n        --ha-card-box-shadow,\n        0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n        0px 1px 1px 0px rgba(0, 0, 0, 0.14),\n        0px 1px 3px 0px rgba(0, 0, 0, 0.12)\n      );\n    }\n\n    .card-header,\n    :host ::slotted(.card-header) {\n      color: var(--ha-card-header-color, var(--primary-text-color));\n      font-family: var(--ha-card-header-font-family, inherit);\n      font-size: var(--ha-card-header-font-size, var(--ha-font-size-2xl));\n      letter-spacing: -0.012em;\n      line-height: var(--ha-line-height-expanded);\n      padding: 12px 16px 16px;\n      display: block;\n      margin-block-start: 0px;\n      margin-block-end: 0px;\n      font-weight: var(--ha-font-weight-normal);\n    }\n\n    :host ::slotted(.card-content:not(:first-child)),\n    slot:not(:first-child)::slotted(.card-content) {\n      padding-top: 0px;\n      margin-top: -8px;\n    }\n\n    :host ::slotted(.card-content) {\n      padding: 16px;\n    }\n\n    :host ::slotted(.card-actions) {\n      border-top: 1px solid var(--divider-color, #e8e8e8);\n      padding: 5px 16px;\n    }\n  `;\n\n  protected render() {\n    return html`\n      ${this.header\n        ? html`<h1 class=\"card-header\">${this.header}</h1>`\n        : nothing}\n      <slot></slot>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-card\": HaCard;\n  }\n}\n","import { mdiDotsVertical } from \"@mdi/js\";\nimport type { TemplateResult } from \"lit\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport { haStyle } from \"../resources/styles\";\nimport type { HomeAssistant } from \"../types\";\nimport \"./ha-md-button-menu\";\nimport \"./ha-icon-button\";\nimport \"./ha-svg-icon\";\nimport \"./ha-tooltip\";\nimport \"./ha-md-menu-item\";\nimport \"./ha-md-divider\";\n\nexport interface IconOverflowMenuItem {\n  [key: string]: any;\n  path: string;\n  label: string;\n  narrowOnly?: boolean;\n  disabled?: boolean;\n  tooltip?: string;\n  action: () => any;\n  warning?: boolean;\n  divider?: boolean;\n}\n\n@customElement(\"ha-icon-overflow-menu\")\nexport class HaIconOverflowMenu extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Array }) public items: IconOverflowMenuItem[] = [];\n\n  @property({ type: Boolean }) public narrow = false;\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.narrow\n        ? html` <!-- Collapsed representation for small screens -->\n            <ha-md-button-menu\n              @click=${this._handleIconOverflowMenuOpened}\n              positioning=\"popover\"\n            >\n              <ha-icon-button\n                .label=${this.hass.localize(\"ui.common.overflow_menu\")}\n                .path=${mdiDotsVertical}\n                slot=\"trigger\"\n              ></ha-icon-button>\n\n              ${this.items.map((item) =>\n                item.divider\n                  ? html`<ha-md-divider\n                      role=\"separator\"\n                      tabindex=\"-1\"\n                    ></ha-md-divider>`\n                  : html`<ha-md-menu-item\n                      ?disabled=${item.disabled}\n                      .clickAction=${item.action}\n                      class=${classMap({ warning: Boolean(item.warning) })}\n                    >\n                      <ha-svg-icon\n                        slot=\"start\"\n                        class=${classMap({ warning: Boolean(item.warning) })}\n                        .path=${item.path}\n                      ></ha-svg-icon>\n                      ${item.label}\n                    </ha-md-menu-item> `\n              )}\n            </ha-md-button-menu>`\n        : html`\n            <!-- Icon representation for big screens -->\n            ${this.items.map((item) =>\n              item.narrowOnly\n                ? nothing\n                : item.divider\n                  ? html`<div role=\"separator\"></div>`\n                  : html`<ha-tooltip\n                      .disabled=${!item.tooltip}\n                      .content=${item.tooltip ?? \"\"}\n                    >\n                      <ha-icon-button\n                        @click=${item.action}\n                        .label=${item.label}\n                        .path=${item.path}\n                        ?disabled=${item.disabled}\n                      ></ha-icon-button>\n                    </ha-tooltip>`\n            )}\n          `}\n    `;\n  }\n\n  protected _handleIconOverflowMenuOpened(e) {\n    e.stopPropagation();\n  }\n\n  static get styles() {\n    return [\n      haStyle,\n      css`\n        :host {\n          display: flex;\n          justify-content: flex-end;\n        }\n        div[role=\"separator\"] {\n          border-right: 1px solid var(--divider-color);\n          width: 1px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon-overflow-menu\": HaIconOverflowMenu;\n  }\n}\n","import SlTooltip from \"@shoelace-style/shoelace/dist/components/tooltip/tooltip.component\";\nimport styles from \"@shoelace-style/shoelace/dist/components/tooltip/tooltip.styles\";\nimport { css } from \"lit\";\nimport { customElement } from \"lit/decorators\";\nimport { setDefaultAnimation } from \"@shoelace-style/shoelace/dist/utilities/animation-registry\";\n\nsetDefaultAnimation(\"tooltip.show\", {\n  keyframes: [{ opacity: 0 }, { opacity: 1 }],\n  options: { duration: 150, easing: \"ease\" },\n});\n\nsetDefaultAnimation(\"tooltip.hide\", {\n  keyframes: [{ opacity: 1 }, { opacity: 0 }],\n  options: { duration: 400, easing: \"ease\" },\n});\n\n@customElement(\"ha-tooltip\")\nexport class HaTooltip extends SlTooltip {\n  static override styles = [\n    styles,\n    css`\n      :host {\n        --sl-tooltip-background-color: var(--secondary-background-color);\n        --sl-tooltip-color: var(--primary-text-color);\n        --sl-tooltip-font-family: var(\n          --ha-tooltip-font-family,\n          var(--ha-font-family-body)\n        );\n        --sl-tooltip-font-size: var(\n          --ha-tooltip-font-size,\n          var(--ha-font-size-s)\n        );\n        --sl-tooltip-font-weight: var(\n          --ha-tooltip-font-weight,\n          var(--ha-font-weight-normal)\n        );\n        --sl-tooltip-line-height: var(\n          --ha-tooltip-line-height,\n          var(--ha-line-height-condensed)\n        );\n        --sl-tooltip-padding: 8px;\n        --sl-tooltip-border-radius: var(--ha-tooltip-border-radius, 4px);\n        --sl-tooltip-arrow-size: var(--ha-tooltip-arrow-size, 8px);\n        --sl-z-index-tooltip: var(--ha-tooltip-z-index, 1000);\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-tooltip\": HaTooltip;\n  }\n}\n","import type { HomeAssistant } from \"../types\";\nimport { saveFrontendUserData, subscribeFrontendUserData } from \"./frontend\";\n\nexport enum NumberFormat {\n  language = \"language\",\n  system = \"system\",\n  comma_decimal = \"comma_decimal\",\n  decimal_comma = \"decimal_comma\",\n  space_comma = \"space_comma\",\n  none = \"none\",\n}\n\nexport enum TimeFormat {\n  language = \"language\",\n  system = \"system\",\n  am_pm = \"12\",\n  twenty_four = \"24\",\n}\n\nexport enum TimeZone {\n  local = \"local\",\n  server = \"server\",\n}\n\nexport enum DateFormat {\n  language = \"language\",\n  system = \"system\",\n  DMY = \"DMY\",\n  MDY = \"MDY\",\n  YMD = \"YMD\",\n}\n\nexport enum FirstWeekday {\n  language = \"language\",\n  monday = \"monday\",\n  tuesday = \"tuesday\",\n  wednesday = \"wednesday\",\n  thursday = \"thursday\",\n  friday = \"friday\",\n  saturday = \"saturday\",\n  sunday = \"sunday\",\n}\n\nexport interface FrontendLocaleData {\n  language: string;\n  number_format: NumberFormat;\n  time_format: TimeFormat;\n  date_format: DateFormat;\n  first_weekday: FirstWeekday;\n  time_zone: TimeZone;\n}\n\ndeclare global {\n  interface FrontendUserData {\n    language: FrontendLocaleData;\n  }\n}\n\nexport type TranslationCategory =\n  | \"title\"\n  | \"state\"\n  | \"entity\"\n  | \"entity_component\"\n  | \"exceptions\"\n  | \"config\"\n  | \"config_subentries\"\n  | \"config_panel\"\n  | \"options\"\n  | \"device_automation\"\n  | \"mfa_setup\"\n  | \"system_health\"\n  | \"application_credentials\"\n  | \"issues\"\n  | \"selector\"\n  | \"services\";\n\nexport const subscribeTranslationPreferences = (\n  hass: HomeAssistant,\n  callback: (data: { value: FrontendLocaleData | null }) => void\n) => subscribeFrontendUserData(hass.connection, \"language\", callback);\n\nexport const saveTranslationPreferences = (\n  hass: HomeAssistant,\n  data: FrontendLocaleData\n) => saveFrontendUserData(hass.connection, \"language\", data);\n\nexport const getHassTranslations = async (\n  hass: HomeAssistant,\n  language: string,\n  category: TranslationCategory,\n  integration?: string | string[],\n  config_flow?: boolean\n): Promise<Record<string, unknown>> => {\n  const result = await hass.callWS<{ resources: Record<string, unknown> }>({\n    type: \"frontend/get_translations\",\n    language,\n    category,\n    integration,\n    config_flow,\n  });\n  return result.resources;\n};\n\nexport const getHassTranslationsPre109 = async (\n  hass: HomeAssistant,\n  language: string\n): Promise<Record<string, unknown>> => {\n  const result = await hass.callWS<{ resources: Record<string, unknown> }>({\n    type: \"frontend/get_translations\",\n    language,\n  });\n  return result.resources;\n};\n","","","","import type { TemplateResult } from \"lit\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\n\nimport { fireEvent } from \"@ha/common/dom/fire_event\";\n\nimport type { GroupRange, KNXProject } from \"../types/websocket\";\nimport { KNXLogger } from \"../tools/knx-logger\";\n\nconst logger = new KNXLogger(\"knx-project-tree-view\");\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"knx-group-range-selection-changed\": GroupRangeSelectionChangedEvent;\n  }\n}\n\nexport interface GroupRangeSelectionChangedEvent {\n  groupAddresses: string[];\n}\n\ninterface RangeInfo {\n  selected: boolean;\n  groupAddresses: string[];\n}\n\n@customElement(\"knx-project-tree-view\")\nexport class KNXProjectTreeView extends LitElement {\n  @property({ attribute: false }) data!: KNXProject;\n\n  @property({ attribute: false }) multiselect = false;\n\n  @state() private _selectableRanges: Record<string, RangeInfo> = {};\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    const initSelectableRanges = (data: Record<string, GroupRange>) => {\n      Object.entries(data).forEach(([key, groupRange]) => {\n        if (groupRange.group_addresses.length > 0) {\n          this._selectableRanges[key] = {\n            selected: false,\n            groupAddresses: groupRange.group_addresses,\n          };\n        }\n        initSelectableRanges(groupRange.group_ranges);\n      });\n    };\n    initSelectableRanges(this.data.group_ranges);\n    logger.debug(\"ranges\", this._selectableRanges);\n  }\n\n  protected render(): TemplateResult {\n    return html`<div class=\"ha-tree-view\">${this._recurseData(this.data.group_ranges)}</div>`;\n  }\n\n  protected _recurseData(data: Record<string, GroupRange>, level = 0): TemplateResult {\n    const childTemplates = Object.entries(data).map(([key, groupRange]) => {\n      const hasSubRange = Object.keys(groupRange.group_ranges).length > 0;\n      const empty = !(hasSubRange || groupRange.group_addresses.length > 0);\n      if (empty) {\n        return nothing;\n      }\n      const selectable = key in this._selectableRanges;\n      const selected = selectable ? this._selectableRanges[key].selected : false;\n      const rangeClasses = {\n        \"range-item\": true,\n        \"root-range\": level === 0,\n        \"sub-range\": level > 0,\n        selectable: selectable,\n        \"selected-range\": selected,\n        \"non-selected-range\": selectable && !selected,\n      };\n      const rangeContent = html`<div\n        class=${classMap(rangeClasses)}\n        toggle-range=${selectable ? key : nothing}\n        @click=${selectable\n          ? this.multiselect\n            ? this._selectionChangedMulti\n            : this._selectionChangedSingle\n          : nothing}\n      >\n        <span class=\"range-key\">${key}</span>\n        <span class=\"range-text\">${groupRange.name}</span>\n      </div>`;\n\n      if (hasSubRange) {\n        const groupClasses = {\n          \"root-group\": level === 0,\n          \"sub-group\": level !== 0,\n        };\n        return html`<div class=${classMap(groupClasses)}>\n          ${rangeContent} ${this._recurseData(groupRange.group_ranges, level + 1)}\n        </div>`;\n      }\n\n      return html`${rangeContent}`;\n    });\n    return html`${childTemplates}`;\n  }\n\n  private _selectionChangedMulti(ev) {\n    const rangeKey = (ev.target as Element).getAttribute(\"toggle-range\")!;\n    this._selectableRanges[rangeKey].selected = !this._selectableRanges[rangeKey].selected;\n    this._selectionUpdate();\n    this.requestUpdate();\n  }\n\n  private _selectionChangedSingle(ev) {\n    const rangeKey = (ev.target as Element).getAttribute(\"toggle-range\")!;\n    const rangePreviouslySelected = this._selectableRanges[rangeKey].selected;\n    Object.values(this._selectableRanges).forEach((rangeInfo) => {\n      rangeInfo.selected = false;\n    });\n    this._selectableRanges[rangeKey].selected = !rangePreviouslySelected;\n    this._selectionUpdate();\n    this.requestUpdate();\n  }\n\n  private _selectionUpdate() {\n    const _gaOfSelectedRanges = Object.values(this._selectableRanges).reduce(\n      (result, rangeInfo) =>\n        rangeInfo.selected ? result.concat(rangeInfo.groupAddresses) : result,\n      [] as string[],\n    );\n    logger.debug(\"selection changed\", _gaOfSelectedRanges);\n    fireEvent(this, \"knx-group-range-selection-changed\", { groupAddresses: _gaOfSelectedRanges });\n  }\n\n  static styles = css`\n    :host {\n      margin: 0;\n      height: 100%;\n      overflow-y: scroll;\n      overflow-x: hidden;\n      background-color: var(--card-background-color);\n    }\n\n    .ha-tree-view {\n      cursor: default;\n    }\n\n    .root-group {\n      margin-bottom: 8px;\n    }\n\n    .root-group > * {\n      padding-top: 5px;\n      padding-bottom: 5px;\n    }\n\n    .range-item {\n      display: block;\n      overflow: hidden;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n      font-size: 0.875rem;\n    }\n\n    .range-item > * {\n      vertical-align: middle;\n      pointer-events: none;\n    }\n\n    .range-key {\n      color: var(--text-primary-color);\n      font-size: 0.75rem;\n      font-weight: 700;\n      background-color: var(--label-badge-grey);\n      border-radius: 4px;\n      padding: 1px 4px;\n      margin-right: 2px;\n    }\n\n    .root-range {\n      padding-left: 8px;\n      font-weight: 500;\n      background-color: var(--secondary-background-color);\n\n      & .range-key {\n        color: var(--primary-text-color);\n        background-color: var(--card-background-color);\n      }\n    }\n\n    .sub-range {\n      padding-left: 13px;\n    }\n\n    .selectable {\n      cursor: pointer;\n    }\n\n    .selectable:hover {\n      background-color: rgba(var(--rgb-primary-text-color), 0.04);\n    }\n\n    .selected-range {\n      background-color: rgba(var(--rgb-primary-color), 0.12);\n\n      & .range-key {\n        background-color: var(--primary-color);\n      }\n    }\n\n    .selected-range:hover {\n      background-color: rgba(var(--rgb-primary-color), 0.07);\n    }\n\n    .non-selected-range {\n      background-color: var(--card-background-color);\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"knx-project-tree-view\": KNXProjectTreeView;\n  }\n}\n","import { dump } from \"js-yaml\";\nimport type { DPT, TelegramDict } from \"../types/websocket\";\n\nexport const TelegramDictFormatter = {\n  payload: (telegram: TelegramDict): string => {\n    if (telegram.payload == null) return \"\";\n    return Array.isArray(telegram.payload)\n      ? telegram.payload.reduce((res, curr) => res + curr.toString(16).padStart(2, \"0\"), \"0x\")\n      : telegram.payload.toString();\n  },\n\n  valueWithUnit: (telegram: TelegramDict): string => {\n    if (telegram.value == null) return \"\";\n    if (\n      typeof telegram.value === \"number\" ||\n      typeof telegram.value === \"boolean\" ||\n      typeof telegram.value === \"string\"\n    ) {\n      return telegram.value.toString() + (telegram.unit ? \" \" + telegram.unit : \"\");\n    }\n    return dump(telegram.value);\n  },\n\n  timeWithMilliseconds: (telegram: TelegramDict): string => {\n    const date = new Date(telegram.timestamp);\n    return date.toLocaleTimeString([\"en-US\"], {\n      hour12: false,\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n      fractionalSecondDigits: 3,\n    });\n  },\n\n  dateWithMilliseconds: (telegram: TelegramDict): string => {\n    const date = new Date(telegram.timestamp);\n    return date.toLocaleTimeString([], {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n      fractionalSecondDigits: 3,\n    });\n  },\n\n  dptNumber: (telegram: TelegramDict): string => {\n    if (telegram.dpt_main == null) return \"\";\n    return telegram.dpt_sub == null\n      ? telegram.dpt_main.toString()\n      : telegram.dpt_main.toString() + \".\" + telegram.dpt_sub.toString().padStart(3, \"0\");\n  },\n\n  dptNameNumber: (telegram: TelegramDict): string => {\n    const dptNumber = TelegramDictFormatter.dptNumber(telegram);\n    if (telegram.dpt_name == null) return `DPT ${dptNumber}`;\n    return dptNumber ? `DPT ${dptNumber} ${telegram.dpt_name}` : telegram.dpt_name;\n  },\n};\n\nexport const dptToString = (dpt: DPT | null): string => {\n  if (dpt == null) return \"\";\n  return dpt.main + (dpt.sub ? \".\" + dpt.sub.toString().padStart(3, \"0\") : \"\");\n};\n","import { mdiFilterVariant, mdiPlus } from \"@mdi/js\";\nimport type { TemplateResult } from \"lit\";\nimport { LitElement, html, css, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\n\nimport memoize from \"memoize-one\";\n\nimport type { HASSDomEvent } from \"@ha/common/dom/fire_event\";\nimport { navigate } from \"@ha/common/navigate\";\nimport \"@ha/layouts/hass-loading-screen\";\nimport \"@ha/layouts/hass-tabs-subpage\";\nimport type { PageNavigation } from \"@ha/layouts/hass-tabs-subpage\";\nimport \"@ha/components/ha-card\";\nimport \"@ha/components/ha-icon-button\";\nimport \"@ha/components/ha-icon-overflow-menu\";\nimport \"@ha/components/data-table/ha-data-table\";\nimport type { DataTableColumnContainer } from \"@ha/components/data-table/ha-data-table\";\nimport type { IconOverflowMenuItem } from \"@ha/components/ha-icon-overflow-menu\";\nimport { relativeTime } from \"@ha/common/datetime/relative_time\";\n\nimport \"../components/knx-project-tree-view\";\n\nimport { compare } from \"compare-versions\";\n\nimport type { HomeAssistant, Route } from \"@ha/types\";\nimport type { KNX } from \"../types/knx\";\nimport type { GroupRangeSelectionChangedEvent } from \"../components/knx-project-tree-view\";\nimport { subscribeKnxTelegrams, getGroupTelegrams } from \"../services/websocket.service\";\nimport type { GroupAddress, TelegramDict } from \"../types/websocket\";\nimport { KNXLogger } from \"../tools/knx-logger\";\nimport { TelegramDictFormatter } from \"../utils/format\";\n\nconst logger = new KNXLogger(\"knx-project-view\");\n// Minimum XKNXProject Version needed which was used for parsing the ETS Project\nconst MIN_XKNXPROJECT_VERSION = \"3.3.0\";\n\n@customElement(\"knx-project-view\")\nexport class KNXProjectView extends LitElement {\n  @property({ type: Object }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public knx!: KNX;\n\n  @property({ type: Boolean, reflect: true }) public narrow!: boolean;\n\n  @property({ type: Object }) public route?: Route;\n\n  @property({ type: Array, reflect: false }) public tabs!: PageNavigation[];\n\n  @property({ type: Boolean, reflect: true, attribute: \"range-selector-hidden\" })\n  public rangeSelectorHidden = true;\n\n  @state() private _visibleGroupAddresses: string[] = [];\n\n  @state() private _groupRangeAvailable = false;\n\n  @state() private _subscribed?: () => void;\n\n  @state() private _lastTelegrams: Record<string, TelegramDict> = {};\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    if (this._subscribed) {\n      this._subscribed();\n      this._subscribed = undefined;\n    }\n  }\n\n  protected async firstUpdated() {\n    if (!this.knx.project) {\n      this.knx.loadProject().then(() => {\n        this._isGroupRangeAvailable();\n        this.requestUpdate();\n      });\n    } else {\n      // project was already loaded\n      this._isGroupRangeAvailable();\n    }\n\n    getGroupTelegrams(this.hass)\n      .then((groupTelegrams) => {\n        this._lastTelegrams = groupTelegrams;\n      })\n      .catch((err) => {\n        logger.error(\"getGroupTelegrams\", err);\n        navigate(\"/knx/error\", { replace: true, data: err });\n      });\n    this._subscribed = await subscribeKnxTelegrams(this.hass, (telegram) => {\n      this.telegram_callback(telegram);\n    });\n  }\n\n  private _isGroupRangeAvailable() {\n    const projectVersion = this.knx.project?.knxproject.info.xknxproject_version ?? \"0.0.0\";\n    logger.debug(\"project version: \" + projectVersion);\n    this._groupRangeAvailable = compare(projectVersion, MIN_XKNXPROJECT_VERSION, \">=\");\n  }\n\n  protected telegram_callback(telegram: TelegramDict): void {\n    this._lastTelegrams = {\n      ...this._lastTelegrams,\n      [telegram.destination]: telegram,\n    };\n  }\n\n  private _columns = memoize((_narrow, _language): DataTableColumnContainer<GroupAddress> => {\n    const addressWidth = \"100px\";\n    const dptWidth = \"82px\";\n    const overflowMenuWidth = \"72px\";\n\n    return {\n      address: {\n        filterable: true,\n        sortable: true,\n        title: this.knx.localize(\"project_view_table_address\"),\n        flex: 1,\n        minWidth: addressWidth,\n      },\n      name: {\n        filterable: true,\n        sortable: true,\n        title: this.knx.localize(\"project_view_table_name\"),\n        flex: 3,\n      },\n      dpt: {\n        sortable: true,\n        filterable: true,\n        title: this.knx.localize(\"project_view_table_dpt\"),\n        flex: 1,\n        minWidth: dptWidth,\n        template: (ga: GroupAddress) =>\n          ga.dpt\n            ? html`<span style=\"display:inline-block;width:24px;text-align:right;\"\n                  >${ga.dpt.main}</span\n                >${ga.dpt.sub ? \".\" + ga.dpt.sub.toString().padStart(3, \"0\") : \"\"} `\n            : \"\",\n      },\n      lastValue: {\n        filterable: true,\n        title: this.knx.localize(\"project_view_table_last_value\"),\n        flex: 2,\n        template: (ga: GroupAddress) => {\n          const lastTelegram: TelegramDict | undefined = this._lastTelegrams[ga.address];\n          if (!lastTelegram) return \"\";\n          const payload = TelegramDictFormatter.payload(lastTelegram);\n          if (lastTelegram.value == null) return html`<code>${payload}</code>`;\n          return html`<div title=${payload}>\n            ${TelegramDictFormatter.valueWithUnit(this._lastTelegrams[ga.address])}\n          </div>`;\n        },\n      },\n      updated: {\n        title: this.knx.localize(\"project_view_table_updated\"),\n        flex: 1,\n        showNarrow: false,\n        template: (ga: GroupAddress) => {\n          const lastTelegram: TelegramDict | undefined = this._lastTelegrams[ga.address];\n          if (!lastTelegram) return \"\";\n          const tooltip = `${TelegramDictFormatter.dateWithMilliseconds(lastTelegram)}\\n\\n${lastTelegram.source} ${lastTelegram.source_name}`;\n          return html`<div title=${tooltip}>\n            ${relativeTime(new Date(lastTelegram.timestamp), this.hass.locale)}\n          </div>`;\n        },\n      },\n      actions: {\n        title: \"\",\n        minWidth: overflowMenuWidth,\n        type: \"overflow-menu\",\n        template: (ga: GroupAddress) => this._groupAddressMenu(ga),\n      },\n    };\n  });\n\n  private _groupAddressMenu(groupAddress: GroupAddress): TemplateResult | typeof nothing {\n    const items: IconOverflowMenuItem[] = [];\n    if (groupAddress.dpt?.main === 1) {\n      items.push({\n        path: mdiPlus,\n        label: \"Create binary sensor\",\n        action: () => {\n          navigate(\n            \"/knx/entities/create/binary_sensor?knx.ga_sensor.state=\" + groupAddress.address,\n          );\n        },\n      });\n    }\n\n    return items.length\n      ? html`\n          <ha-icon-overflow-menu .hass=${this.hass} narrow .items=${items}> </ha-icon-overflow-menu>\n        `\n      : nothing;\n  }\n\n  private _getRows(visibleGroupAddresses: string[]): GroupAddress[] {\n    if (!visibleGroupAddresses.length)\n      // if none is set, default to show all\n      return Object.values(this.knx.project!.knxproject.group_addresses);\n\n    return Object.entries(this.knx.project!.knxproject.group_addresses).reduce(\n      (result, [key, groupAddress]) => {\n        if (visibleGroupAddresses.includes(key)) {\n          result.push(groupAddress);\n        }\n        return result;\n      },\n      [] as GroupAddress[],\n    );\n  }\n\n  private _visibleAddressesChanged(ev: HASSDomEvent<GroupRangeSelectionChangedEvent>) {\n    this._visibleGroupAddresses = ev.detail.groupAddresses;\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass || !this.knx.project) {\n      return html` <hass-loading-screen></hass-loading-screen> `;\n    }\n\n    const filtered = this._getRows(this._visibleGroupAddresses);\n\n    return html`\n      <hass-tabs-subpage\n        .hass=${this.hass}\n        .narrow=${this.narrow!}\n        .route=${this.route!}\n        .tabs=${this.tabs}\n        .localizeFunc=${this.knx.localize}\n      >\n        ${this.knx.project.project_loaded\n          ? html`${this.narrow && this._groupRangeAvailable\n                ? html`<ha-icon-button\n                    slot=\"toolbar-icon\"\n                    .label=${this.hass.localize(\"ui.components.related-filter-menu.filter\")}\n                    .path=${mdiFilterVariant}\n                    @click=${this._toggleRangeSelector}\n                  ></ha-icon-button>`\n                : nothing}\n              <div class=\"sections\">\n                ${this._groupRangeAvailable\n                  ? html`\n                      <knx-project-tree-view\n                        .data=${this.knx.project.knxproject}\n                        @knx-group-range-selection-changed=${this._visibleAddressesChanged}\n                      ></knx-project-tree-view>\n                    `\n                  : nothing}\n                <ha-data-table\n                  class=\"ga-table\"\n                  .hass=${this.hass}\n                  .columns=${this._columns(this.narrow, this.hass.language)}\n                  .data=${filtered}\n                  .hasFab=${false}\n                  .searchLabel=${this.hass.localize(\"ui.components.data-table.search\")}\n                  .clickable=${false}\n                ></ha-data-table>\n              </div>`\n          : html` <ha-card .header=${this.knx.localize(\"attention\")}>\n              <div class=\"card-content\">\n                <p>${this.knx.localize(\"project_view_upload\")}</p>\n              </div>\n            </ha-card>`}\n      </hass-tabs-subpage>\n    `;\n  }\n\n  private _toggleRangeSelector() {\n    this.rangeSelectorHidden = !this.rangeSelectorHidden;\n  }\n\n  static styles = css`\n    hass-loading-screen {\n      --app-header-background-color: var(--sidebar-background-color);\n      --app-header-text-color: var(--sidebar-text-color);\n    }\n    .sections {\n      display: flex;\n      flex-direction: row;\n      height: 100%;\n    }\n\n    :host([narrow]) knx-project-tree-view {\n      position: absolute;\n      max-width: calc(100% - 60px); /* 100% -> max 871px before not narrow */\n      z-index: 1;\n      right: 0;\n      transition: 0.5s;\n      border-left: 1px solid var(--divider-color);\n    }\n\n    :host([narrow][range-selector-hidden]) knx-project-tree-view {\n      width: 0;\n    }\n\n    :host(:not([narrow])) knx-project-tree-view {\n      max-width: 255px; /* min 616px - 816px for tree-view + ga-table (depending on side menu) */\n    }\n\n    .ga-table {\n      flex: 1;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"knx-project-view\": KNXProjectView;\n  }\n}\n"],"names":["weekdays","firstWeekdayIndex","locale","first_weekday","FirstWeekday","Intl","Locale","prototype","language","weekInfo","firstDay","getWeekStartByLocale","includes","indexOf","formatRelTimeMem","memoizeOne","RelativeTimeFormat","numeric","relativeTime","from","to","includeTense","diff","selectUnit","format","value","unit","NumberFormat","style","unitDisplay","Math","abs","MS_PER_SECOND","SECS_PER_MIN","SECS_PER_HOUR","Date","now","thresholds","resolvedThresholds","DEFAULT_THRESHOLDS","secs","second","round","mins","minute","hours","hour","fromDate","toDate","setHours","days","differenceInDays","day","firstWeekday","fromWeek","startOfWeek","weekStartsOn","toWeek","weeks","differenceInWeeks","week","years","getFullYear","months","getMonth","month","HaCard","LitElement","render","html","header","nothing","args","raised","styles","css","type","Boolean","reflect","HaIconOverflowMenu","narrow","_handleIconOverflowMenuOpened","hass","localize","mdiDotsVertical","items","map","item","divider","disabled","action","classMap","warning","path","label","narrowOnly","tooltip","e","stopPropagation","haStyle","attribute","Array","setDefaultAnimation","keyframes","opacity","options","duration","easing","HaTooltip","SlTooltip","TimeFormat","TimeZone","DateFormat","semver","validateAndParse","version","TypeError","match","Error","shift","isWildcard","s","tryParse","v","n","parseInt","isNaN","compareStrings","a","b","ap","bp","forceType","String","compareSegments","i","max","length","r","compare","v1","v2","operator","assertValidOperator","res","compareVersions","n1","n2","p1","pop","p2","split","operatorResMap","allowedOperators","Object","keys","op","join","logger","KNXLogger","KNXProjectTreeView","connectedCallback","super","initSelectableRanges","data","entries","forEach","key","groupRange","group_addresses","this","_selectableRanges","selected","groupAddresses","group_ranges","debug","_recurseData","level","childTemplates","hasSubRange","selectable","rangeClasses","rangeContent","multiselect","_selectionChangedMulti","_selectionChangedSingle","name","groupClasses","ev","rangeKey","target","getAttribute","_selectionUpdate","requestUpdate","rangePreviouslySelected","values","rangeInfo","_gaOfSelectedRanges","reduce","result","concat","fireEvent","TelegramDictFormatter","payload","telegram","isArray","curr","toString","padStart","valueWithUnit","dump","timeWithMilliseconds","timestamp","toLocaleTimeString","hour12","fractionalSecondDigits","dateWithMilliseconds","year","dptNumber","dpt_main","dpt_sub","dptNameNumber","dpt_name","dptToString","dpt","main","sub","MIN_XKNXPROJECT_VERSION","KNXProjectView","disconnectedCallback","_subscribed","undefined","firstUpdated","knx","project","_isGroupRangeAvailable","loadProject","then","getGroupTelegrams","groupTelegrams","_lastTelegrams","catch","err","error","navigate","replace","subscribeKnxTelegrams","telegram_callback","projectVersion","knxproject","info","xknxproject_version","_groupRangeAvailable","destination","_groupAddressMenu","groupAddress","push","mdiPlus","address","_getRows","visibleGroupAddresses","_visibleAddressesChanged","_visibleGroupAddresses","detail","filtered","route","tabs","project_loaded","mdiFilterVariant","_toggleRangeSelector","_columns","rangeSelectorHidden","memoize","_narrow","_language","filterable","sortable","title","flex","minWidth","template","ga","lastValue","lastTelegram","updated","showNarrow","source","source_name","actions"],"mappings":"wIAIO,MAAPA,EAAA,CACE,SACA,SACA,UACA,YACA,WACA,SACA,YAKFC,EAAAC,GACEA,EAAAC,gBAAAC,EAAAA,GAAAA,SAEM,aAAJC,KAAAC,OAAAC,UAES,IAAPF,KAAAC,OAAAJ,EAAAM,UAAAC,SAAAC,SAAA,GAEFC,EAAAA,EAAAA,GAAAT,EAAAM,UAAA,EAEFR,EAAAY,SAAAV,EAAAC,eAAAH,EAAAa,QAAAX,EAAAC,eAAA,C,mJCrBF,MAAAW,GAAAC,EAAAA,EAAAA,IAAAb,GAAA,IAAAG,KAAAW,mBAAAd,EAAAM,SAAA,CAEmDS,QAAA,WAGnDC,EAAAA,CAAAC,EAAAjB,EAAAkB,EAAAC,GAAA,KAME,MAAAC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAAC,EAAAlB,GACA,OAAAmB,EACEP,EAAAZ,GAAAsB,OAAAF,EAAAG,MAAAH,EAAAI,MAEFrB,KAAAsB,aAAAzB,EAAAM,SAAA,CACEoB,MAAA,OACAF,KAAAJ,EAAAI,KACAG,YAAA,SACFL,OAAAM,KAAAC,IAAAT,EAAAG,OAAA,E,4ICTF,MAAAO,EAAA,IACAC,EAAA,GACAC,EAAA,GAAAD,EAGO,SAAPV,EAAAJ,EAGEC,EAAAe,KAAAC,MAAAlC,EAAAmC,EAAA,IAIA,MAAAC,EAAA,IACEC,KACAF,GAAA,IAGFG,IAAArB,GAAAC,GAAAY,EACA,GAAAF,KAAAC,IAAAS,GAAAF,EAAAG,OACE,MAAO,CACLhB,MAAAK,KAAAY,MAAAF,GACAd,KAAA,UAIJ,MAAAiB,EAAAH,EAAAP,EACA,GAAAH,KAAAC,IAAAY,GAAAL,EAAAM,OACE,MAAO,CACLnB,MAAAK,KAAAY,MAAAC,GACAjB,KAAA,UAIJ,MAAAmB,EAAAL,EAAAN,EACA,GAAAJ,KAAAC,IAAAc,GAAAP,EAAAQ,KACE,MAAO,CACLrB,MAAAK,KAAAY,MAAAG,GACAnB,KAAA,QAIJ,MAAAqB,EAAA,IAAAZ,KAAAhB,GACA6B,EAAA,IAAAb,KAAAf,GAGA2B,EAAAE,SAAA,SACAD,EAAAC,SAAA,SAEA,MAAAC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAAC,GACA,OAAAE,EACE,MAAO,CACLzB,MAAAK,KAAAY,MAAAG,GACAnB,KAAA,QAGJ,GAAAI,KAAAC,IAAAmB,GAAAZ,EAAAc,IACE,MAAO,CACL3B,MAAAyB,EACAxB,KAAA,OAIJ,MAAA2B,GAAApD,EAAAA,EAAAA,IAAAC,GACAoD,GAAAC,EAAAA,EAAAA,GAAAR,EAAA,CAAyCS,aAAAH,IACzCI,GAAAF,EAAAA,EAAAA,GAAAP,EAAA,CAAqCQ,aAAAH,IAErCK,GAAAC,EAAAA,EAAAA,GAAAL,EAAAG,GACA,OAAAC,EACE,MAAO,CACLjC,MAAAyB,EACAxB,KAAA,OAGJ,GAAAI,KAAAC,IAAA2B,GAAApB,EAAAsB,KACE,MAAO,CACLnC,MAAAiC,EACAhC,KAAA,QAIJ,MAAAmC,EAAAd,EAAAe,cAAAd,EAAAc,cACAC,EAAA,GAAAF,EAAAd,EAAAiB,WAAAhB,EAAAgB,WACA,WAAAD,EACS,CACLtC,MAAAiC,EACAhC,KAAA,QAGJI,KAAAC,IAAAgC,GAAAzB,EAAA2B,OAAA,IAAAJ,EACS,CACLpC,MAAAsC,EACArC,KAAA,SAIG,CACLD,MAAAK,KAAAY,MAAAmB,GACAnC,KAAA,OAEJ,CAOO,MAAPa,EAAA,CACEE,OAAA,GACAG,OAAA,GACAE,KAAA,GACAM,IAAA,EACAQ,KAAA,EACAK,MAAA,I,iFC1HK,MAAPC,UAAAC,EAAAA,GAiEYC,MAAAA,GACR,OAAAC,EAAAA,EAAA;QACE,KAAAC,OAAAD,EAAAA,EAAA,gCAAAC,cAAAC,EAAAA;;KAKJ,C,kBAxEK,SAAAC,GAAA,KAAAC,QAAA,C,EAAMP,EAAAQ,OAAAC,EAAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2FAGCC,KAAAC,QAAeC,SAAA,K,2hBCoBtB,MAAPC,UAAAZ,EAAAA,GAOYC,MAAAA,GACR,OAAAC,EAAAA,EAAA;QACE,KAAAW,OAAAX,EAAAA,EAAA;;uBAGe,KAAAY;;;;yBAIE,KAAAC,KAAAC,SAAA;wBACDC;;;;gBAIR,KAAAC,MAAAC,KAAAC,GAAAA,EAAAC,QAAAnB,EAAAA,EAAA;;;uCAKuBA,EAAAA,EAAA;kCAELkB,EAAAE;qCACGF,EAAAG;+BACPC,EAAAA,EAAAA,GAAA,CAAaC,QAAAf,QAAAU,EAAAK;;;;iCAIXD,EAAAA,EAAAA,GAAA,CAAaC,QAAAf,QAAAU,EAAAK;gCACbL,EAAAM;;wBAERN,EAAAO;;kCAGUzB,EAAAA,EAAA;;cAGpB,KAAAgB,MAAAC,KAAAC,GAAAA,EAAAQ,WAAAxB,EAAAA,GAAAgB,EAAAC,QAAAnB,EAAAA,EAAA,+BAAAA,EAAAA,EAAA;mCAMoBkB,EAAAS;iCACDT,EAAAS,SAAA;;;iCAGAT,EAAAG;iCACAH,EAAAO;gCACDP,EAAAM;oCACIN,EAAAE;;;;KAMhC,CAEUR,6BAAAA,CAAAgB,GACRA,EAAAC,iBACF,CAEA,iBAAAxB,GACE,MAAO,CACLyB,EAAAA,GACAxB,EAAAA,EAAA;;;;;;;;;QAWJ,C,kBAlFK,SAAAH,GAAA,KAAAa,MAAA,QAAAL,QAAA,C,8BACOoB,WAAA,K,uDAEAxB,KAAAyB,S,wDAEAzB,KAAAC,W,8QC1BdyB,EAAAA,EAAAA,IAAA,gBACEC,UAAA,CAAY,CAAEC,QAAA,GAAc,CAAEA,QAAA,IAC9BC,QAAA,CAAWC,SAAA,IAAeC,OAAA,WAG5BL,EAAAA,EAAAA,IAAA,gBACEC,UAAA,CAAY,CAAEC,QAAA,GAAc,CAAEA,QAAA,IAC9BC,QAAA,CAAWC,SAAA,IAAeC,OAAA,UAIrB,MAAPC,UAAAC,EAAAA,GAAaD,EAAAlC,OAAA,CAETA,EAAAA,EACAC,EAAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;wJCjBG,IAAPhD,EAAA,SAAAA,G,yJAAYA,C,CAAZ,C,IASAmF,EAAA,SAAAA,G,+EAAYA,C,CAAZ,C,IAOAC,EAAA,SAAAA,G,yCAAYA,C,CAAZ,C,IAKAC,EAAA,SAAAA,G,mFAAYA,C,CAAZ,C,IAQA5G,EAAA,SAAAA,G,2KAAYA,C,CAAZ,C,4CC3BO,MAAM6G,EACX,6IAEWC,EAAoBC,IAC/B,GAAuB,iBAAZA,EACT,MAAM,IAAIC,UAAU,oCAEtB,MAAMC,EAAQF,EAAQE,MAAMJ,GAC5B,IAAKI,EACH,MAAM,IAAIC,MACR,uCAAuCH,gBAI3C,OADAE,EAAME,QACCF,CAAK,EAGRG,EAAcC,GAAe,MAAJA,GAAiB,MAALA,GAAkB,MAALA,EAElDC,EAAYC,IAChB,MAAMC,EAAIC,SAASF,EAAG,IACtB,OAAOG,MAAMF,GAAKD,EAAIC,CAAC,EAMnBG,EAAiBA,CAACC,EAAWC,KACjC,GAAIT,EAAWQ,IAAMR,EAAWS,GAAE,SAClC,MAAOC,EAAIC,GALKC,EAACJ,EAAoBC,WACrCD,UAAaC,EAAS,CAAGI,OAAOL,GAAIK,OAAOJ,IAAM,CAACD,EAAGC,GAIpCG,CAAUV,EAASM,GAAIN,EAASO,IACjD,OAAIC,EAAKC,EAAE,EACPD,EAAKC,GAAE,EACJ,CAAC,EAGGG,EAAkBA,CAC7BN,EACAC,KAEA,QAAKM,EAAK,EAAIA,EAAGzG,KAAO0G,IAAIR,EAAES,OAAOR,EAAGQ,QAAQF,IAAK,CACnD,MAAMG,EAAIX,EAAeC,EAAEO,IAAM,IAAKN,EAAEM,IAAM,KAC9C,GAAU,IAANG,EAAO,OAAAA,C,CAEb,OAAO,CAAC,EC7BPC,EAAAA,CAAAC,EAAAC,EAAAC,KAGDC,EAAoBD,GAIpB,MAAME,EClBLC,EAAAL,EAAAC,KAGD,MAAMK,EAAKhC,EAAiB0B,GACtBO,EAAKjC,EAAiB2B,GAGtBO,EAAKF,EAAGG,MACRC,EAAKH,EAAGE,MAGRX,EAAIJ,EAAgBY,EAAIC,GAC9B,OAAU,IAANT,EAAOA,EAGPU,GAAME,EACDhB,EAAgBc,EAAGG,MAAM,KAAMD,EAAGC,MAAM,MAChDH,GAAAE,EACQF,GAAM,EAAI,EAGZ,CAAC,EDHIH,CAAgBL,EAAIC,GAEhC,OAAOW,EAAeV,GAAUlI,SAASoI,EAAI,EAGzCQ,EAAiB,CACrB,IAAK,CAAC,GACN,KAAM,CAAC,EAAG,GACV,IAAK,CAAC,GACN,KAAM,EAAE,EAAG,GACX,IAAK,EAAE,GACP,KAAM,EAAE,EAAG,IAGPC,EAAmBC,OAAOC,KAAKH,GAE/BT,EAAuBa,IAC3B,GAAkB,iBAAPA,EACT,MAAM,IAAIxC,UACR,yDAAyDwC,GAG7D,IAAsC,IAAlCH,EAAiB5I,QAAQ+I,GAC3B,MAAM,IAAItC,MACR,qCAAqCmC,EAAiBI,KAAK,O,mFExCjE,MAAAC,EAAA,I,SAAAC,GAAA,yBAmBO,MAAPC,UAAA7F,EAAAA,GAOE8F,iBAAAA,GACEC,MAAAD,oBAEA,MAAAE,EAAAC,IACEV,OAAAW,QAAAD,GAAAE,SAAA,EAAAC,EAAAC,MACEA,EAAAC,gBAAAhC,OAAA,IACEiC,KAAAC,kBAAAJ,GAAA,CACEK,UAAA,EACAC,eAAAL,EAAAC,kBAGJN,EAAAK,EAAAM,aAAA,GACA,EAEJX,EAAA,KAAAC,KAAAU,cACAhB,EAAAiB,MAAA,cAAAJ,kBACF,CAEUvG,MAAAA,GACR,OAAAC,EAAAA,EAAA,kCAAA2G,aAAA,KAAAZ,KAAAU,qBACF,CAEUE,YAAAA,CAAAZ,EAAAa,EAAA,GACR,MAAAC,EAAAxB,OAAAW,QAAAD,GAAA9E,KAAA,EAAAiF,EAAAC,MACE,MAAAW,EAAAzB,OAAAC,KAAAa,EAAAM,cAAArC,OAAA,EAEA,KADA0C,GAAAX,EAAAC,gBAAAhC,OAAA,GAEE,OAAAlE,EAAAA,GAEF,MAAA6G,EAAAb,KAAA,KAAAI,kBACAC,IAAAQ,GAAA,KAAAT,kBAAAJ,GAAAK,SACAS,EAAA,CACE,cAAc,EACd,iBAAAJ,EACA,YAAAA,EAAA,EACAG,WAAAA,EACA,iBAAAR,EACA,qBAAAQ,IAAAR,GAEFU,EAAAjH,EAAAA,EAAA;iBACQsB,EAAAA,EAAAA,GAAA0F;uBACOD,EAAAb,EAAAhG,EAAAA;iBACN6G,EAAA,KAAAG,YAAA,KAAAC,uBAAA,KAAAC,wBAAAlH,EAAAA;;kCAMiBgG;mCACCC,EAAAkB;cAG3B,GAAAP,EAAA,CACE,MAAAQ,EAAA,CACE,iBAAAV,EACA,gBAAAA,GAEF,OAAA5G,EAAAA,EAAA,eAAAsB,EAAAA,EAAAA,GAAAgG;YACEL,KAAA,KAAAN,aAAAR,EAAAM,aAAAG,EAAA;eAEJ,CAEA,OAAA5G,EAAAA,EAAA,GAAAiH,GAAA,IAEF,OAAAjH,EAAAA,EAAA,GAAA6G,GACF,CAEQM,sBAAAA,CAAAI,GACN,MAAAC,EAAAD,EAAAE,OAAAC,aAAA,gBACArB,KAAAC,kBAAAkB,GAAAjB,UAAAF,KAAAC,kBAAAkB,GAAAjB,SACAF,KAAAsB,mBACAtB,KAAAuB,eACF,CAEQR,uBAAAA,CAAAG,GACN,MAAAC,EAAAD,EAAAE,OAAAC,aAAA,gBACAG,EAAA,KAAAvB,kBAAAkB,GAAAjB,SACAlB,OAAAyC,OAAA,KAAAxB,mBAAAL,SAAA8B,IACEA,EAAAxB,UAAA,KAEFF,KAAAC,kBAAAkB,GAAAjB,UAAAsB,EACAxB,KAAAsB,mBACAtB,KAAAuB,eACF,CAEQD,gBAAAA,GACN,MAAAK,EAAA3C,OAAAyC,OAAA,KAAAxB,mBAAA2B,QAAA,CAAAC,EAAAH,IAAAA,EAAAxB,SAAA2B,EAAAC,OAAAJ,EAAAvB,gBAAA0B,GAAA,IAKAzC,EAAAiB,MAAA,oBAAAsB,IACAI,EAAAA,EAAAA,GAAA,0CAAuD5B,eAAAwB,GACzD,C,kBApGK,SAAA7H,GAAA,KAAA+G,aAAA,OAAAZ,kBAAA,E,EAAMX,EAAAtF,OAAAC,EAAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gCACCyB,WAAA,K,uDAEAA,WAAA,K,iOC7BP,MAAPsG,EAAA,CACEC,QAAAC,GACE,MAAAA,EAAAD,QAAA,GACAtG,MAAAwG,QAAAD,EAAAD,SAAAC,EAAAD,QAAAL,QAAA,CAAAtD,EAAA8D,IAAA9D,EAAA8D,EAAAC,SAAA,IAAAC,SAAA,cAAAJ,EAAAD,QAAAI,WAKFE,cAAAL,GACE,MAAAA,EAAAnL,MAAA,GACA,iBAAAmL,EAAAnL,OAAA,kBAAAmL,EAAAnL,OAAA,iBAAAmL,EAAAnL,MAKEmL,EAAAnL,MAAAsL,YAAAH,EAAAlL,KAAA,IAAAkL,EAAAlL,KAAA,KAEFwL,EAAAA,EAAAA,IAAAN,EAAAnL,OAGF0L,qBAAAP,GACE,IAAAzK,KAAAyK,EAAAQ,WACAC,mBAAA,CAAgC,SAAU,CACxCC,QAAA,EACAxK,KAAA,UACAF,OAAA,UACAH,OAAA,UACA8K,uBAAA,IAIJC,qBAAAZ,GACE,IAAAzK,KAAAyK,EAAAQ,WACAC,mBAAA,IACEI,KAAA,UACAxJ,MAAA,UACAb,IAAA,UACAN,KAAA,UACAF,OAAA,UACAH,OAAA,UACA8K,uBAAA,IAIJG,UAAAd,GACE,MAAAA,EAAAe,SAAA,GACA,MAAAf,EAAAgB,QAAAhB,EAAAe,SAAAZ,WAAAH,EAAAe,SAAAZ,WAAA,IAAAH,EAAAgB,QAAAb,WAAAC,SAAA,OAKFa,cAAAjB,IACE,MAAAc,EAAAhB,EAAAgB,UAAAd,GACA,aAAAA,EAAAkB,SAAA,OAAAJ,IACAA,EAAA,OAAAA,KAAAd,EAAAkB,WAAAlB,EAAAkB,QAAA,GAIJC,EAAAC,GACE,MAAAA,EAAA,GACAA,EAAAC,MAAAD,EAAAE,IAAA,IAAAF,EAAAE,IAAAnB,WAAAC,SAAA,U,oaC/BFlD,EAAA,IAAAC,EAAAA,EAAA,oBAEAoE,EAAA,QAGO,MAAPC,UAAAjK,EAAAA,GAsBSkK,oBAAAA,GACLnE,MAAAmE,uBACI3D,KAAJ4D,cACE5D,KAAA4D,cACA5D,KAAA4D,iBAAAC,EAEJ,CAEA,kBAAAC,GACO9D,KAAL+D,IAAAC,QAOEhE,KAAAiE,yBANAjE,KAAA+D,IAAAG,cAAAC,MAAA,KACEnE,KAAAiE,yBACAjE,KAAAuB,eAAA,KAOJ6C,EAAAA,EAAAA,IAAA,KAAA5J,MAAA2J,MAAAE,IAEIrE,KAAAsE,eAAAD,CAAA,IACFE,OAAAC,IAEEpF,EAAAqF,MAAA,oBAAAD,IACAE,EAAAA,EAAAA,GAAA,cAAyBC,SAAA,EAAejF,KAAA8E,GAAY,IAExDxE,KAAA4D,kBAAAgB,EAAAA,EAAAA,IAAA5E,KAAAxF,MAAA0H,IACElC,KAAA6E,kBAAA3C,EAAA,GAEJ,CAEQ+B,sBAAAA,GACN,MAAAa,EAAA,KAAAf,IAAAC,SAAAe,WAAAC,KAAAC,qBAAA,QACA7F,EAAAiB,MAAA,oBAAAyE,GACA9E,KAAAkF,sBAAAjH,EAAAA,EAAAA,GAAA6G,EAAArB,EAAA,KACF,CAEUoB,iBAAAA,CAAA3C,GACRlC,KAAAsE,eAAA,IACKtE,KAAHsE,eACA,CAAApC,EAAAiD,aAAAjD,EAEJ,CAsEQkD,iBAAAA,CAAAC,GACN,MAAA1K,EAAA,GAaA,OAZA,IAAA0K,EAAA/B,KAAAC,MACE5I,EAAA2K,KAAA,CACEnK,KAAAoK,EACAnK,MAAA,uBACAJ,OAAAA,MACE0J,EAAAA,EAAAA,GAAA,0DAAAW,EAAAG,QAAA,IAON7K,EAAAoD,OAAApE,EAAAA,EAAA;yCAEmC,KAAAa,sBAAAG;UAC/Bd,EAAAA,EAEN,CAEQ4L,QAAAA,CAAAC,GACN,OAAAA,EAAA3H,OAIAiB,OAAAW,QAAA,KAAAoE,IAAAC,QAAAe,WAAAhF,iBAAA6B,QAAA,CAAAC,GAAAhC,EAAAwF,MAEIK,EAAAxP,SAAA2J,IACEgC,EAAAyD,KAAAD,GAEFxD,IACF,IARA7C,OAAAyC,OAAA,KAAAsC,IAAAC,QAAAe,WAAAhF,gBAWJ,CAEQ4F,wBAAAA,CAAAzE,GACNlB,KAAA4F,uBAAA1E,EAAA2E,OAAA1F,cACF,CAEUzG,MAAAA,GACR,IAAKsG,KAALxF,OAAA,KAAAuJ,IAAAC,QACE,OAAArK,EAAAA,EAAA,gDAGF,MAAAmM,EAAA,KAAAL,SAAA,KAAAG,wBAEA,OAAAjM,EAAAA,EAAA;;gBAEU,KAAAa;kBACE,KAAAF;iBACD,KAAAyL;gBACD,KAAAC;wBACQ,KAAAjC,IAAAtJ;;UAEd,KAAAsJ,IAAAC,QAAAiC,eAAAtM,EAAAA,EAAA,QAAAW,QAAA,KAAA4K,qBAAAvL,EAAAA,EAAA;;6BAImB,KAAAa,KAAAC,SAAA;4BACDyL;6BACC,KAAAC;sCACStM,EAAAA;;kBAGpB,KAAAqL,qBAAAvL,EAAAA,EAAA;;gCAGc,KAAAoK,IAAAC,QAAAe;6DAC6B,KAAAY;;sBAEvC9L,EAAAA;;;0BAII,KAAAW;6BACG,KAAA4L,SAAA,KAAA9L,OAAA,KAAAE,KAAA1E;0BACHgQ;6BACE;iCACK,KAAAtL,KAAAC,SAAA;gCACF;;sBAETd,EAAAA,EAAA,0BAAAoK,IAAAtJ,SAAA;;qBAGD,KAAAsJ,IAAAtJ,SAAA;;;;KAKjB,CAEQ0L,oBAAAA,GACNnG,KAAAqG,qBAAArG,KAAAqG,mBACF,C,kBAtOK,SAAAvM,GAAA,KAAAuM,qBAAA,OAAAT,uBAAA,QAAAV,sBAAA,OAAAZ,eAAA,QAAA8B,UAAAE,EAAAA,EAAAA,IAAA,CAAAC,EAAAC,KAwEI,CACLhB,QAAA,CACEiB,YAAA,EACAC,UAAA,EACAC,MAAA,KAAA5C,IAAAtJ,SAAA,8BACAmM,KAAA,EACAC,SAVJ,SAYE7F,KAAA,CACEyF,YAAA,EACAC,UAAA,EACAC,MAAA,KAAA5C,IAAAtJ,SAAA,2BACAmM,KAAA,GAEFtD,IAAA,CACEoD,UAAA,EACAD,YAAA,EACAE,MAAA,KAAA5C,IAAAtJ,SAAA,0BACAmM,KAAA,EACAC,SAtBJ,OAuBIC,SAAAC,GAAAA,EAAAzD,IAAA3J,EAAAA,EAAA;qBAGWoN,EAAAzD,IAAAC;mBACFwD,EAAAzD,IAAAE,IAAA,IAAAuD,EAAAzD,IAAAE,IAAAnB,WAAAC,SAAA,iBAGX0E,UAAA,CACEP,YAAA,EACAE,MAAA,KAAA5C,IAAAtJ,SAAA,iCACAmM,KAAA,EACAE,SAAAC,IACE,MAAAE,EAAA,KAAA3C,eAAAyC,EAAAvB,SACA,IAAAyB,EAAA,SACA,MAAAhF,EAAAD,EAAAA,EAAAA,QAAAiF,GACA,aAAAA,EAAAlQ,MAAA4C,EAAAA,EAAA,SAAAsI,WACAtI,EAAAA,EAAA,cAAAsI;cACED,EAAAA,EAAAA,cAAA,KAAAsC,eAAAyC,EAAAvB;iBACI,GAGV0B,QAAA,CACEP,MAAA,KAAA5C,IAAAtJ,SAAA,8BACAmM,KAAA,EACAO,YAAA,EACAL,SAAAC,IACE,MAAAE,EAAA,KAAA3C,eAAAyC,EAAAvB,SACA,IAAAyB,EAAA,SACA,MAAA3L,EAAA,GAAA0G,EAAAA,EAAAA,qBAAAiF,SAAAA,EAAAG,UAAAH,EAAAI,cACA,OAAA1N,EAAAA,EAAA,cAAA2B;eACE9E,EAAAA,EAAAA,GAAA,IAAAiB,KAAAwP,EAAAvE,WAAA,KAAAlI,KAAAhF;iBACI,GAGV8R,QAAA,CACEX,MAAA,GACAE,SA1DJ,OA2DI3M,KAAA,gBACA4M,SAAAC,GAAA,KAAA3B,kBAAA2B,O,EAlIKrD,EAAA1J,OAAAC,EAAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gCACCC,KAAA8E,U,uDAEAtD,WAAA,K,sDAEAxB,KAAAC,QAAeC,SAAA,K,yDAEfF,KAAA8E,U,wDAEA9E,KAAAyB,MAAavB,SAAA,K,uDAEbF,KAAAC,QAAeC,SAAA,EAAesB,UAAA,2B"}