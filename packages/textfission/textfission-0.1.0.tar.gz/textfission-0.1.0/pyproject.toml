[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "textfission"
version = "0.1.0"
description = "A powerful Python library for intelligent text processing, question generation, and answer generation for LLM fine-tuning datasets"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Sun Zhihan", email = "sunzhihan20@mails.ucas.edu.cn"}
]
maintainers = [
    {name = "Sun Zhihan", email = "sunzhihan20@mails.ucas.edu.cn"}
]
keywords = ["nlp", "text-processing", "question-generation", "llm", "fine-tuning", "dataset", "ai", "machine-learning"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
requires-python = ">=3.8"
dependencies = [
    "openai>=1.0.0",
    "langchain>=0.0.200",
    "tiktoken>=0.4.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "tqdm>=4.65.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "aiohttp>=3.8.0",
    "cachetools>=5.0.0",
    "tenacity>=8.0.0",
    "nltk>=3.8.1",
    "langdetect>=1.0.9",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]
all = [
    "openai>=1.0.0",
    "langchain>=0.0.200",
    "dashscope>=1.0.0",
    "erniebot>=0.1.0",
]

[project.urls]
Homepage = "https://github.com/GeoSzh/text-fission"
Documentation = "https://github.com/GeoSzh/text-fission#readme"
Repository = "https://github.com/GeoSzh/text-fission"
"Bug Tracker" = "https://github.com/GeoSzh/text-fission/issues"

[project.scripts]
textfission = "textfission.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["textfission*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["textfission"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "openai.*",
    "langchain.*",
    "dashscope.*",
    "erniebot.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["textfission"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 