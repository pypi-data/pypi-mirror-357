#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–∏–º–∏–Ω–≥–∞ –≤ EvolutionInference LLM
"""

import os
import time

from evolution_langchain import EvolutionInference


def demo_streaming_basic():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –±–∞–∑–æ–≤–æ–≥–æ —Å—Ç—Ä–∏–º–∏–Ω–≥–∞"""
    print("üåä –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å—Ç—Ä–∏–º–∏–Ω–≥–∞")
    print("=" * 50)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    has_credentials = all(
        [
            os.getenv("EVOLUTION_KEY_ID")
            and os.getenv("EVOLUTION_KEY_ID") != "your_key_id_here",
            os.getenv("EVOLUTION_SECRET")
            and os.getenv("EVOLUTION_SECRET") != "your_secret_here",
            os.getenv("EVOLUTION_BASE_URL")
            and os.getenv("EVOLUTION_BASE_URL")
            != "https://your-endpoint.cloud.ru/v1",
        ]
    )

    if not has_credentials:
        print("‚ö†Ô∏è –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
        print("üí° –ü—Ä–∏–º–µ—Ä –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω –≤ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ")
        print()

    # –°–æ–∑–¥–∞–Ω–∏–µ LLM —Å –≤–∫–ª—é—á–µ–Ω–Ω—ã–º —Å—Ç—Ä–∏–º–∏–Ω–≥–æ–º
    llm = EvolutionInference(
        model="your-model-name",
        key_id=os.getenv("EVOLUTION_KEY_ID", "your-key-id"),
        secret=os.getenv("EVOLUTION_SECRET", "your-secret"),
        base_url=os.getenv(
            "EVOLUTION_BASE_URL", "https://your-api-endpoint.com/v1"
        ),
        max_tokens=500,
        temperature=0.7,
        stream=True,  # –í–∫–ª—é—á–∞–µ–º —Å—Ç—Ä–∏–º–∏–Ω–≥
    )

    print("‚úÖ LLM —Å —Å—Ç—Ä–∏–º–∏–Ω–≥–æ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    print(f"üìù –ú–æ–¥–µ–ª—å: {llm.model}")
    print(f"üåä –°—Ç—Ä–∏–º–∏–Ω–≥: {llm.stream}")
    print()

    # –ü—Ä–∏–º–µ—Ä —Å—Ç—Ä–∏–º–∏–Ω–≥–∞
    prompt = (
        "–†–∞—Å—Å–∫–∞–∂–∏ –∏—Å—Ç–æ—Ä–∏—é –æ –º–∞–ª–µ–Ω—å–∫–æ–º —Ä–æ–±–æ—Ç–µ, –∫–æ—Ç–æ—Ä—ã–π –º–µ—á—Ç–∞–ª —Å—Ç–∞—Ç—å —Ö—É–¥–æ–∂–Ω–∏–∫–æ–º"
    )
    print(f"üí¨ –ó–∞–ø—Ä–æ—Å: {prompt}")
    print("üåä –û—Ç–≤–µ—Ç (—Å—Ç—Ä–∏–º–∏–Ω–≥):")

    if has_credentials:
        try:
            # –í—ã–ø–æ–ª–Ω—è–µ–º —Å—Ç—Ä–∏–º–∏–Ω–≥
            response = llm.invoke(prompt)
            print("\n‚úÖ –°—Ç—Ä–∏–º–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω")
            print(f"üìù –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç: {response}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å—Ç—Ä–∏–º–∏–Ω–≥–µ: {e}")
            print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API")
    else:
        print("‚ö†Ô∏è –°—Ç—Ä–∏–º–∏–Ω–≥ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω (–¥–µ–º–æ-—Ä–µ–∂–∏–º)")
        print("üí° –î–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å—Ç—Ä–∏–º–∏–Ω–≥–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("üåä –î–µ–º–æ-–æ—Ç–≤–µ—Ç: –ü—Ä–∏–≤–µ—Ç! –Ø –º–∞–ª–µ–Ω—å–∫–∏–π —Ä–æ–±–æ—Ç...")
        time.sleep(0.5)
        print("üåä –î–µ–º–æ-–æ—Ç–≤–µ—Ç: ...–∫–æ—Ç–æ—Ä—ã–π –º–µ—á—Ç–∞–ª —Å—Ç–∞—Ç—å —Ö—É–¥–æ–∂–Ω–∏–∫–æ–º...")
        time.sleep(0.5)
        print("üåä –î–µ–º–æ-–æ—Ç–≤–µ—Ç: ...–∏ –æ–¥–Ω–∞–∂–¥—ã –æ–Ω –Ω–∞—à–µ–ª –∫–∏—Å—Ç—å...")
        time.sleep(0.5)
        print("üåä –î–µ–º–æ-–æ—Ç–≤–µ—Ç: ...–∏ –Ω–∞—á–∞–ª —Ä–∏—Å–æ–≤–∞—Ç—å –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–µ –∫–∞—Ä—Ç–∏–Ω—ã!")


def demo_streaming_with_callbacks():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å—Ç—Ä–∏–º–∏–Ω–≥–∞ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –∫–æ–ª–±—ç–∫–∞–º–∏"""
    print("\nüîÑ –°—Ç—Ä–∏–º–∏–Ω–≥ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –∫–æ–ª–±—ç–∫–∞–º–∏")
    print("=" * 50)

    print("üí° –í —Ä–µ–∞–ª—å–Ω–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å:")
    print("   - –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä")
    print("   - –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª")
    print("   - –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ —á–∞—Ç")
    print("   - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ")
    print("   - –ê–Ω–∞–ª–∏—Ç–∏–∫–∞")

    print("\nüîß –ü—Ä–∏–º–µ—Ä –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –∫–æ–ª–±—ç–∫–∞:")
    print("""
class StreamingCallback:
    def on_llm_start(self, serialized, prompts, **kwargs):
        print("üöÄ –ù–∞—á–∞–ª–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏...")
    def on_llm_new_token(self, token, **kwargs):
        print(token, end="", flush=True)
    def on_llm_end(self, response, **kwargs):
        print("\\n‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    """)


def demo_streaming_configuration():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–∏–º–∏–Ω–≥–∞"""
    print("\n‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å—Ç—Ä–∏–º–∏–Ω–≥–∞")
    print("=" * 50)

    print("üîß –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:")
    print("   stream=True/False - –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å —Å—Ç—Ä–∏–º–∏–Ω–≥")
    print("   max_tokens - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤")
    print("   temperature - –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–æ–≤")
    print("   top_p - —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –æ—Ç–≤–µ—Ç–æ–≤")
    print("   frequency_penalty - —à—Ç—Ä–∞—Ñ –∑–∞ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è")
    print("   presence_penalty - —à—Ç—Ä–∞—Ñ –∑–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ —Å–ª–æ–≤")

    print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç—Ä–∏–º–∏–Ω–≥ –¥–ª—è –¥–ª–∏–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤")
    print("   - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ max_tokens –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –¥–ª–∏–Ω—ã")
    print("   - –î–æ–±–∞–≤—å—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫")
    print("   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–ª–±—ç–∫–∏ –¥–ª—è –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ Evolution LangChain - –ü—Ä–∏–º–µ—Ä—ã —Å—Ç—Ä–∏–º–∏–Ω–≥–∞")
    print("=" * 60)

    demo_streaming_basic()
    demo_streaming_with_callbacks()
    demo_streaming_configuration()

    print("\nüéâ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å—Ç—Ä–∏–º–∏–Ω–≥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("üìö –°–º. –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")


if __name__ == "__main__":
    main()
