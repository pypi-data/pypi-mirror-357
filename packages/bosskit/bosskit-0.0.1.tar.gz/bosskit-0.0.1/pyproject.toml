[project]
name = "bosskit"
version = "0.0.1"
description = "BossNet AI Agent Toolkit - Python library for building AI-powered agents"
readme = "README.md"
authors = [
    { name = "BossNet", email = "info@boss-net.com" }
]
keywords = ["ai", "machine learning", "agents", "python"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries",
    "Operating System :: OS Independent",
]
requires-python = ">=3.8,<3.14"

[project.urls]
Homepage = "https://github.com/boss-net/ai-masterclass"
Documentation = "https://bosskit.readthedocs.io/"
Issues = "https://github.com/boss-net/ai-masterclass/issues"

[project.scripts]
bosskit = "bosskit.__main__:main"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 133
target-version = ['py311', 'py312', 'py313']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 166
skip_gitignore = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test", "test"]
python_functions = ["test_*"]
addopts = ["--cov=bosskit", "--cov-report=term-missing"]

[tool.coverage.run]
source = ["bosskit"]
omit = ["tests/*", "*.pyc", "__pycache__/*"]

[tool.coverage.report]
show_missing = true
skip_covered = true

[tool.setuptools]
include-package-data = true
packages = { find = { where = ["."], include = ["bosskit"] } }

[tool.setuptools.dynamic]
dependencies = { file = "requirements/requirements.txt" }

[tool.setuptools.dynamic.optional-dependencies]
dev = { file = "requirements/requirements-dev.txt" }
test = { file = "requirements/requirements-test.txt" }

[tool.setuptools_scm]
write_to = "bosskit/_version.py"
