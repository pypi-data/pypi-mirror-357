Metadata-Version: 2.4
Name: tablevault
Version: 0.1.1
Summary: Dataframe and File Transformation Execution and Versioning Tool.
Author-email: Jinjin Zhao <j2zhao@uchicago.edu>
License: BSD 3-Clause License
        
        Copyright (c) 2025, Jin Jin Zhao
        All rights reserved.
        
        Redistribution and use in source and binary forms, with or without
        modification, are permitted provided that the following conditions are met:
        
        * Redistributions of source code must retain the above copyright notice, this
          list of conditions and the following disclaimer.
        
        * Redistributions in binary form must reproduce the above copyright notice,
          this list of conditions and the following disclaimer in the documentation
          and/or other materials provided with the distribution.
        
        * Neither the name of the copyright holder nor the names of its
          contributors may be used to endorse or promote products derived from
          this software without specific prior written permission.
        
        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
        AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
        DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
        FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
        SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
        CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
        OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
        OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
Keywords: example,package,python
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Requires-Dist: pandas
Requires-Dist: filelock
Requires-Dist: pyyaml
Requires-Dist: dataclasses_json
Requires-Dist: psutil
Requires-Dist: pydantic
Requires-Dist: click
Requires-Dist: rich
Provides-Extra: dev
Requires-Dist: ruff; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Requires-Dist: mkdocs-material; extra == "dev"
Requires-Dist: mike; extra == "dev"
Dynamic: license-file

# Welcome to TableVault

TableVault is designed to manage data tables and artifacts in **complex and dynamic data workflows**. It promotes **data reusability** by capturing the full context of data transformations and ensuring atomic and transactional data statesâ€”transformations either clearly succeed or fail. It enhances **data interoperability** by easily connecting previous results with the configuration and input variables of subsequent transformations.


TableVault integrates with Python and can be used with popular data science libraries and tools, including Jupyter Notebooks, Pandas, NumPy, Transformers, and many others. The tool is particularly effective for workflows involving multiple dataframes, external artifacts (e.g., images, videos, documents), and **large language model executions**. TableVault is suited for **agentic pipelines** since one data-generating process can easily spin additional subprocesses.

**Explore: [Detailed Docs and Use Cases](https://j2zhao.github.io/tablevault/)**

Installation via pip:

```bash
pip install tablevault
```

This library is fully compatible with `Python>=3.11`.


## Quick Start

Check out [Basic Workflow](https://j2zhao.github.io/tablevault/workflows/workflow/) for a simple generic setup, and our CoLab examples [(1) Short Stories Q&A with OpenAI](https://colab.research.google.com/drive/1vHg5Vb8r1Zax2pKLOX6phPEuIDVhFctC?usp=sharing) and  [(2) GritLM Embeddings from Scientific Abstracts](https://colab.research.google.com/drive/1X4tFpPSfMnQ_Ch0nSNUTmiEcT0Eo40Uj?usp=sharing) for concrete use cases.
